#version 440

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 0, binding = 0, std140) uniform CB1 {
	vec4 InvLowResolution;
	vec4 InvHighResolution;
	vec4 AdditionalParams;
};
layout(set = 0, binding = 1) uniform highp texture2D LoResDB;
layout(set = 0, binding = 2) uniform highp texture2D HiResDB;
layout(set = 0, binding = 3) uniform highp texture2D LoResAO1;
layout(set = 0, binding = 4) uniform highp texture2D LoResAO2;
writeonly layout(set = 0, binding = 5, r32f) highp uniform image2D AoResult_origX0X;
vec4 u_xlat0;
int u_xlati0;
uint u_xlatu0;
bvec2 u_xlatb0;
vec4 u_xlat1;
ivec4 u_xlati1;
uint u_xlatu1;
bool u_xlatb1;
vec4 u_xlat2;
ivec4 u_xlati2;
uvec4 u_xlatu2;
bool u_xlatb2;
vec4 u_xlat3;
ivec2 u_xlati3;
bool u_xlatb3;
float u_xlat4;
ivec4 u_xlati4;
bool u_xlatb4;
vec4 u_xlat5;
float u_xlat6;
float u_xlat7;
vec3 u_xlat8;
ivec3 u_xlati8;
float u_xlat9;
float u_xlat10;
bool u_xlatb10;
float u_xlat11;
int u_xlati11;
bool u_xlatb11;
float u_xlat12;
float u_xlat13;
vec2 u_xlat16;
int u_xlati16;
float u_xlat17;
ivec2 u_xlati17;
bool u_xlatb17;
vec2 u_xlat18;
bvec2 u_xlatb18;
float u_xlat19;
float u_xlat20;
float u_xlat21;
float u_xlat24;
int u_xlati24;
bool u_xlatb24;
float u_xlat25;
bool u_xlatb25;
float u_xlat26;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
shared struct {
	uint value[1];
} TGSM0[256];
shared struct {
	uint value[1];
} TGSM1[256];
shared struct {
	uint value[1];
} TGSM2[256];
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(set = 0, binding = 6) uniform highp  sampler samplerLoResDB;
layout(set = 0, binding = 7) uniform highp  sampler samplerHiResDB;
layout(set = 0, binding = 8) uniform highp  sampler samplerLoResAO1;
layout(set = 0, binding = 9) uniform highp  sampler samplerLoResAO2;
void main()
{
    u_xlati0 = int(gl_LocalInvocationID.x) << 1;
    u_xlati0 = int(gl_LocalInvocationID.y) * 32 + u_xlati0;
    u_xlati8.xy = ivec2(gl_LocalInvocationID.xy) + ivec2(gl_GlobalInvocationID.xy);
    u_xlati8.xy = u_xlati8.xy + ivec2(int(0xFFFFFFFEu), int(0xFFFFFFFEu));
    u_xlat8.xy = vec2(u_xlati8.xy);
    u_xlat8.xy = u_xlat8.xy * InvLowResolution.xy;
    u_xlat1 = textureGather(sampler2D(LoResAO1, samplerLoResAO1), u_xlat8.xy);
    u_xlat2 = textureGather(sampler2D(LoResAO2, samplerLoResAO2), u_xlat8.xy);
    u_xlat1 = min(u_xlat1, u_xlat2);
    TGSM1[u_xlati0].value[(0 >> 2)] = floatBitsToUint(u_xlat1.w);
    u_xlati24 = u_xlati0 + 1;
    TGSM1[u_xlati24].value[(0 >> 2)] = floatBitsToUint(u_xlat1.z);
    u_xlati17.xy = ivec2(u_xlati0) + ivec2(16, 17);
    TGSM1[u_xlati17.x].value[(0 >> 2)] = floatBitsToUint(u_xlat1.x);
    TGSM1[u_xlati17.y].value[(0 >> 2)] = floatBitsToUint(u_xlat1.y);
    u_xlat2 = textureGather(sampler2D(LoResDB, samplerLoResDB), u_xlat8.xy);
    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;
    TGSM0[u_xlati0].value[(0 >> 2)] = floatBitsToUint(u_xlat2.w);
    TGSM0[u_xlati24].value[(0 >> 2)] = floatBitsToUint(u_xlat2.z);
    TGSM0[u_xlati17.x].value[(0 >> 2)] = floatBitsToUint(u_xlat2.x);
    TGSM0[u_xlati17.y].value[(0 >> 2)] = floatBitsToUint(u_xlat2.y);
    //memoryBarrierShared;
    barrier();
    u_xlatb0.xy = lessThan(uvec4(gl_LocalInvocationIndex, gl_LocalInvocationIndex, gl_LocalInvocationIndex, gl_LocalInvocationIndex), uvec4(39u, 45u, 0u, 0u)).xy;
    if(u_xlatb0.x){
        u_xlatu0 = gl_LocalInvocationIndex / 3u;
        u_xlatu1 = gl_LocalInvocationIndex % 3u;
        u_xlati16 = int(u_xlatu1) * 3;
        u_xlati0 = int(u_xlatu0) * 16 + u_xlati16;
        u_xlat16.x = uintBitsToFloat(TGSM1[u_xlati0].value[(0 >> 2) + 0]);
        u_xlati1 = ivec4(u_xlati0) + ivec4(1, 2, 3, 4);
        u_xlat24 = uintBitsToFloat(TGSM1[u_xlati1.x].value[(0 >> 2) + 0]);
        u_xlat2.x = uintBitsToFloat(TGSM1[u_xlati1.y].value[(0 >> 2) + 0]);
        u_xlat10 = uintBitsToFloat(TGSM1[u_xlati1.z].value[(0 >> 2) + 0]);
        u_xlat18.x = uintBitsToFloat(TGSM1[u_xlati1.w].value[(0 >> 2) + 0]);
        u_xlati3.xy = ivec2(u_xlati0) + ivec2(5, 6);
        u_xlat26 = uintBitsToFloat(TGSM1[u_xlati3.x].value[(0 >> 2) + 0]);
        u_xlat19 = uintBitsToFloat(TGSM1[u_xlati3.y].value[(0 >> 2) + 0]);
        u_xlat27 = uintBitsToFloat(TGSM0[u_xlati0].value[(0 >> 2) + 0]);
        u_xlat4 = uintBitsToFloat(TGSM0[u_xlati1.x].value[(0 >> 2) + 0]);
        u_xlat12 = uintBitsToFloat(TGSM0[u_xlati1.y].value[(0 >> 2) + 0]);
        u_xlat17 = uintBitsToFloat(TGSM0[u_xlati1.z].value[(0 >> 2) + 0]);
        u_xlat25 = uintBitsToFloat(TGSM0[u_xlati1.w].value[(0 >> 2) + 0]);
        u_xlat3.x = uintBitsToFloat(TGSM0[u_xlati3.x].value[(0 >> 2) + 0]);
        u_xlat11 = uintBitsToFloat(TGSM0[u_xlati3.y].value[(0 >> 2) + 0]);
        u_xlat27 = (-u_xlat27) + u_xlat4;
        u_xlat4 = (-u_xlat4) + u_xlat12;
        u_xlat12 = (-u_xlat12) + u_xlat17;
        u_xlat17 = (-u_xlat17) + u_xlat25;
        u_xlat25 = (-u_xlat25) + u_xlat3.x;
        u_xlat3.x = (-u_xlat3.x) + u_xlat11;
        u_xlat11 = u_xlat27 * u_xlat27 + AdditionalParams.y;
        u_xlat20 = u_xlat4 * u_xlat4 + AdditionalParams.y;
        u_xlat28 = u_xlat12 * u_xlat12 + AdditionalParams.y;
        u_xlat5.x = u_xlat17 * u_xlat17 + AdditionalParams.y;
        u_xlat13 = u_xlat25 * u_xlat25 + AdditionalParams.y;
        u_xlat21 = u_xlat3.x * u_xlat3.x + AdditionalParams.y;
        u_xlat27 = u_xlat27 * u_xlat4 + AdditionalParams.y;
        u_xlat27 = u_xlat27 * u_xlat27;
        u_xlat11 = u_xlat11 * u_xlat20;
        u_xlat11 = u_xlat11 * AdditionalParams.z;
        u_xlatb11 = u_xlat11<u_xlat27;
        u_xlat27 = u_xlat4 * u_xlat12 + AdditionalParams.y;
        u_xlat27 = u_xlat27 * u_xlat27;
        u_xlat4 = u_xlat28 * u_xlat20;
        u_xlat4 = u_xlat4 * AdditionalParams.z;
        u_xlatb27 = u_xlat4<u_xlat27;
        u_xlat4 = u_xlat12 * u_xlat17 + AdditionalParams.y;
        u_xlat4 = u_xlat4 * u_xlat4;
        u_xlat12 = u_xlat28 * u_xlat5.x;
        u_xlat12 = u_xlat12 * AdditionalParams.z;
        u_xlatb4 = u_xlat12<u_xlat4;
        u_xlat17 = u_xlat17 * u_xlat25 + AdditionalParams.y;
        u_xlat17 = u_xlat17 * u_xlat17;
        u_xlat12 = u_xlat13 * u_xlat5.x;
        u_xlat12 = u_xlat12 * AdditionalParams.z;
        u_xlatb17 = u_xlat12<u_xlat17;
        u_xlat25 = u_xlat25 * u_xlat3.x + AdditionalParams.y;
        u_xlat25 = u_xlat25 * u_xlat25;
        u_xlat3.x = u_xlat21 * u_xlat13;
        u_xlat3.x = u_xlat3.x * AdditionalParams.z;
        u_xlatb25 = u_xlat3.x<u_xlat25;
        u_xlatb3 = u_xlatb27 || u_xlatb11;
        u_xlati3.x = u_xlatb3 ? 1 : int(0);
        u_xlat3.x = (u_xlati3.x != 0) ? u_xlat24 : u_xlat2.x;
        u_xlat16.x = (u_xlatb11) ? u_xlat16.x : u_xlat3.x;
        u_xlatb11 = u_xlatb27 || u_xlatb4;
        u_xlati11 = u_xlatb11 ? 1 : int(0);
        u_xlat7 = (u_xlati11 != 0) ? u_xlat2.x : u_xlat10;
        u_xlat6 = (u_xlati11 != 0) ? u_xlat10 : u_xlat2.x;
        u_xlat5.x = u_xlat7;
        u_xlat11 = (u_xlatb4) ? u_xlat18.x : u_xlat6;
        u_xlat16.x = u_xlat16.x + u_xlat11;
        u_xlat16.x = u_xlat16.x * 0.5 + u_xlat3.x;
        u_xlat16.x = u_xlat2.x + u_xlat16.x;
        u_xlat16.x = u_xlat6 + u_xlat16.x;
        u_xlat16.x = u_xlat16.x * 0.25;
        TGSM2[u_xlati0].value[(0 >> 2)] = floatBitsToUint(u_xlat16.x);
        u_xlat16.x = (u_xlatb27) ? u_xlat24 : u_xlat5.x;
        u_xlatb24 = u_xlatb4 || u_xlatb17;
        u_xlati24 = u_xlatb24 ? 1 : int(0);
        u_xlat7 = (u_xlati24 != 0) ? u_xlat10 : u_xlat18.x;
        u_xlat6 = (u_xlati24 != 0) ? u_xlat18.x : u_xlat10;
        u_xlat3.x = u_xlat7;
        u_xlat24 = (u_xlatb17) ? u_xlat26 : u_xlat6;
        u_xlat16.x = u_xlat24 + u_xlat16.x;
        u_xlat16.x = u_xlat16.x * 0.5 + u_xlat5.x;
        u_xlat16.x = u_xlat10 + u_xlat16.x;
        u_xlat16.x = u_xlat6 + u_xlat16.x;
        u_xlat16.x = u_xlat16.x * 0.25;
        TGSM2[u_xlati1.x].value[(0 >> 2)] = floatBitsToUint(u_xlat16.x);
        u_xlat16.x = (u_xlatb4) ? u_xlat2.x : u_xlat3.x;
        u_xlatb24 = u_xlatb17 || u_xlatb25;
        u_xlati24 = u_xlatb24 ? 1 : int(0);
        u_xlat24 = (u_xlati24 != 0) ? u_xlat26 : u_xlat18.x;
        u_xlat1.x = (u_xlatb25) ? u_xlat19 : u_xlat24;
        u_xlat16.x = u_xlat16.x + u_xlat1.x;
        u_xlat16.x = u_xlat16.x * 0.5 + u_xlat3.x;
        u_xlat16.x = u_xlat18.x + u_xlat16.x;
        u_xlat16.x = u_xlat24 + u_xlat16.x;
        u_xlat16.x = u_xlat16.x * 0.25;
        TGSM2[u_xlati1.y].value[(0 >> 2)] = floatBitsToUint(u_xlat16.x);
    }
    //memoryBarrierShared;
    barrier();
    if(u_xlatb0.y){
        u_xlatu0 = gl_LocalInvocationIndex / 9u;
        u_xlatu1 = gl_LocalInvocationIndex % 9u;
        u_xlati0 = int(u_xlatu0) * 32 + int(u_xlatu1);
        u_xlat8.x = uintBitsToFloat(TGSM2[u_xlati0].value[(0 >> 2) + 0]);
        u_xlati16 = u_xlati0 + 16;
        u_xlat24 = uintBitsToFloat(TGSM2[u_xlati16].value[(0 >> 2) + 0]);
        u_xlati1 = ivec4(u_xlati0) + ivec4(32, 48, 64, 80);
        u_xlat1.x = uintBitsToFloat(TGSM2[u_xlati1.x].value[(0 >> 2) + 0]);
        u_xlat9 = uintBitsToFloat(TGSM2[u_xlati1.y].value[(0 >> 2) + 0]);
        u_xlat17 = uintBitsToFloat(TGSM2[u_xlati1.z].value[(0 >> 2) + 0]);
        u_xlat25 = uintBitsToFloat(TGSM2[u_xlati1.w].value[(0 >> 2) + 0]);
        u_xlati2 = ivec4(u_xlati0) + ivec4(2, 18, 34, 50);
        u_xlat2.x = uintBitsToFloat(TGSM0[u_xlati2.x].value[(0 >> 2) + 0]);
        u_xlat10 = uintBitsToFloat(TGSM0[u_xlati2.y].value[(0 >> 2) + 0]);
        u_xlat18.x = uintBitsToFloat(TGSM0[u_xlati2.z].value[(0 >> 2) + 0]);
        u_xlat26 = uintBitsToFloat(TGSM0[u_xlati2.w].value[(0 >> 2) + 0]);
        u_xlati3.xy = ivec2(u_xlati0) + ivec2(66, 82);
        u_xlat3.x = uintBitsToFloat(TGSM0[u_xlati3.x].value[(0 >> 2) + 0]);
        u_xlat11 = uintBitsToFloat(TGSM0[u_xlati3.y].value[(0 >> 2) + 0]);
        u_xlat2.x = (-u_xlat2.x) + u_xlat10;
        u_xlat10 = (-u_xlat10) + u_xlat18.x;
        u_xlat18.x = (-u_xlat18.x) + u_xlat26;
        u_xlat26 = (-u_xlat26) + u_xlat3.x;
        u_xlat3.x = (-u_xlat3.x) + u_xlat11;
        u_xlat11 = u_xlat2.x * u_xlat2.x + AdditionalParams.y;
        u_xlat19 = u_xlat10 * u_xlat10 + AdditionalParams.y;
        u_xlat27 = u_xlat18.x * u_xlat18.x + AdditionalParams.y;
        u_xlat4 = u_xlat26 * u_xlat26 + AdditionalParams.y;
        u_xlat12 = u_xlat3.x * u_xlat3.x + AdditionalParams.y;
        u_xlat2.x = u_xlat2.x * u_xlat10 + AdditionalParams.y;
        u_xlat2.x = u_xlat2.x * u_xlat2.x;
        u_xlat11 = u_xlat19 * u_xlat11;
        u_xlat11 = u_xlat11 * AdditionalParams.z;
        u_xlatb2 = u_xlat11<u_xlat2.x;
        u_xlat10 = u_xlat10 * u_xlat18.x + AdditionalParams.y;
        u_xlat10 = u_xlat10 * u_xlat10;
        u_xlat11 = u_xlat27 * u_xlat19;
        u_xlat11 = u_xlat11 * AdditionalParams.z;
        u_xlatb10 = u_xlat11<u_xlat10;
        u_xlat18.x = u_xlat18.x * u_xlat26 + AdditionalParams.y;
        u_xlat18.x = u_xlat18.x * u_xlat18.x;
        u_xlat11 = u_xlat27 * u_xlat4;
        u_xlat3.y = u_xlat11 * AdditionalParams.z;
        u_xlat26 = u_xlat26 * u_xlat3.x + AdditionalParams.y;
        u_xlat18.y = u_xlat26 * u_xlat26;
        u_xlat3.x = u_xlat12 * u_xlat4;
        u_xlat3.x = u_xlat3.x * AdditionalParams.z;
        u_xlatb18.xy = lessThan(u_xlat3.yxyx, u_xlat18.xyxy).xy;
        u_xlatb3 = u_xlatb10 || u_xlatb2;
        u_xlati3.x = u_xlatb3 ? 1 : int(0);
        u_xlat3.x = (u_xlati3.x != 0) ? u_xlat24 : u_xlat1.x;
        u_xlat8.x = (u_xlatb2) ? u_xlat8.x : u_xlat3.x;
        u_xlatb2 = u_xlatb10 || u_xlatb18.x;
        u_xlati2.x = u_xlatb2 ? 1 : int(0);
        u_xlat7 = (u_xlati2.x != 0) ? u_xlat1.x : u_xlat9;
        u_xlat4 = (u_xlati2.x != 0) ? u_xlat9 : u_xlat1.x;
        u_xlat2.x = u_xlat7;
        u_xlat11 = (u_xlatb18.x) ? u_xlat17 : u_xlat4;
        u_xlat8.x = u_xlat8.x + u_xlat11;
        u_xlat8.x = u_xlat8.x * 0.5 + u_xlat3.x;
        u_xlat8.x = u_xlat1.x + u_xlat8.x;
        u_xlat8.x = u_xlat4 + u_xlat8.x;
        u_xlat24 = (u_xlatb10) ? u_xlat24 : u_xlat2.x;
        u_xlatb1 = u_xlatb18.x || u_xlatb18.y;
        u_xlati1.x = u_xlatb1 ? 1 : int(0);
        u_xlat1.x = (u_xlati1.x != 0) ? u_xlat17 : u_xlat9;
        u_xlat17 = (u_xlatb18.y) ? u_xlat25 : u_xlat1.x;
        u_xlat24 = u_xlat24 + u_xlat17;
        u_xlat24 = u_xlat24 * 0.5 + u_xlat2.x;
        u_xlat24 = u_xlat9 + u_xlat24;
        u_xlat8.z = u_xlat1.x + u_xlat24;
        u_xlat8.xz = u_xlat8.xz * vec2(0.25, 0.25);
        TGSM1[u_xlati0].value[(0 >> 2)] = floatBitsToUint(u_xlat8.x);
        TGSM1[u_xlati16].value[(0 >> 2)] = floatBitsToUint(u_xlat8.z);
    }
    //memoryBarrierShared;
    barrier();
    u_xlati0 = int(gl_LocalInvocationID.y) * 16 + int(gl_LocalInvocationID.x);
    u_xlati8.xyz = ivec3(u_xlati0) + ivec3(16, 17, 1);
    u_xlat1.y = uintBitsToFloat(TGSM1[u_xlati8.x].value[(0 >> 2) + 0]);
    u_xlat1.z = uintBitsToFloat(TGSM1[u_xlati8.y].value[(0 >> 2) + 0]);
    u_xlat1.w = uintBitsToFloat(TGSM1[u_xlati8.z].value[(0 >> 2) + 0]);
    u_xlat1.x = uintBitsToFloat(TGSM1[u_xlati0].value[(0 >> 2) + 0]);
    u_xlat0.xy = vec2(gl_GlobalInvocationID.xy);
    u_xlat0.xy = u_xlat0.xy * InvLowResolution.xy;
    u_xlatu2 = gl_GlobalInvocationID.xyyy << uvec4(1u, 1u, 1u, 1u);
    u_xlat16.xy = vec2(u_xlatu2.xw);
    u_xlat16.xy = u_xlat16.xy * InvHighResolution.xy;
    u_xlat3 = textureGather(sampler2D(LoResDB, samplerLoResDB), u_xlat0.xy);
    u_xlat0 = textureGather(sampler2D(HiResDB, samplerHiResDB), u_xlat16.xy);
    u_xlati4 = ivec4(u_xlatu2.xwxw) + ivec4(int(0xFFFFFFFFu), 0, 0, int(0xFFFFFFFFu));
    u_xlat5 = (-u_xlat3) + u_xlat0.xxxx;
    u_xlat5 = abs(u_xlat5) + AdditionalParams.wwww;
    u_xlat5 = vec4(9.0, 3.0, 1.0, 3.0) / u_xlat5;
    u_xlat0.x = dot(u_xlat5, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat0.x = u_xlat0.x + AdditionalParams.x;
    u_xlat5.x = dot(u_xlat1.yzwx, u_xlat5);
    u_xlat5.x = u_xlat5.x + AdditionalParams.x;
    u_xlat0.x = u_xlat5.x / u_xlat0.x;
    imageStore(AoResult_origX0X, u_xlati4.xy, u_xlat0.xxxx);
    u_xlat5 = (-u_xlat3.yzwx) + u_xlat0.yyyy;
    u_xlat5 = abs(u_xlat5) + AdditionalParams.wwww;
    u_xlat5 = vec4(9.0, 3.0, 1.0, 3.0) / u_xlat5;
    u_xlat0.x = dot(u_xlat5, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat0.y = dot(u_xlat1.zwxy, u_xlat5);
    u_xlat0.xy = u_xlat0.xy + AdditionalParams.xx;
    u_xlat0.x = u_xlat0.y / u_xlat0.x;
    imageStore(AoResult_origX0X, ivec2(u_xlatu2.xw), u_xlat0.xxxx);
    u_xlat5 = (-u_xlat3.zwxy) + u_xlat0.zzzz;
    u_xlat5 = abs(u_xlat5) + AdditionalParams.wwww;
    u_xlat5 = vec4(9.0, 3.0, 1.0, 3.0) / u_xlat5;
    u_xlat0.x = dot(u_xlat5, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat0.y = dot(u_xlat1.wxyz, u_xlat5);
    u_xlat0.xy = u_xlat0.xy + AdditionalParams.xx;
    u_xlat0.x = u_xlat0.y / u_xlat0.x;
    imageStore(AoResult_origX0X, u_xlati4.zw, u_xlat0.xxxx);
    u_xlati2 = ivec4(u_xlatu2) + ivec4(int(0xFFFFFFFFu), int(0xFFFFFFFFu), int(0xFFFFFFFFu), int(0xFFFFFFFFu));
    u_xlat0 = (-u_xlat3.wxyz) + u_xlat0.wwww;
    u_xlat0 = abs(u_xlat0) + AdditionalParams.wwww;
    u_xlat0 = vec4(9.0, 3.0, 1.0, 3.0) / u_xlat0;
    u_xlat3.x = dot(u_xlat0, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat3.x = u_xlat3.x + AdditionalParams.x;
    u_xlat0.x = dot(u_xlat1, u_xlat0);
    u_xlat0.x = u_xlat0.x + AdditionalParams.x;
    u_xlat0.x = u_xlat0.x / u_xlat3.x;
    imageStore(AoResult_origX0X, u_xlati2.xy, u_xlat0.xxxx);
    return;
}


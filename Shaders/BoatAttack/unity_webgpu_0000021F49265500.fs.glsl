#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec2 _GlobalMipBias;
	vec4 _MainLightColor;
	uint _RenderingLayerMaxInt;
	float _RenderingLayerRcpMaxInt;
	vec4 _TimeParameters;
	vec3 _WorldSpaceCameraPos;
	vec4 _WindZone_Vector;
};
layout(set = 1, binding = 1, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 2, std140) uniform UnityPerMaterial {
	vec4 Texture2D_82b413015ec74e89b64888c7e58113cb_TexelSize;
	float Vector1_5938df77fca14c0db6439fcfee84628c;
};
layout(set = 0, binding = 0) uniform mediump texture2D Texture2D_82b413015ec74e89b64888c7e58113cb;
layout(location = 0) in highp vec3 vs_INTERP0;
layout(location = 1) in highp vec4 vs_INTERP2;
layout(location = 0) out highp vec4 SV_Target0;
layout(location = 1) out highp vec4 SV_Target1;
layout(set = 0, binding = 1) uniform mediump  sampler samplerTexture2D_82b413015ec74e89b64888c7e58113cb;
void main()
{
vec4 u_xlat0;
uint u_xlatu0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
bvec4 u_xlatb4;
vec4 u_xlat5;
bvec4 u_xlatb5;
vec3 u_xlat6;
float u_xlat7;
vec2 u_xlat8;
bool u_xlatb8;
vec2 u_xlat12;
float u_xlat13;
vec2 u_xlat15;
bool u_xlatb15;
vec2 u_xlat16;
float u_xlat18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
    u_xlat0 = vs_INTERP2.xyxy * vec4(5.40999985, 5.40999985, 2.70499992, 2.70499992);
    u_xlat1 = floor(u_xlat0);
    u_xlat0 = fract(u_xlat0);
    u_xlat2 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
    u_xlat2.z = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));
    u_xlat2.x = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));
    u_xlat2.xy = sin(u_xlat2.xz);
    u_xlat2.xy = u_xlat2.xy * vec2(43758.5469, 43758.5469);
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat8.x = (-u_xlat2.x) + u_xlat2.y;
    u_xlat3 = u_xlat0 * u_xlat0;
    u_xlat0 = (-u_xlat0) * vec4(2.0, 2.0, 2.0, 2.0) + vec4(3.0, 3.0, 3.0, 3.0);
    u_xlat0 = u_xlat0 * u_xlat3;
    u_xlat2.x = u_xlat0.z * u_xlat8.x + u_xlat2.x;
    u_xlat3 = u_xlat1 + vec4(1.0, 1.0, 1.0, 0.0);
    u_xlat8.x = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat8.y = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat8.xy = sin(u_xlat8.xy);
    u_xlat8.xy = u_xlat8.xy * vec2(43758.5469, 43758.5469);
    u_xlat8.xy = fract(u_xlat8.xy);
    u_xlat13 = dot(u_xlat1.zw, vec2(12.9898005, 78.2330017));
    u_xlat13 = sin(u_xlat13);
    u_xlat13 = u_xlat13 * 43758.5469;
    u_xlat13 = fract(u_xlat13);
    u_xlat19 = (-u_xlat13) + u_xlat8.x;
    u_xlat12.x = u_xlat0.z * u_xlat19 + u_xlat13;
    u_xlat13 = (-u_xlat12.x) + u_xlat2.x;
    u_xlat12.x = u_xlat0.w * u_xlat13 + u_xlat12.x;
    u_xlat3 = u_xlat1.xyxy + vec4(1.0, 0.0, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xy, vec2(12.9898005, 78.2330017));
    u_xlat12.y = sin(u_xlat18);
    u_xlat12.xy = u_xlat12.xy * vec2(0.25, 43758.5469);
    u_xlat18 = fract(u_xlat12.y);
    u_xlat1.x = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat1.y = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(43758.5469, 43758.5469);
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat7 = (-u_xlat18) + u_xlat1.y;
    u_xlat18 = u_xlat0.x * u_xlat7 + u_xlat18;
    u_xlat7 = (-u_xlat1.x) + u_xlat8.y;
    u_xlat0.x = u_xlat0.x * u_xlat7 + u_xlat1.x;
    u_xlat0.x = (-u_xlat18) + u_xlat0.x;
    u_xlat0.x = u_xlat0.y * u_xlat0.x + u_xlat18;
    u_xlat0.x = u_xlat0.x * 0.125 + u_xlat12.x;
    u_xlat1 = vs_INTERP2.xyxy * vec4(1.35249996, 1.35249996, 21.2000008, 21.2000008);
    u_xlat2 = floor(u_xlat1);
    u_xlat1 = fract(u_xlat1);
    u_xlat3 = u_xlat2 + vec4(1.0, 1.0, 1.0, 0.0);
    u_xlat6.x = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat6.y = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat6.xy = sin(u_xlat6.xy);
    u_xlat6.xy = u_xlat6.xy * vec2(43758.5469, 43758.5469);
    u_xlat3 = u_xlat2.xyxy + vec4(1.0, 0.0, 0.0, 1.0);
    u_xlat18 = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat3.x = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat3.x = sin(u_xlat3.x);
    u_xlat3.x = u_xlat3.x * 43758.5469;
    u_xlat3.x = fract(u_xlat3.x);
    u_xlat18 = sin(u_xlat18);
    u_xlat6.z = u_xlat18 * 43758.5469;
    u_xlat6.xyz = fract(u_xlat6.xyz);
    u_xlat6.x = (-u_xlat6.z) + u_xlat6.x;
    u_xlat4 = u_xlat1 * u_xlat1;
    u_xlat1 = (-u_xlat1) * vec4(2.0, 2.0, 2.0, 2.0) + vec4(3.0, 3.0, 3.0, 3.0);
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat6.x = u_xlat1.x * u_xlat6.x + u_xlat6.z;
    u_xlat18 = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));
    u_xlat18 = sin(u_xlat18);
    u_xlat18 = u_xlat18 * 43758.5469;
    u_xlat18 = fract(u_xlat18);
    u_xlat2.x = (-u_xlat18) + u_xlat3.x;
    u_xlat18 = u_xlat1.x * u_xlat2.x + u_xlat18;
    u_xlat6.x = (-u_xlat18) + u_xlat6.x;
    u_xlat6.x = u_xlat1.y * u_xlat6.x + u_xlat18;
    u_xlat0.x = u_xlat6.x * 0.5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * 0.5 + -1.0;
    u_xlat6.x = _TimeParameters.x * 0.0500000007;
    u_xlat1.x = sin(_WindZone_Vector.x);
    u_xlat2.x = cos(_WindZone_Vector.x);
    u_xlat1.y = u_xlat2.x;
    u_xlat6.xz = (-u_xlat6.xx) * u_xlat1.xy + vs_INTERP2.xy;
    u_xlat6.xz = u_xlat6.xz + u_xlat0.xx;
    u_xlat1.xy = u_xlat0.xx + vs_INTERP2.xy;
    u_xlat1.xy = u_xlat1.xy * vec2(6.0, 6.0);
    u_xlat0.x = texture(sampler2D(Texture2D_82b413015ec74e89b64888c7e58113cb, samplerTexture2D_82b413015ec74e89b64888c7e58113cb), u_xlat1.xy, _GlobalMipBias.x).x;
    u_xlat1.xy = u_xlat6.xz * vec2(1.89999998, 1.89999998);
    u_xlat6.x = texture(sampler2D(Texture2D_82b413015ec74e89b64888c7e58113cb, samplerTexture2D_82b413015ec74e89b64888c7e58113cb), u_xlat6.xz, _GlobalMipBias.x).x;
    u_xlat2.xy = floor(u_xlat1.xy);
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat3.xy = u_xlat2.xy + vec2(1.0, 1.0);
    u_xlat4 = u_xlat3.xyxy * vec4(289.0, 289.0, 289.0, 289.0);
    u_xlatb4 = greaterThanEqual(u_xlat4, (-u_xlat4.zwzw));
    u_xlat4.x = (u_xlatb4.x) ? float(289.0) : float(-289.0);
    u_xlat4.y = (u_xlatb4.y) ? float(289.0) : float(-289.0);
    u_xlat4.z = (u_xlatb4.z) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat4.w = (u_xlatb4.w) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat3.xy = u_xlat3.xy * u_xlat4.zw;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * u_xlat4.xy;
    u_xlat18 = u_xlat3.x * 34.0 + 1.0;
    u_xlat18 = u_xlat3.x * u_xlat18;
    u_xlat3.x = u_xlat18 * 289.0;
    u_xlatb3 = u_xlat3.x>=(-u_xlat3.x);
    u_xlat3.xz = (bool(u_xlatb3)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat18 = u_xlat18 * u_xlat3.z;
    u_xlat18 = fract(u_xlat18);
    u_xlat18 = u_xlat3.x * u_xlat18 + u_xlat3.y;
    u_xlat3.x = u_xlat18 * 34.0 + 1.0;
    u_xlat18 = u_xlat18 * u_xlat3.x;
    u_xlat3.x = u_xlat18 * 289.0;
    u_xlatb3 = u_xlat3.x>=(-u_xlat3.x);
    u_xlat3.xy = (bool(u_xlatb3)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat18 = u_xlat18 * u_xlat3.y;
    u_xlat18 = fract(u_xlat18);
    u_xlat18 = u_xlat18 * u_xlat3.x;
    u_xlat18 = u_xlat18 * 0.024390243;
    u_xlat18 = fract(u_xlat18);
    u_xlat3.xy = vec2(u_xlat18) * vec2(2.0, 2.0) + vec2(-1.0, -0.5);
    u_xlat18 = floor(u_xlat3.y);
    u_xlat4.x = (-u_xlat18) + u_xlat3.x;
    u_xlat4.y = abs(u_xlat3.x) + -0.5;
    u_xlat18 = dot(u_xlat4.xy, u_xlat4.xy);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat3.xy = vec2(u_xlat18) * u_xlat4.xy;
    u_xlat15.xy = u_xlat1.xy + vec2(-1.0, -1.0);
    u_xlat18 = dot(u_xlat3.xy, u_xlat15.xy);
    u_xlat3 = u_xlat2.xyxy + vec4(0.0, 1.0, 1.0, 0.0);
    u_xlat4 = u_xlat3 * vec4(289.0, 289.0, 289.0, 289.0);
    u_xlatb4 = greaterThanEqual(u_xlat4, (-u_xlat4));
    u_xlat5.x = (u_xlatb4.z) ? float(289.0) : float(-289.0);
    u_xlat5.y = (u_xlatb4.w) ? float(289.0) : float(-289.0);
    u_xlat5.z = (u_xlatb4.z) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat5.w = (u_xlatb4.w) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat4.x = (u_xlatb4.x) ? float(289.0) : float(-289.0);
    u_xlat4.y = (u_xlatb4.y) ? float(289.0) : float(-289.0);
    u_xlat4.z = (u_xlatb4.x) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat4.w = (u_xlatb4.y) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat3.zw = u_xlat3.zw * u_xlat5.zw;
    u_xlat3.xy = u_xlat3.xy * u_xlat4.zw;
    u_xlat3 = fract(u_xlat3);
    u_xlat3.xy = u_xlat3.xy * u_xlat4.xy;
    u_xlat15.xy = u_xlat3.zw * u_xlat5.xy;
    u_xlat4.x = u_xlat15.x * 34.0 + 1.0;
    u_xlat15.x = u_xlat15.x * u_xlat4.x;
    u_xlat4.x = u_xlat15.x * 289.0;
    u_xlatb4.x = u_xlat4.x>=(-u_xlat4.x);
    u_xlat4.xy = (u_xlatb4.x) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat15.x = u_xlat15.x * u_xlat4.y;
    u_xlat15.x = fract(u_xlat15.x);
    u_xlat15.x = u_xlat4.x * u_xlat15.x + u_xlat15.y;
    u_xlat21 = u_xlat15.x * 34.0 + 1.0;
    u_xlat15.x = u_xlat15.x * u_xlat21;
    u_xlat21 = u_xlat15.x * 289.0;
    u_xlatb21 = u_xlat21>=(-u_xlat21);
    u_xlat4.xy = (bool(u_xlatb21)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat15.x = u_xlat15.x * u_xlat4.y;
    u_xlat15.x = fract(u_xlat15.x);
    u_xlat15.x = u_xlat15.x * u_xlat4.x;
    u_xlat15.x = u_xlat15.x * 0.024390243;
    u_xlat15.x = fract(u_xlat15.x);
    u_xlat15.xy = u_xlat15.xx * vec2(2.0, 2.0) + vec2(-1.0, -0.5);
    u_xlat21 = floor(u_xlat15.y);
    u_xlat4.x = (-u_xlat21) + u_xlat15.x;
    u_xlat4.y = abs(u_xlat15.x) + -0.5;
    u_xlat15.x = dot(u_xlat4.xy, u_xlat4.xy);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xy = u_xlat15.xx * u_xlat4.xy;
    u_xlat4 = u_xlat1.xyxy + vec4(-0.0, -1.0, -1.0, -0.0);
    u_xlat15.x = dot(u_xlat15.xy, u_xlat4.zw);
    u_xlat18 = u_xlat18 + (-u_xlat15.x);
    u_xlat16.xy = u_xlat1.xy * u_xlat1.xy;
    u_xlat16.xy = u_xlat1.xy * u_xlat16.xy;
    u_xlat5.xy = u_xlat1.xy * vec2(6.0, 6.0) + vec2(-15.0, -15.0);
    u_xlat5.xy = u_xlat1.xy * u_xlat5.xy + vec2(10.0, 10.0);
    u_xlat16.xy = u_xlat16.xy * u_xlat5.xy;
    u_xlat18 = u_xlat16.y * u_xlat18 + u_xlat15.x;
    u_xlat5 = u_xlat2.xyxy * vec4(289.0, 289.0, 289.0, 289.0);
    u_xlatb5 = greaterThanEqual(u_xlat5, (-u_xlat5.zwzw));
    u_xlat5.x = (u_xlatb5.x) ? float(289.0) : float(-289.0);
    u_xlat5.y = (u_xlatb5.y) ? float(289.0) : float(-289.0);
    u_xlat5.z = (u_xlatb5.z) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat5.w = (u_xlatb5.w) ? float(0.00346020772) : float(-0.00346020772);
    u_xlat2.xy = u_xlat2.xy * u_xlat5.zw;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * u_xlat5.xy;
    u_xlat15.x = u_xlat2.x * 34.0 + 1.0;
    u_xlat2.x = u_xlat2.x * u_xlat15.x;
    u_xlat15.x = u_xlat2.x * 289.0;
    u_xlatb15 = u_xlat15.x>=(-u_xlat15.x);
    u_xlat15.xy = (bool(u_xlatb15)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat2.x = u_xlat2.x * u_xlat15.y;
    u_xlat2.x = fract(u_xlat2.x);
    u_xlat2.x = u_xlat15.x * u_xlat2.x + u_xlat2.y;
    u_xlat8.x = u_xlat2.x * 34.0 + 1.0;
    u_xlat2.x = u_xlat2.x * u_xlat8.x;
    u_xlat8.x = u_xlat2.x * 289.0;
    u_xlatb8 = u_xlat8.x>=(-u_xlat8.x);
    u_xlat15.xy = (bool(u_xlatb8)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat2.x = u_xlat2.x * u_xlat15.y;
    u_xlat2.x = fract(u_xlat2.x);
    u_xlat2.x = u_xlat2.x * u_xlat15.x;
    u_xlat2.x = u_xlat2.x * 0.024390243;
    u_xlat2.x = fract(u_xlat2.x);
    u_xlat2.xy = u_xlat2.xx * vec2(2.0, 2.0) + vec2(-1.0, -0.5);
    u_xlat8.x = floor(u_xlat2.y);
    u_xlat5.x = (-u_xlat8.x) + u_xlat2.x;
    u_xlat5.y = abs(u_xlat2.x) + -0.5;
    u_xlat2.x = dot(u_xlat5.xy, u_xlat5.xy);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xy = u_xlat2.xx * u_xlat5.xy;
    u_xlat1.x = dot(u_xlat2.xy, u_xlat1.xy);
    u_xlat7 = u_xlat3.x * 34.0 + 1.0;
    u_xlat7 = u_xlat3.x * u_xlat7;
    u_xlat2.x = u_xlat7 * 289.0;
    u_xlatb2 = u_xlat2.x>=(-u_xlat2.x);
    u_xlat2.xy = (bool(u_xlatb2)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat7 = u_xlat7 * u_xlat2.y;
    u_xlat7 = fract(u_xlat7);
    u_xlat7 = u_xlat2.x * u_xlat7 + u_xlat3.y;
    u_xlat2.x = u_xlat7 * 34.0 + 1.0;
    u_xlat7 = u_xlat7 * u_xlat2.x;
    u_xlat2.x = u_xlat7 * 289.0;
    u_xlatb2 = u_xlat2.x>=(-u_xlat2.x);
    u_xlat2.xy = (bool(u_xlatb2)) ? vec2(289.0, 0.00346020772) : vec2(-289.0, -0.00346020772);
    u_xlat7 = u_xlat7 * u_xlat2.y;
    u_xlat7 = fract(u_xlat7);
    u_xlat7 = u_xlat7 * u_xlat2.x;
    u_xlat7 = u_xlat7 * 0.024390243;
    u_xlat7 = fract(u_xlat7);
    u_xlat2.xy = vec2(u_xlat7) * vec2(2.0, 2.0) + vec2(-1.0, -0.5);
    u_xlat7 = floor(u_xlat2.y);
    u_xlat3.x = (-u_xlat7) + u_xlat2.x;
    u_xlat3.y = abs(u_xlat2.x) + -0.5;
    u_xlat7 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat7 = inversesqrt(u_xlat7);
    u_xlat2.xy = vec2(u_xlat7) * u_xlat3.xy;
    u_xlat7 = dot(u_xlat2.xy, u_xlat4.xy);
    u_xlat7 = (-u_xlat1.x) + u_xlat7;
    u_xlat1.x = u_xlat16.y * u_xlat7 + u_xlat1.x;
    u_xlat18 = u_xlat18 + (-u_xlat1.x);
    u_xlat18 = u_xlat16.x * u_xlat18 + u_xlat1.x;
    u_xlat18 = u_xlat18 + 0.5;
    u_xlat6.x = u_xlat6.x + u_xlat18;
    u_xlat0.x = u_xlat0.x * 0.200000003 + u_xlat6.x;
    u_xlat0.x = u_xlat0.x + Vector1_5938df77fca14c0db6439fcfee84628c;
    u_xlat0.x = u_xlat0.x + -0.5;
    u_xlat6.x = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));
    u_xlat2 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
    u_xlat6.x = sin(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * 43758.5469;
    u_xlat6.x = fract(u_xlat6.x);
    u_xlat12.x = (-u_xlat6.x) + u_xlat6.y;
    u_xlat6.x = u_xlat1.z * u_xlat12.x + u_xlat6.x;
    u_xlat12.x = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));
    u_xlat12.y = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(43758.5469, 43758.5469);
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.x = (-u_xlat12.y) + u_xlat12.x;
    u_xlat12.x = u_xlat1.z * u_xlat12.x + u_xlat12.y;
    u_xlat12.x = (-u_xlat6.x) + u_xlat12.x;
    u_xlat6.x = u_xlat1.w * u_xlat12.x + u_xlat6.x;
    u_xlat1 = vs_INTERP2.xyxy * vec4(10.6000004, 10.6000004, 5.30000019, 5.30000019);
    u_xlat2 = floor(u_xlat1);
    u_xlat1 = fract(u_xlat1);
    u_xlat3 = u_xlat2 + vec4(1.0, 1.0, 1.0, 0.0);
    u_xlat12.x = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat12.y = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(43758.5469, 43758.5469);
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat3 = u_xlat2.xyxy + vec4(1.0, 0.0, 0.0, 1.0);
    u_xlat3.z = dot(u_xlat3.zw, vec2(12.9898005, 78.2330017));
    u_xlat3.x = dot(u_xlat3.xy, vec2(12.9898005, 78.2330017));
    u_xlat3.xy = sin(u_xlat3.xz);
    u_xlat3.xy = u_xlat3.xy * vec2(43758.5469, 43758.5469);
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat12.x = u_xlat12.x + (-u_xlat3.y);
    u_xlat4 = u_xlat1 * u_xlat1;
    u_xlat1 = (-u_xlat1) * vec4(2.0, 2.0, 2.0, 2.0) + vec4(3.0, 3.0, 3.0, 3.0);
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat12.x = u_xlat1.x * u_xlat12.x + u_xlat3.y;
    u_xlat2.x = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x * 43758.5469;
    u_xlat2.x = fract(u_xlat2.x);
    u_xlat8.x = (-u_xlat2.x) + u_xlat3.x;
    u_xlat1.x = u_xlat1.x * u_xlat8.x + u_xlat2.x;
    u_xlat12.x = u_xlat12.x + (-u_xlat1.x);
    u_xlat12.x = u_xlat1.y * u_xlat12.x + u_xlat1.x;
    u_xlat12.x = u_xlat12.x * 0.25;
    u_xlat6.x = u_xlat6.x * 0.125 + u_xlat12.x;
    u_xlat12.x = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));
    u_xlat2 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
    u_xlat12.x = sin(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * 43758.5469;
    u_xlat12.x = fract(u_xlat12.x);
    u_xlat18 = (-u_xlat12.x) + u_xlat12.y;
    u_xlat12.x = u_xlat1.z * u_xlat18 + u_xlat12.x;
    u_xlat18 = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));
    u_xlat1.x = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat1.x = u_xlat1.x * 43758.5469;
    u_xlat1.x = fract(u_xlat1.x);
    u_xlat18 = sin(u_xlat18);
    u_xlat18 = u_xlat18 * 43758.5469;
    u_xlat18 = fract(u_xlat18);
    u_xlat18 = (-u_xlat1.x) + u_xlat18;
    u_xlat18 = u_xlat1.z * u_xlat18 + u_xlat1.x;
    u_xlat18 = (-u_xlat12.x) + u_xlat18;
    u_xlat12.x = u_xlat1.w * u_xlat18 + u_xlat12.x;
    u_xlat6.x = u_xlat12.x * 0.5 + u_xlat6.x;
    u_xlat0.x = (-u_xlat6.x) * 0.5 + u_xlat0.x;
    u_xlat6.x = (-u_xlat6.x) + 1.0;
    u_xlat0.x = u_xlat0.x / u_xlat6.x;
    u_xlat6.x = u_xlat0.x + -1.0;
    u_xlat0.x = u_xlat0.x * 0.25;
    u_xlat6.x = u_xlat6.x * 0.5;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat6.x = (-u_xlat6.x) + 1.0;
    u_xlat6.x = max(u_xlat6.x, 0.5);
    u_xlat12.x = u_xlat0.x;
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat12.xxx * _MainLightColor.xyz;
    u_xlat2.x = dot(unity_SHAr.yw, vec2(1.0, 1.0));
    u_xlat2.y = dot(unity_SHAg.yw, vec2(1.0, 1.0));
    u_xlat2.z = dot(unity_SHAb.yw, vec2(1.0, 1.0));
    u_xlat2.xyz = u_xlat2.xyz + (-unity_SHC.xyz);
    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat6.xxx * u_xlat1.xyz + u_xlat2.xyz;
    u_xlat6.x = (-_WorldSpaceCameraPos.y) * 0.984375 + vs_INTERP0.y;
    u_xlat6.x = u_xlat6.x * 0.182857141;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    SV_Target0.w = u_xlat6.x * u_xlat0.x;
    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
    u_xlatu0 = _RenderingLayerMaxInt & floatBitsToUint(unity_RenderingLayer.x);
    u_xlat0.x = float(u_xlatu0);
    SV_Target1.x = u_xlat0.x * _RenderingLayerRcpMaxInt;
    SV_Target1.x = clamp(SV_Target1.x, 0.0, 1.0);
    SV_Target1.yzw = vec3(0.0, 0.0, 0.0);
    return;
}


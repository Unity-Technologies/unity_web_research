#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require
#ifdef GL_ARB_derivative_control
#extension GL_ARB_derivative_control : enable
#endif

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
const uvec4 ImmCB_0[] = uvec4[4] (
	uvec4(0x3F800000, 0x0, 0x0, 0x0),
	uvec4(0x0, 0x3F800000, 0x0, 0x0),
	uvec4(0x0, 0x0, 0x3F800000, 0x0),
	uvec4(0x0, 0x0, 0x0, 0x3F800000));
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec2 _GlobalMipBias;
	float _AlphaToMaskAvailable;
	vec4 _MainLightPosition;
	vec4 _MainLightColor;
	vec4 _AdditionalLightsCount;
	vec3 _WorldSpaceCameraPos;
	vec4 _ScreenParams;
	vec4 unity_OrthoParams;
	mat4x4 unity_MatrixV;
};
layout(set = 1, binding = 1, std140) uniform AdditionalLights {
	vec4 _AdditionalLightsPosition[32];
	vec4 _AdditionalLightsColor[32];
	vec4 _AdditionalLightsAttenuation[32];
	vec4 _AdditionalLightsSpotDir[32];
	vec4 _AdditionalLightsOcclusionProbes[32];
	float _AdditionalLightsLayerMasks[32];
};
layout(set = 1, binding = 2, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 3, std140) uniform LightShadows {
	mat4x4 _MainLightWorldToShadow[5];
	vec4 _CascadeShadowSplitSpheres0;
	vec4 _CascadeShadowSplitSpheres1;
	vec4 _CascadeShadowSplitSpheres2;
	vec4 _CascadeShadowSplitSpheres3;
	vec4 _CascadeShadowSplitSphereRadii;
	vec4 _MainLightShadowOffset0;
	vec4 _MainLightShadowOffset1;
	vec4 _MainLightShadowParams;
	vec4 _MainLightShadowmapSize;
	vec4 _AdditionalShadowOffset0;
	vec4 _AdditionalShadowOffset1;
	vec4 _AdditionalShadowFadeParams;
	vec4 _AdditionalShadowmapSize;
	vec4 _AdditionalShadowParams[32];
	mat4x4 _AdditionalLightsWorldToShadow[32];
};
layout(set = 1, binding = 4, std140) uniform LightCookies {
	mat4x4 _MainLightWorldToLight;
	float _AdditionalLightsCookieEnableBits;
	float _MainLightCookieTextureFormat;
	float _AdditionalLightsCookieAtlasTextureFormat;
	mat4x4 _AdditionalLightsWorldToLights[32];
	vec4 _AdditionalLightsCookieAtlasUVRects[32];
	float _AdditionalLightsLightTypes[32];
};
layout(set = 1, binding = 5, std140) uniform UnityPerMaterial {
	vec4 Texture2D_B222E8F_TexelSize;
	vec4 Color_C30C7CA3;
	vec4 Texture2D_D9BFD5F1_TexelSize;
};
layout(set = 0, binding = 0) uniform mediump textureCube unity_SpecCube0;
layout(set = 0, binding = 1) uniform mediump texture2D _MainLightShadowmapTexture;
layout(set = 0, binding = 2) uniform mediump texture2D _AdditionalLightsShadowmapTexture;
layout(set = 0, binding = 3) uniform mediump texture2D _MainLightCookieTexture;
layout(set = 0, binding = 4) uniform mediump texture2D _AdditionalLightsCookieAtlasTexture;
layout(set = 0, binding = 5) uniform mediump texture2D Texture2D_B222E8F;
layout(set = 0, binding = 6) uniform mediump texture2D Texture2D_D9BFD5F1;
layout(location = 0) in highp  vec4 vs_INTERP3;
layout(location = 1) in highp  vec4 vs_INTERP4;
layout(location = 2) in highp  vec4 vs_INTERP5;
layout(location = 3) in highp  vec4 vs_INTERP6;
layout(location = 4) in highp  vec3 vs_INTERP8;
layout(location = 5) in highp  vec3 vs_INTERP9;
layout(location = 0) out highp vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
int u_xlati1;
uvec3 u_xlatu1;
vec3 u_xlat2;
vec4 u_xlat3;
bool u_xlatb3;
vec3 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
bool u_xlatb6;
vec4 u_xlat7;
bvec2 u_xlatb7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
int u_xlati11;
bvec4 u_xlatb11;
vec4 u_xlat12;
vec4 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec4 u_xlat17;
vec4 u_xlat18;
vec4 u_xlat19;
vec4 u_xlat20;
vec4 u_xlat21;
vec4 u_xlat22;
vec4 u_xlat23;
vec4 u_xlat24;
vec4 u_xlat25;
float u_xlat27;
int u_xlati27;
uint u_xlatu27;
bool u_xlatb27;
uint u_xlatu29;
vec3 u_xlat31;
vec3 u_xlat32;
bvec2 u_xlatb32;
vec3 u_xlat34;
vec2 u_xlat35;
vec3 u_xlat37;
vec3 u_xlat39;
vec2 u_xlat40;
vec2 u_xlat53;
int u_xlati53;
uint u_xlatu53;
bvec2 u_xlatb53;
float u_xlat58;
vec2 u_xlat59;
int u_xlati59;
vec2 u_xlat61;
vec2 u_xlat62;
vec2 u_xlat64;
vec2 u_xlat65;
vec2 u_xlat66;
vec2 u_xlat67;
vec2 u_xlat72;
float u_xlat78;
uint u_xlatu78;
bool u_xlatb78;
float u_xlat79;
bool u_xlatb79;
float u_xlat80;
uint u_xlatu80;
bool u_xlatb80;
float u_xlat81;
float u_xlat82;
int u_xlati82;
uint u_xlatu82;
bool u_xlatb82;
float u_xlat84;
float u_xlat85;
float u_xlat86;
int u_xlati86;
bool u_xlatb86;
float u_xlat87;
int u_xlati87;
bool u_xlatb87;
float u_xlat88;
int u_xlati88;
bool u_xlatb88;
float u_xlat89;
layout(set = 0, binding = 7) uniform mediump  sampler samplerunity_SpecCube0;
layout(set = 0, binding = 8) uniform mediump  sampler sampler_LinearClamp;
layout(set = 0, binding = 9) uniform mediump  samplerShadow sampler_LinearClampCompare;
layout(set = 0, binding = 10) uniform mediump  sampler sampler_MainLightCookieTexture;
layout(set = 0, binding = 11) uniform mediump  sampler samplerTexture2D_B222E8F;
layout(set = 0, binding = 12) uniform mediump  sampler samplerTexture2D_D9BFD5F1;
int int_bitfieldInsert(int base, int insert, int offset, int bits) {
    uint mask = ~(uint(0xffffffffu) << uint(bits)) << uint(offset);
    return int((uint(base) & ~mask) | ((uint(insert) << uint(offset)) & mask));
}

void main()
{
    u_xlat0.x = dot(vs_INTERP9.xyz, vs_INTERP9.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.xyz = u_xlat0.xxx * vs_INTERP9.xyz;
    u_xlatb78 = unity_OrthoParams.w==0.0;
    u_xlat1.xyz = (-vs_INTERP8.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat79 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat79 = inversesqrt(u_xlat79);
    u_xlat1.xyz = vec3(u_xlat79) * u_xlat1.xyz;
    u_xlat2.x = (u_xlatb78) ? u_xlat1.x : unity_MatrixV[0].z;
    u_xlat2.y = (u_xlatb78) ? u_xlat1.y : unity_MatrixV[1].z;
    u_xlat2.z = (u_xlatb78) ? u_xlat1.z : unity_MatrixV[2].z;
    u_xlat1.xyz = u_xlat2.yyy * unity_WorldToObject[1].xyz;
    u_xlat1.xyz = unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat78 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat78 = inversesqrt(u_xlat78);
    u_xlat1.xyz = vec3(u_xlat78) * u_xlat1.xyz;
    u_xlat3 = texture(sampler2D(Texture2D_B222E8F, samplerTexture2D_B222E8F), vs_INTERP5.xy, _GlobalMipBias.x);
    u_xlat4.xyz = u_xlat3.xyz * Color_C30C7CA3.xyz;
    u_xlat5 = texture(sampler2D(Texture2D_D9BFD5F1, samplerTexture2D_D9BFD5F1), vs_INTERP5.xy, _GlobalMipBias.x).wxyz;
    u_xlat6 = u_xlat5.yzwx * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat78 = dot(u_xlat6, u_xlat6);
    u_xlat78 = inversesqrt(u_xlat78);
    u_xlat31.xyz = vec3(u_xlat78) * u_xlat6.xyz;
    u_xlat78 = vs_INTERP6.y * 200.0;
    u_xlat78 = min(u_xlat78, 1.0);
    u_xlat3.xyz = vec3(u_xlat78) * u_xlat3.xyz;
    u_xlat6.xyz = vs_INTERP8.yyy * _MainLightWorldToShadow[1 / 4][1 % 4].xyz;
    u_xlat6.xyz = _MainLightWorldToShadow[0 / 4][0 % 4].xyz * vs_INTERP8.xxx + u_xlat6.xyz;
    u_xlat6.xyz = _MainLightWorldToShadow[2 / 4][2 % 4].xyz * vs_INTERP8.zzz + u_xlat6.xyz;
    u_xlat6.xyz = u_xlat6.xyz + _MainLightWorldToShadow[3 / 4][3 % 4].xyz;
    u_xlatb78 = 0.0<_MainLightShadowParams.y;
    if(u_xlatb78){
        u_xlatb79 = _MainLightShadowParams.y==1.0;
        if(u_xlatb79){
            u_xlat7 = u_xlat6.xyxy + _MainLightShadowOffset0;
            vec3 txVec0 = vec3(u_xlat7.xy,u_xlat6.z);
            u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec0, 0.0);
            vec3 txVec1 = vec3(u_xlat7.zw,u_xlat6.z);
            u_xlat8.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec1, 0.0);
            u_xlat7 = u_xlat6.xyxy + _MainLightShadowOffset1;
            vec3 txVec2 = vec3(u_xlat7.xy,u_xlat6.z);
            u_xlat8.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec2, 0.0);
            vec3 txVec3 = vec3(u_xlat7.zw,u_xlat6.z);
            u_xlat8.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec3, 0.0);
            u_xlat79 = dot(u_xlat8, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb80 = _MainLightShadowParams.y==2.0;
            if(u_xlatb80){
                u_xlat7.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat7.xy = floor(u_xlat7.xy);
                u_xlat59.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat7.xy);
                u_xlat8 = u_xlat59.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat8.xz = u_xlat9.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat9.xy = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat59.xy);
                u_xlat61.xy = (-u_xlat59.xy) + vec2(1.0, 1.0);
                u_xlat10.xy = min(u_xlat59.xy, vec2(0.0, 0.0));
                u_xlat10.xy = (-u_xlat10.xy) * u_xlat10.xy + u_xlat61.xy;
                u_xlat59.xy = max(u_xlat59.xy, vec2(0.0, 0.0));
                u_xlat59.xy = (-u_xlat59.xy) * u_xlat59.xy + u_xlat8.yw;
                u_xlat10.xy = u_xlat10.xy + vec2(1.0, 1.0);
                u_xlat59.xy = u_xlat59.xy + vec2(1.0, 1.0);
                u_xlat11.xy = u_xlat9.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat61.xy * vec2(0.159999996, 0.159999996);
                u_xlat10.xy = u_xlat10.xy * vec2(0.159999996, 0.159999996);
                u_xlat12.xy = u_xlat59.xy * vec2(0.159999996, 0.159999996);
                u_xlat59.xy = u_xlat8.yw * vec2(0.159999996, 0.159999996);
                u_xlat11.z = u_xlat10.x;
                u_xlat11.w = u_xlat59.x;
                u_xlat9.z = u_xlat12.x;
                u_xlat9.w = u_xlat8.x;
                u_xlat13 = u_xlat9.zwxz + u_xlat11.zwxz;
                u_xlat10.z = u_xlat11.y;
                u_xlat10.w = u_xlat59.y;
                u_xlat12.z = u_xlat9.y;
                u_xlat12.w = u_xlat8.z;
                u_xlat8.xyz = u_xlat10.zyw + u_xlat12.zyw;
                u_xlat9.xyz = u_xlat9.xzw / u_xlat13.zwy;
                u_xlat9.xyz = u_xlat9.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat10.xyz = u_xlat12.zyw / u_xlat8.xyz;
                u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat9.xyz = u_xlat9.yxz * _MainLightShadowmapSize.xxx;
                u_xlat10.xyz = u_xlat10.xyz * _MainLightShadowmapSize.yyy;
                u_xlat9.w = u_xlat10.x;
                u_xlat11 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.ywxw;
                u_xlat59.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat9.zw;
                u_xlat10.w = u_xlat9.y;
                u_xlat9.yw = u_xlat10.yz;
                u_xlat12 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat10 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.wywz;
                u_xlat9 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xwzw;
                u_xlat14 = u_xlat8.xxxy * u_xlat13.zwyz;
                u_xlat15 = u_xlat8.yyzz * u_xlat13;
                u_xlat80 = u_xlat8.z * u_xlat13.y;
                vec3 txVec4 = vec3(u_xlat11.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec4, 0.0);
                vec3 txVec5 = vec3(u_xlat11.zw,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec5, 0.0);
                u_xlat84 = u_xlat84 * u_xlat14.y;
                u_xlat82 = u_xlat14.x * u_xlat82 + u_xlat84;
                vec3 txVec6 = vec3(u_xlat59.xy,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec6, 0.0);
                u_xlat82 = u_xlat14.z * u_xlat84 + u_xlat82;
                vec3 txVec7 = vec3(u_xlat10.xy,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec7, 0.0);
                u_xlat82 = u_xlat14.w * u_xlat84 + u_xlat82;
                vec3 txVec8 = vec3(u_xlat12.xy,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec8, 0.0);
                u_xlat82 = u_xlat15.x * u_xlat84 + u_xlat82;
                vec3 txVec9 = vec3(u_xlat12.zw,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec9, 0.0);
                u_xlat82 = u_xlat15.y * u_xlat84 + u_xlat82;
                vec3 txVec10 = vec3(u_xlat10.zw,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec10, 0.0);
                u_xlat82 = u_xlat15.z * u_xlat84 + u_xlat82;
                vec3 txVec11 = vec3(u_xlat9.xy,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec11, 0.0);
                u_xlat82 = u_xlat15.w * u_xlat84 + u_xlat82;
                vec3 txVec12 = vec3(u_xlat9.zw,u_xlat6.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec12, 0.0);
                u_xlat79 = u_xlat80 * u_xlat84 + u_xlat82;
            } else {
                u_xlat7.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat7.xy = floor(u_xlat7.xy);
                u_xlat59.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat7.xy);
                u_xlat8 = u_xlat59.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat10.yw = u_xlat9.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat8.xz = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat59.xy);
                u_xlat9.xy = (-u_xlat59.xy) + vec2(1.0, 1.0);
                u_xlat61.xy = min(u_xlat59.xy, vec2(0.0, 0.0));
                u_xlat9.xy = (-u_xlat61.xy) * u_xlat61.xy + u_xlat9.xy;
                u_xlat61.xy = max(u_xlat59.xy, vec2(0.0, 0.0));
                u_xlat34.xz = (-u_xlat61.xy) * u_xlat61.xy + u_xlat8.yw;
                u_xlat9.xy = u_xlat9.xy + vec2(2.0, 2.0);
                u_xlat8.yw = u_xlat34.xz + vec2(2.0, 2.0);
                u_xlat11.z = u_xlat8.y * 0.0816320032;
                u_xlat12.xyz = u_xlat8.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                u_xlat8.xy = u_xlat9.xy * vec2(0.0816320032, 0.0816320032);
                u_xlat11.x = u_xlat12.y;
                u_xlat11.yw = u_xlat59.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat9.xz = u_xlat59.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat9.y = u_xlat8.x;
                u_xlat9.w = u_xlat10.y;
                u_xlat11 = u_xlat9 + u_xlat11;
                u_xlat12.yw = u_xlat59.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat10.xz = u_xlat59.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat10.y = u_xlat8.y;
                u_xlat8 = u_xlat10 + u_xlat12;
                u_xlat9 = u_xlat9 / u_xlat11;
                u_xlat9 = u_xlat9 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat10 = u_xlat10 / u_xlat8;
                u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat9 = u_xlat9.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat10 = u_xlat10.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat12.xzw = u_xlat9.yzw;
                u_xlat12.y = u_xlat10.x;
                u_xlat13 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat59.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.y = u_xlat12.y;
                u_xlat12.y = u_xlat10.z;
                u_xlat14 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat15.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.z = u_xlat12.y;
                u_xlat16 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyxz;
                u_xlat12.y = u_xlat10.w;
                u_xlat17 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat35.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.w = u_xlat12.y;
                u_xlat67.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat9.xw;
                u_xlat10.xzw = u_xlat12.xzw;
                u_xlat12 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyzy;
                u_xlat62.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat10.wy;
                u_xlat10.x = u_xlat9.x;
                u_xlat7.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat10.xy;
                u_xlat18 = u_xlat8.xxxx * u_xlat11;
                u_xlat19 = u_xlat8.yyyy * u_xlat11;
                u_xlat20 = u_xlat8.zzzz * u_xlat11;
                u_xlat8 = u_xlat8.wwww * u_xlat11;
                vec3 txVec13 = vec3(u_xlat13.xy,u_xlat6.z);
                u_xlat80 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec13, 0.0);
                vec3 txVec14 = vec3(u_xlat13.zw,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec14, 0.0);
                u_xlat82 = u_xlat82 * u_xlat18.y;
                u_xlat80 = u_xlat18.x * u_xlat80 + u_xlat82;
                vec3 txVec15 = vec3(u_xlat59.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec15, 0.0);
                u_xlat80 = u_xlat18.z * u_xlat82 + u_xlat80;
                vec3 txVec16 = vec3(u_xlat16.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec16, 0.0);
                u_xlat80 = u_xlat18.w * u_xlat82 + u_xlat80;
                vec3 txVec17 = vec3(u_xlat14.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec17, 0.0);
                u_xlat80 = u_xlat19.x * u_xlat82 + u_xlat80;
                vec3 txVec18 = vec3(u_xlat14.zw,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec18, 0.0);
                u_xlat80 = u_xlat19.y * u_xlat82 + u_xlat80;
                vec3 txVec19 = vec3(u_xlat15.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec19, 0.0);
                u_xlat80 = u_xlat19.z * u_xlat82 + u_xlat80;
                vec3 txVec20 = vec3(u_xlat16.zw,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec20, 0.0);
                u_xlat80 = u_xlat19.w * u_xlat82 + u_xlat80;
                vec3 txVec21 = vec3(u_xlat17.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec21, 0.0);
                u_xlat80 = u_xlat20.x * u_xlat82 + u_xlat80;
                vec3 txVec22 = vec3(u_xlat17.zw,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec22, 0.0);
                u_xlat80 = u_xlat20.y * u_xlat82 + u_xlat80;
                vec3 txVec23 = vec3(u_xlat35.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec23, 0.0);
                u_xlat80 = u_xlat20.z * u_xlat82 + u_xlat80;
                vec3 txVec24 = vec3(u_xlat67.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec24, 0.0);
                u_xlat80 = u_xlat20.w * u_xlat82 + u_xlat80;
                vec3 txVec25 = vec3(u_xlat12.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec25, 0.0);
                u_xlat80 = u_xlat8.x * u_xlat82 + u_xlat80;
                vec3 txVec26 = vec3(u_xlat12.zw,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec26, 0.0);
                u_xlat80 = u_xlat8.y * u_xlat82 + u_xlat80;
                vec3 txVec27 = vec3(u_xlat62.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec27, 0.0);
                u_xlat80 = u_xlat8.z * u_xlat82 + u_xlat80;
                vec3 txVec28 = vec3(u_xlat7.xy,u_xlat6.z);
                u_xlat82 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec28, 0.0);
                u_xlat79 = u_xlat8.w * u_xlat82 + u_xlat80;
            }
        }
    } else {
        vec3 txVec29 = vec3(u_xlat6.xy,u_xlat6.z);
        u_xlat79 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec29, 0.0);
    }
    u_xlat80 = (-_MainLightShadowParams.x) + 1.0;
    u_xlat79 = u_xlat79 * _MainLightShadowParams.x + u_xlat80;
    u_xlatb82 = 0.0>=u_xlat6.z;
    u_xlatb6 = u_xlat6.z>=1.0;
    u_xlatb82 = u_xlatb82 || u_xlatb6;
    u_xlat79 = (u_xlatb82) ? 1.0 : u_xlat79;
    u_xlat0.x = dot(u_xlat0.xyz, (-_MainLightPosition.xyz));
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat6.xyz = vec3(u_xlat79) * _MainLightColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat6.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat3.xyz;
    u_xlatb79 = unity_LODFade.x<0.0;
    u_xlat3.x = unity_LODFade.x + 1.0;
    u_xlat79 = (u_xlatb79) ? u_xlat3.x : unity_LODFade.x;
    u_xlatb3 = 0.5>=u_xlat79;
    u_xlat1.xyz = abs(u_xlat1.xyz) * _ScreenParams.xyx;
    u_xlatu1.xyz = uvec3(u_xlat1.xyz);
    u_xlatu53 = u_xlatu1.z * 1025u;
    u_xlatu29 = u_xlatu53 >> (6u & uint(0x1F));
    u_xlati53 = int(u_xlatu53 ^ u_xlatu29);
    u_xlatu53 = uint(u_xlati53) * 9u;
    u_xlatu29 = u_xlatu53 >> (11u & uint(0x1F));
    u_xlati53 = int(u_xlatu53 ^ u_xlatu29);
    u_xlati53 = u_xlati53 * 32769;
    u_xlati27 = int(uint(u_xlati53) ^ u_xlatu1.y);
    u_xlatu27 = uint(u_xlati27) * 1025u;
    u_xlatu53 = u_xlatu27 >> (6u & uint(0x1F));
    u_xlati27 = int(u_xlatu53 ^ u_xlatu27);
    u_xlatu27 = uint(u_xlati27) * 9u;
    u_xlatu53 = u_xlatu27 >> (11u & uint(0x1F));
    u_xlati27 = int(u_xlatu53 ^ u_xlatu27);
    u_xlati27 = u_xlati27 * 32769;
    u_xlati1 = int(uint(u_xlati27) ^ u_xlatu1.x);
    u_xlatu1.x = uint(u_xlati1) * 1025u;
    u_xlatu27 = u_xlatu1.x >> (6u & uint(0x1F));
    u_xlati1 = int(u_xlatu27 ^ u_xlatu1.x);
    u_xlatu1.x = uint(u_xlati1) * 9u;
    u_xlatu27 = u_xlatu1.x >> (11u & uint(0x1F));
    u_xlati1 = int(u_xlatu27 ^ u_xlatu1.x);
    u_xlati1 = u_xlati1 * 32769;
    u_xlat1.x = intBitsToFloat(int(int_bitfieldInsert(1065353216, u_xlati1, 0 & int(0x1F), 23)));
    u_xlat1.x = u_xlat1.x + -1.0;
    u_xlat27 = (-u_xlat1.x) + 1.0;
    u_xlat1.x = (u_xlatb3) ? u_xlat1.x : u_xlat27;
    u_xlat1.x = u_xlat79 * 2.0 + (-u_xlat1.x);
    u_xlat27 = u_xlat1.x * u_xlat3.w;
    u_xlatb53.x = u_xlat27>=0.400000006;
    u_xlat53.x = u_xlatb53.x ? u_xlat27 : float(0.0);
    u_xlat1.x = u_xlat3.w * u_xlat1.x + -0.400000006;
    u_xlat79 = dFdxCoarse(u_xlat27);
    u_xlat27 = dFdyCoarse(u_xlat27);
    u_xlat27 = abs(u_xlat27) + abs(u_xlat79);
    u_xlat27 = max(u_xlat27, 9.99999975e-05);
    u_xlat1.x = u_xlat1.x / u_xlat27;
    u_xlat1.x = u_xlat1.x + 0.5;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlatb27 = _AlphaToMaskAvailable!=0.0;
    u_xlat1.x = (u_xlatb27) ? u_xlat1.x : u_xlat53.x;
    u_xlat53.x = u_xlat1.x + -9.99999975e-05;
    u_xlatb53.x = u_xlat53.x<0.0;
    if(((int(u_xlatb53.x) * int(0xffffffffu)))!=0){discard;}
    u_xlatb53.x = 0.0<vs_INTERP4.w;
    u_xlatb53.y = unity_WorldTransformParams.w>=0.0;
    u_xlat53.x = (u_xlatb53.x) ? float(1.0) : float(-1.0);
    u_xlat53.y = (u_xlatb53.y) ? float(1.0) : float(-1.0);
    u_xlat53.x = u_xlat53.y * u_xlat53.x;
    u_xlat3.xyz = vs_INTERP4.yzx * vs_INTERP9.zxy;
    u_xlat3.xyz = vs_INTERP9.yzx * vs_INTERP4.zxy + (-u_xlat3.xyz);
    u_xlat3.xyz = u_xlat53.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * u_xlat31.yyy;
    u_xlat3.xyz = u_xlat31.xxx * vs_INTERP4.xyz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat31.zzz * vs_INTERP9.xyz + u_xlat3.xyz;
    u_xlat53.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat53.x = inversesqrt(u_xlat53.x);
    u_xlat3.xyz = u_xlat53.xxx * u_xlat3.xyz;
    u_xlat3.w = 1.0;
    u_xlat6.x = dot(unity_SHAr, u_xlat3);
    u_xlat6.y = dot(unity_SHAg, u_xlat3);
    u_xlat6.z = dot(unity_SHAb, u_xlat3);
    u_xlat7 = u_xlat3.yzzx * u_xlat3.xyzz;
    u_xlat8.x = dot(unity_SHBr, u_xlat7);
    u_xlat8.y = dot(unity_SHBg, u_xlat7);
    u_xlat8.z = dot(unity_SHBb, u_xlat7);
    u_xlat53.x = u_xlat3.y * u_xlat3.y;
    u_xlat53.x = u_xlat3.x * u_xlat3.x + (-u_xlat53.x);
    u_xlat31.xyz = unity_SHC.xyz * u_xlat53.xxx + u_xlat8.xyz;
    u_xlat31.xyz = u_xlat31.xyz + u_xlat6.xyz;
    u_xlat31.xyz = max(u_xlat31.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat5.x = u_xlat5.x;
    u_xlat5.x = clamp(u_xlat5.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat4.xyz = u_xlat4.xyz * vec3(0.959999979, 0.959999979, 0.959999979);
    u_xlat53.x = (-u_xlat5.x) + 1.0;
    u_xlat79 = u_xlat53.x * u_xlat53.x;
    u_xlat79 = max(u_xlat79, 0.0078125);
    u_xlat81 = u_xlat79 * u_xlat79;
    u_xlat82 = u_xlat5.x + 0.0400000215;
    u_xlat82 = min(u_xlat82, 1.0);
    u_xlat5.x = u_xlat79 * 4.0 + 2.0;
    u_xlat6.x = min(vs_INTERP6.w, 1.0);
    if(u_xlatb78){
        u_xlatb78 = _MainLightShadowParams.y==1.0;
        if(u_xlatb78){
            u_xlat7 = vs_INTERP3.xyxy + _MainLightShadowOffset0;
            vec3 txVec30 = vec3(u_xlat7.xy,vs_INTERP3.z);
            u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec30, 0.0);
            vec3 txVec31 = vec3(u_xlat7.zw,vs_INTERP3.z);
            u_xlat8.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec31, 0.0);
            u_xlat7 = vs_INTERP3.xyxy + _MainLightShadowOffset1;
            vec3 txVec32 = vec3(u_xlat7.xy,vs_INTERP3.z);
            u_xlat8.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec32, 0.0);
            vec3 txVec33 = vec3(u_xlat7.zw,vs_INTERP3.z);
            u_xlat8.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec33, 0.0);
            u_xlat78 = dot(u_xlat8, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb32.x = _MainLightShadowParams.y==2.0;
            if(u_xlatb32.x){
                u_xlat32.xy = vs_INTERP3.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat32.xy = floor(u_xlat32.xy);
                u_xlat7.xy = vs_INTERP3.xy * _MainLightShadowmapSize.zw + (-u_xlat32.xy);
                u_xlat8 = u_xlat7.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat59.xy = u_xlat9.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat8.xz = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat7.xy);
                u_xlat9.xy = (-u_xlat7.xy) + vec2(1.0, 1.0);
                u_xlat61.xy = min(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat61.xy = (-u_xlat61.xy) * u_xlat61.xy + u_xlat9.xy;
                u_xlat7.xy = max(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat7.xy = (-u_xlat7.xy) * u_xlat7.xy + u_xlat8.yw;
                u_xlat61.xy = u_xlat61.xy + vec2(1.0, 1.0);
                u_xlat7.xy = u_xlat7.xy + vec2(1.0, 1.0);
                u_xlat10.xy = u_xlat8.xz * vec2(0.159999996, 0.159999996);
                u_xlat11.xy = u_xlat9.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat61.xy * vec2(0.159999996, 0.159999996);
                u_xlat12.xy = u_xlat7.xy * vec2(0.159999996, 0.159999996);
                u_xlat7.xy = u_xlat8.yw * vec2(0.159999996, 0.159999996);
                u_xlat10.z = u_xlat9.x;
                u_xlat10.w = u_xlat7.x;
                u_xlat11.z = u_xlat12.x;
                u_xlat11.w = u_xlat59.x;
                u_xlat8 = u_xlat10.zwxz + u_xlat11.zwxz;
                u_xlat9.z = u_xlat10.y;
                u_xlat9.w = u_xlat7.y;
                u_xlat12.z = u_xlat11.y;
                u_xlat12.w = u_xlat59.y;
                u_xlat7.xyz = u_xlat9.zyw + u_xlat12.zyw;
                u_xlat9.xyz = u_xlat11.xzw / u_xlat8.zwy;
                u_xlat9.xyz = u_xlat9.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat10.xyz = u_xlat12.zyw / u_xlat7.xyz;
                u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat9.xyz = u_xlat9.yxz * _MainLightShadowmapSize.xxx;
                u_xlat10.xyz = u_xlat10.xyz * _MainLightShadowmapSize.yyy;
                u_xlat9.w = u_xlat10.x;
                u_xlat11 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.ywxw;
                u_xlat12.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat9.zw;
                u_xlat10.w = u_xlat9.y;
                u_xlat9.yw = u_xlat10.yz;
                u_xlat13 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat10 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.wywz;
                u_xlat9 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xwzw;
                u_xlat14 = u_xlat7.xxxy * u_xlat8.zwyz;
                u_xlat15 = u_xlat7.yyzz * u_xlat8;
                u_xlat32.x = u_xlat7.z * u_xlat8.y;
                vec3 txVec34 = vec3(u_xlat11.xy,vs_INTERP3.z);
                u_xlat58 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec34, 0.0);
                vec3 txVec35 = vec3(u_xlat11.zw,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec35, 0.0);
                u_xlat84 = u_xlat84 * u_xlat14.y;
                u_xlat58 = u_xlat14.x * u_xlat58 + u_xlat84;
                vec3 txVec36 = vec3(u_xlat12.xy,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec36, 0.0);
                u_xlat58 = u_xlat14.z * u_xlat84 + u_xlat58;
                vec3 txVec37 = vec3(u_xlat10.xy,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec37, 0.0);
                u_xlat58 = u_xlat14.w * u_xlat84 + u_xlat58;
                vec3 txVec38 = vec3(u_xlat13.xy,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec38, 0.0);
                u_xlat58 = u_xlat15.x * u_xlat84 + u_xlat58;
                vec3 txVec39 = vec3(u_xlat13.zw,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec39, 0.0);
                u_xlat58 = u_xlat15.y * u_xlat84 + u_xlat58;
                vec3 txVec40 = vec3(u_xlat10.zw,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec40, 0.0);
                u_xlat58 = u_xlat15.z * u_xlat84 + u_xlat58;
                vec3 txVec41 = vec3(u_xlat9.xy,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec41, 0.0);
                u_xlat58 = u_xlat15.w * u_xlat84 + u_xlat58;
                vec3 txVec42 = vec3(u_xlat9.zw,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec42, 0.0);
                u_xlat78 = u_xlat32.x * u_xlat84 + u_xlat58;
            } else {
                u_xlat32.xy = vs_INTERP3.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat32.xy = floor(u_xlat32.xy);
                u_xlat7.xy = vs_INTERP3.xy * _MainLightShadowmapSize.zw + (-u_xlat32.xy);
                u_xlat8 = u_xlat7.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat10.yw = u_xlat9.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat59.xy = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat7.xy);
                u_xlat8.xz = (-u_xlat7.xy) + vec2(1.0, 1.0);
                u_xlat9.xy = min(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat8.xz = (-u_xlat9.xy) * u_xlat9.xy + u_xlat8.xz;
                u_xlat9.xy = max(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat8.yw = (-u_xlat9.xy) * u_xlat9.xy + u_xlat8.yw;
                u_xlat8 = u_xlat8 + vec4(2.0, 2.0, 2.0, 2.0);
                u_xlat9.z = u_xlat8.y * 0.0816320032;
                u_xlat11.xy = u_xlat59.yx * vec2(0.0816320032, 0.0816320032);
                u_xlat59.xy = u_xlat8.xz * vec2(0.0816320032, 0.0816320032);
                u_xlat11.z = u_xlat8.w * 0.0816320032;
                u_xlat9.x = u_xlat11.y;
                u_xlat9.yw = u_xlat7.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat8.xz = u_xlat7.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat8.y = u_xlat59.x;
                u_xlat8.w = u_xlat10.y;
                u_xlat9 = u_xlat8 + u_xlat9;
                u_xlat11.yw = u_xlat7.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat10.xz = u_xlat7.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat10.y = u_xlat59.y;
                u_xlat7 = u_xlat10 + u_xlat11;
                u_xlat8 = u_xlat8 / u_xlat9;
                u_xlat8 = u_xlat8 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat10 = u_xlat10 / u_xlat7;
                u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat8 = u_xlat8.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat10 = u_xlat10.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat11.xzw = u_xlat8.yzw;
                u_xlat11.y = u_xlat10.x;
                u_xlat12 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat13.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.y = u_xlat11.y;
                u_xlat11.y = u_xlat10.z;
                u_xlat14 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat65.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.z = u_xlat11.y;
                u_xlat15 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.xyxz;
                u_xlat11.y = u_xlat10.w;
                u_xlat16 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat34.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.w = u_xlat11.y;
                u_xlat17.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat8.xw;
                u_xlat10.xzw = u_xlat11.xzw;
                u_xlat11 = u_xlat32.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyzy;
                u_xlat62.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat10.wy;
                u_xlat10.x = u_xlat8.x;
                u_xlat32.xy = u_xlat32.xy * _MainLightShadowmapSize.xy + u_xlat10.xy;
                u_xlat18 = u_xlat7.xxxx * u_xlat9;
                u_xlat19 = u_xlat7.yyyy * u_xlat9;
                u_xlat20 = u_xlat7.zzzz * u_xlat9;
                u_xlat7 = u_xlat7.wwww * u_xlat9;
                vec3 txVec43 = vec3(u_xlat12.xy,vs_INTERP3.z);
                u_xlat84 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec43, 0.0);
                vec3 txVec44 = vec3(u_xlat12.zw,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec44, 0.0);
                u_xlat8.x = u_xlat8.x * u_xlat18.y;
                u_xlat84 = u_xlat18.x * u_xlat84 + u_xlat8.x;
                vec3 txVec45 = vec3(u_xlat13.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec45, 0.0);
                u_xlat84 = u_xlat18.z * u_xlat8.x + u_xlat84;
                vec3 txVec46 = vec3(u_xlat15.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec46, 0.0);
                u_xlat84 = u_xlat18.w * u_xlat8.x + u_xlat84;
                vec3 txVec47 = vec3(u_xlat14.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec47, 0.0);
                u_xlat84 = u_xlat19.x * u_xlat8.x + u_xlat84;
                vec3 txVec48 = vec3(u_xlat14.zw,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec48, 0.0);
                u_xlat84 = u_xlat19.y * u_xlat8.x + u_xlat84;
                vec3 txVec49 = vec3(u_xlat65.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec49, 0.0);
                u_xlat84 = u_xlat19.z * u_xlat8.x + u_xlat84;
                vec3 txVec50 = vec3(u_xlat15.zw,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec50, 0.0);
                u_xlat84 = u_xlat19.w * u_xlat8.x + u_xlat84;
                vec3 txVec51 = vec3(u_xlat16.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec51, 0.0);
                u_xlat84 = u_xlat20.x * u_xlat8.x + u_xlat84;
                vec3 txVec52 = vec3(u_xlat16.zw,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec52, 0.0);
                u_xlat84 = u_xlat20.y * u_xlat8.x + u_xlat84;
                vec3 txVec53 = vec3(u_xlat34.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec53, 0.0);
                u_xlat84 = u_xlat20.z * u_xlat8.x + u_xlat84;
                vec3 txVec54 = vec3(u_xlat17.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec54, 0.0);
                u_xlat84 = u_xlat20.w * u_xlat8.x + u_xlat84;
                vec3 txVec55 = vec3(u_xlat11.xy,vs_INTERP3.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec55, 0.0);
                u_xlat84 = u_xlat7.x * u_xlat8.x + u_xlat84;
                vec3 txVec56 = vec3(u_xlat11.zw,vs_INTERP3.z);
                u_xlat7.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec56, 0.0);
                u_xlat84 = u_xlat7.y * u_xlat7.x + u_xlat84;
                vec3 txVec57 = vec3(u_xlat62.xy,vs_INTERP3.z);
                u_xlat7.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec57, 0.0);
                u_xlat84 = u_xlat7.z * u_xlat7.x + u_xlat84;
                vec3 txVec58 = vec3(u_xlat32.xy,vs_INTERP3.z);
                u_xlat32.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec58, 0.0);
                u_xlat78 = u_xlat7.w * u_xlat32.x + u_xlat84;
            }
        }
    } else {
        vec3 txVec59 = vec3(vs_INTERP3.xy,vs_INTERP3.z);
        u_xlat78 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec59, 0.0);
    }
    u_xlat78 = u_xlat78 * _MainLightShadowParams.x + u_xlat80;
    u_xlatb80 = 0.0>=vs_INTERP3.z;
    u_xlatb32.x = vs_INTERP3.z>=1.0;
    u_xlatb80 = u_xlatb80 || u_xlatb32.x;
    u_xlat78 = (u_xlatb80) ? 1.0 : u_xlat78;
    u_xlat32.xyz = vs_INTERP8.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat80 = dot(u_xlat32.xyz, u_xlat32.xyz);
    u_xlat32.x = u_xlat80 * _MainLightShadowParams.z + _MainLightShadowParams.w;
    u_xlat32.x = clamp(u_xlat32.x, 0.0, 1.0);
    u_xlat58 = (-u_xlat78) + 1.0;
    u_xlat78 = u_xlat32.x * u_xlat58 + u_xlat78;
    u_xlatb32.x = _MainLightCookieTextureFormat!=-1.0;
    if(u_xlatb32.x){
        u_xlat32.xy = vs_INTERP8.yy * _MainLightWorldToLight[1].xy;
        u_xlat32.xy = _MainLightWorldToLight[0].xy * vs_INTERP8.xx + u_xlat32.xy;
        u_xlat32.xy = _MainLightWorldToLight[2].xy * vs_INTERP8.zz + u_xlat32.xy;
        u_xlat32.xy = u_xlat32.xy + _MainLightWorldToLight[3].xy;
        u_xlat32.xy = u_xlat32.xy * vec2(0.5, 0.5) + vec2(0.5, 0.5);
        u_xlat7 = texture(sampler2D(_MainLightCookieTexture, sampler_MainLightCookieTexture), u_xlat32.xy, _GlobalMipBias.x);
        u_xlatb32.xy = equal(vec4(vec4(_MainLightCookieTextureFormat, _MainLightCookieTextureFormat, _MainLightCookieTextureFormat, _MainLightCookieTextureFormat)), vec4(0.0, 1.0, 0.0, 0.0)).xy;
        u_xlat58 = (u_xlatb32.y) ? u_xlat7.w : u_xlat7.x;
        u_xlat32.xyz = (u_xlatb32.x) ? u_xlat7.xyz : vec3(u_xlat58);
    } else {
        u_xlat32.x = float(1.0);
        u_xlat32.y = float(1.0);
        u_xlat32.z = float(1.0);
    }
    u_xlat32.xyz = u_xlat32.xyz * _MainLightColor.xyz;
    u_xlat7.x = dot((-u_xlat2.xyz), u_xlat3.xyz);
    u_xlat7.x = u_xlat7.x + u_xlat7.x;
    u_xlat7.xyz = u_xlat3.xyz * (-u_xlat7.xxx) + (-u_xlat2.xyz);
    u_xlat85 = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat85 = clamp(u_xlat85, 0.0, 1.0);
    u_xlat85 = (-u_xlat85) + 1.0;
    u_xlat85 = u_xlat85 * u_xlat85;
    u_xlat85 = u_xlat85 * u_xlat85;
    u_xlat8.x = (-u_xlat53.x) * 0.699999988 + 1.70000005;
    u_xlat53.x = u_xlat53.x * u_xlat8.x;
    u_xlat53.x = u_xlat53.x * 6.0;
    u_xlat8 = textureLod(samplerCube(unity_SpecCube0, samplerunity_SpecCube0), u_xlat7.xyz, u_xlat53.x);
    u_xlat53.x = u_xlat8.w + -1.0;
    u_xlat53.x = unity_SpecCube0_HDR.w * u_xlat53.x + 1.0;
    u_xlat53.x = max(u_xlat53.x, 0.0);
    u_xlat53.x = log2(u_xlat53.x);
    u_xlat53.x = u_xlat53.x * unity_SpecCube0_HDR.y;
    u_xlat53.x = exp2(u_xlat53.x);
    u_xlat53.x = u_xlat53.x * unity_SpecCube0_HDR.x;
    u_xlat7.xyz = u_xlat8.xyz * u_xlat53.xxx;
    u_xlat53.xy = vec2(u_xlat79) * vec2(u_xlat79) + vec2(-1.0, 1.0);
    u_xlat79 = float(1.0) / u_xlat53.y;
    u_xlat82 = u_xlat82 + -0.0399999991;
    u_xlat82 = u_xlat85 * u_xlat82 + 0.0399999991;
    u_xlat79 = u_xlat79 * u_xlat82;
    u_xlat7.xyz = vec3(u_xlat79) * u_xlat7.xyz;
    u_xlat31.xyz = u_xlat31.xyz * u_xlat4.xyz + u_xlat7.xyz;
    u_xlat78 = u_xlat78 * unity_LightData.z;
    u_xlat79 = dot(u_xlat3.xyz, _MainLightPosition.xyz);
    u_xlat79 = clamp(u_xlat79, 0.0, 1.0);
    u_xlat78 = u_xlat78 * u_xlat79;
    u_xlat32.xyz = vec3(u_xlat78) * u_xlat32.xyz;
    u_xlat7.xyz = u_xlat2.xyz + _MainLightPosition.xyz;
    u_xlat78 = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat78 = max(u_xlat78, 1.17549435e-38);
    u_xlat78 = inversesqrt(u_xlat78);
    u_xlat7.xyz = vec3(u_xlat78) * u_xlat7.xyz;
    u_xlat78 = dot(u_xlat3.xyz, u_xlat7.xyz);
    u_xlat78 = clamp(u_xlat78, 0.0, 1.0);
    u_xlat79 = dot(_MainLightPosition.xyz, u_xlat7.xyz);
    u_xlat79 = clamp(u_xlat79, 0.0, 1.0);
    u_xlat78 = u_xlat78 * u_xlat78;
    u_xlat78 = u_xlat78 * u_xlat53.x + 1.00001001;
    u_xlat79 = u_xlat79 * u_xlat79;
    u_xlat78 = u_xlat78 * u_xlat78;
    u_xlat79 = max(u_xlat79, 0.100000001);
    u_xlat78 = u_xlat78 * u_xlat79;
    u_xlat78 = u_xlat5.x * u_xlat78;
    u_xlat78 = u_xlat81 / u_xlat78;
    u_xlat7.xyz = vec3(u_xlat78) * vec3(0.0399999991, 0.0399999991, 0.0399999991) + u_xlat4.xyz;
    u_xlat32.xyz = u_xlat32.xyz * u_xlat7.xyz;
    u_xlat78 = min(_AdditionalLightsCount.x, unity_LightData.y);
    u_xlatu78 =  uint(int(u_xlat78));
    u_xlat79 = u_xlat80 * _AdditionalShadowFadeParams.x + _AdditionalShadowFadeParams.y;
    u_xlat79 = clamp(u_xlat79, 0.0, 1.0);
    u_xlatb7.xy = equal(vec4(vec4(_AdditionalLightsCookieAtlasTextureFormat, _AdditionalLightsCookieAtlasTextureFormat, _AdditionalLightsCookieAtlasTextureFormat, _AdditionalLightsCookieAtlasTextureFormat)), vec4(0.0, 1.0, 0.0, 0.0)).xy;
    u_xlat8.x = float(0.0);
    u_xlat8.y = float(0.0);
    u_xlat8.z = float(0.0);
    for(uint u_xlatu_loop_1 = 0u ; u_xlatu_loop_1<u_xlatu78 ; u_xlatu_loop_1++)
    {
        u_xlatu82 = u_xlatu_loop_1 >> (2u & uint(0x1F));
        u_xlati59 = int(u_xlatu_loop_1 & 3u);
        u_xlat82 = dot(unity_LightIndices[int(u_xlatu82)], uintBitsToFloat(ImmCB_0[u_xlati59]));
        u_xlati82 = int(u_xlat82);
        u_xlat9.xyz = (-vs_INTERP8.xyz) * _AdditionalLightsPosition[u_xlati82].www + _AdditionalLightsPosition[u_xlati82].xyz;
        u_xlat59.x = dot(u_xlat9.xyz, u_xlat9.xyz);
        u_xlat59.x = max(u_xlat59.x, 6.10351562e-05);
        u_xlat85 = inversesqrt(u_xlat59.x);
        u_xlat10.xyz = vec3(u_xlat85) * u_xlat9.xyz;
        u_xlat86 = float(1.0) / float(u_xlat59.x);
        u_xlat59.x = u_xlat59.x * _AdditionalLightsAttenuation[u_xlati82].x;
        u_xlat59.x = (-u_xlat59.x) * u_xlat59.x + 1.0;
        u_xlat59.x = max(u_xlat59.x, 0.0);
        u_xlat59.x = u_xlat59.x * u_xlat59.x;
        u_xlat59.x = u_xlat59.x * u_xlat86;
        u_xlat86 = dot(_AdditionalLightsSpotDir[u_xlati82].xyz, u_xlat10.xyz);
        u_xlat86 = u_xlat86 * _AdditionalLightsAttenuation[u_xlati82].z + _AdditionalLightsAttenuation[u_xlati82].w;
        u_xlat86 = clamp(u_xlat86, 0.0, 1.0);
        u_xlat86 = u_xlat86 * u_xlat86;
        u_xlat59.x = u_xlat59.x * u_xlat86;
        u_xlati86 = int(_AdditionalShadowParams[u_xlati82].w);
        u_xlatb87 = u_xlati86>=0;
        if(u_xlatb87){
            u_xlatb87 = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_AdditionalShadowParams[u_xlati82].z);
            if(u_xlatb87){
                u_xlatb11.xyz = greaterThanEqual(abs(u_xlat10.zzyz), abs(u_xlat10.xyxx)).xyz;
                u_xlatb87 = u_xlatb11.y && u_xlatb11.x;
                u_xlatb11.xyw = lessThan((-u_xlat10.zyzx), vec4(0.0, 0.0, 0.0, 0.0)).xyw;
                u_xlat11.x = (u_xlatb11.x) ? float(5.0) : float(4.0);
                u_xlat11.y = (u_xlatb11.y) ? float(3.0) : float(2.0);
                u_xlat88 = u_xlatb11.w ? 1.0 : float(0.0);
                u_xlat88 = (u_xlatb11.z) ? u_xlat11.y : u_xlat88;
                u_xlat87 = (u_xlatb87) ? u_xlat11.x : u_xlat88;
                u_xlat88 = trunc(_AdditionalShadowParams[u_xlati82].w);
                u_xlat87 = u_xlat87 + u_xlat88;
                u_xlati86 = int(u_xlat87);
            }
            u_xlati86 = u_xlati86 << (2 & int(0x1F));
            u_xlat11 = vs_INTERP8.yyyy * _AdditionalLightsWorldToShadow[(u_xlati86 + 1) / 4][(u_xlati86 + 1) % 4];
            u_xlat11 = _AdditionalLightsWorldToShadow[u_xlati86 / 4][u_xlati86 % 4] * vs_INTERP8.xxxx + u_xlat11;
            u_xlat11 = _AdditionalLightsWorldToShadow[(u_xlati86 + 2) / 4][(u_xlati86 + 2) % 4] * vs_INTERP8.zzzz + u_xlat11;
            u_xlat11 = u_xlat11 + _AdditionalLightsWorldToShadow[(u_xlati86 + 3) / 4][(u_xlati86 + 3) % 4];
            u_xlat11.xyz = u_xlat11.xyz / u_xlat11.www;
            u_xlatb86 = 0.0<_AdditionalShadowParams[u_xlati82].y;
            if(u_xlatb86){
                u_xlatb86 = 1.0==_AdditionalShadowParams[u_xlati82].y;
                if(u_xlatb86){
                    u_xlat12 = u_xlat11.xyxy + _AdditionalShadowOffset0;
                    vec3 txVec60 = vec3(u_xlat12.xy,u_xlat11.z);
                    u_xlat13.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec60, 0.0);
                    vec3 txVec61 = vec3(u_xlat12.zw,u_xlat11.z);
                    u_xlat13.y = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec61, 0.0);
                    u_xlat12 = u_xlat11.xyxy + _AdditionalShadowOffset1;
                    vec3 txVec62 = vec3(u_xlat12.xy,u_xlat11.z);
                    u_xlat13.z = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec62, 0.0);
                    vec3 txVec63 = vec3(u_xlat12.zw,u_xlat11.z);
                    u_xlat13.w = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec63, 0.0);
                    u_xlat86 = dot(u_xlat13, vec4(0.25, 0.25, 0.25, 0.25));
                } else {
                    u_xlatb87 = 2.0==_AdditionalShadowParams[u_xlati82].y;
                    if(u_xlatb87){
                        u_xlat12.xy = u_xlat11.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat12.xy = floor(u_xlat12.xy);
                        u_xlat64.xy = u_xlat11.xy * _AdditionalShadowmapSize.zw + (-u_xlat12.xy);
                        u_xlat13 = u_xlat64.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat14 = u_xlat13.xxzz * u_xlat13.xxzz;
                        u_xlat13.xz = u_xlat14.yw * vec2(0.0799999982, 0.0799999982);
                        u_xlat14.xy = u_xlat14.xz * vec2(0.5, 0.5) + (-u_xlat64.xy);
                        u_xlat66.xy = (-u_xlat64.xy) + vec2(1.0, 1.0);
                        u_xlat15.xy = min(u_xlat64.xy, vec2(0.0, 0.0));
                        u_xlat15.xy = (-u_xlat15.xy) * u_xlat15.xy + u_xlat66.xy;
                        u_xlat64.xy = max(u_xlat64.xy, vec2(0.0, 0.0));
                        u_xlat64.xy = (-u_xlat64.xy) * u_xlat64.xy + u_xlat13.yw;
                        u_xlat15.xy = u_xlat15.xy + vec2(1.0, 1.0);
                        u_xlat64.xy = u_xlat64.xy + vec2(1.0, 1.0);
                        u_xlat16.xy = u_xlat14.xy * vec2(0.159999996, 0.159999996);
                        u_xlat14.xy = u_xlat66.xy * vec2(0.159999996, 0.159999996);
                        u_xlat15.xy = u_xlat15.xy * vec2(0.159999996, 0.159999996);
                        u_xlat17.xy = u_xlat64.xy * vec2(0.159999996, 0.159999996);
                        u_xlat64.xy = u_xlat13.yw * vec2(0.159999996, 0.159999996);
                        u_xlat16.z = u_xlat15.x;
                        u_xlat16.w = u_xlat64.x;
                        u_xlat14.z = u_xlat17.x;
                        u_xlat14.w = u_xlat13.x;
                        u_xlat18 = u_xlat14.zwxz + u_xlat16.zwxz;
                        u_xlat15.z = u_xlat16.y;
                        u_xlat15.w = u_xlat64.y;
                        u_xlat17.z = u_xlat14.y;
                        u_xlat17.w = u_xlat13.z;
                        u_xlat13.xyz = u_xlat15.zyw + u_xlat17.zyw;
                        u_xlat14.xyz = u_xlat14.xzw / u_xlat18.zwy;
                        u_xlat14.xyz = u_xlat14.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat15.xyz = u_xlat17.zyw / u_xlat13.xyz;
                        u_xlat15.xyz = u_xlat15.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat14.xyz = u_xlat14.yxz * _AdditionalShadowmapSize.xxx;
                        u_xlat15.xyz = u_xlat15.xyz * _AdditionalShadowmapSize.yyy;
                        u_xlat14.w = u_xlat15.x;
                        u_xlat16 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.ywxw;
                        u_xlat64.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat14.zw;
                        u_xlat15.w = u_xlat14.y;
                        u_xlat14.yw = u_xlat15.yz;
                        u_xlat17 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.xyzy;
                        u_xlat15 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat15.wywz;
                        u_xlat14 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.xwzw;
                        u_xlat19 = u_xlat13.xxxy * u_xlat18.zwyz;
                        u_xlat20 = u_xlat13.yyzz * u_xlat18;
                        u_xlat87 = u_xlat13.z * u_xlat18.y;
                        vec3 txVec64 = vec3(u_xlat16.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec64, 0.0);
                        vec3 txVec65 = vec3(u_xlat16.zw,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec65, 0.0);
                        u_xlat89 = u_xlat89 * u_xlat19.y;
                        u_xlat88 = u_xlat19.x * u_xlat88 + u_xlat89;
                        vec3 txVec66 = vec3(u_xlat64.xy,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec66, 0.0);
                        u_xlat88 = u_xlat19.z * u_xlat89 + u_xlat88;
                        vec3 txVec67 = vec3(u_xlat15.xy,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec67, 0.0);
                        u_xlat88 = u_xlat19.w * u_xlat89 + u_xlat88;
                        vec3 txVec68 = vec3(u_xlat17.xy,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec68, 0.0);
                        u_xlat88 = u_xlat20.x * u_xlat89 + u_xlat88;
                        vec3 txVec69 = vec3(u_xlat17.zw,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec69, 0.0);
                        u_xlat88 = u_xlat20.y * u_xlat89 + u_xlat88;
                        vec3 txVec70 = vec3(u_xlat15.zw,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec70, 0.0);
                        u_xlat88 = u_xlat20.z * u_xlat89 + u_xlat88;
                        vec3 txVec71 = vec3(u_xlat14.xy,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec71, 0.0);
                        u_xlat88 = u_xlat20.w * u_xlat89 + u_xlat88;
                        vec3 txVec72 = vec3(u_xlat14.zw,u_xlat11.z);
                        u_xlat89 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec72, 0.0);
                        u_xlat86 = u_xlat87 * u_xlat89 + u_xlat88;
                    } else {
                        u_xlat12.xy = u_xlat11.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat12.xy = floor(u_xlat12.xy);
                        u_xlat64.xy = u_xlat11.xy * _AdditionalShadowmapSize.zw + (-u_xlat12.xy);
                        u_xlat13 = u_xlat64.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat14 = u_xlat13.xxzz * u_xlat13.xxzz;
                        u_xlat15.yw = u_xlat14.yw * vec2(0.0408160016, 0.0408160016);
                        u_xlat13.xz = u_xlat14.xz * vec2(0.5, 0.5) + (-u_xlat64.xy);
                        u_xlat14.xy = (-u_xlat64.xy) + vec2(1.0, 1.0);
                        u_xlat66.xy = min(u_xlat64.xy, vec2(0.0, 0.0));
                        u_xlat14.xy = (-u_xlat66.xy) * u_xlat66.xy + u_xlat14.xy;
                        u_xlat66.xy = max(u_xlat64.xy, vec2(0.0, 0.0));
                        u_xlat39.xz = (-u_xlat66.xy) * u_xlat66.xy + u_xlat13.yw;
                        u_xlat14.xy = u_xlat14.xy + vec2(2.0, 2.0);
                        u_xlat13.yw = u_xlat39.xz + vec2(2.0, 2.0);
                        u_xlat16.z = u_xlat13.y * 0.0816320032;
                        u_xlat17.xyz = u_xlat13.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                        u_xlat13.xy = u_xlat14.xy * vec2(0.0816320032, 0.0816320032);
                        u_xlat16.x = u_xlat17.y;
                        u_xlat16.yw = u_xlat64.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat14.xz = u_xlat64.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat14.y = u_xlat13.x;
                        u_xlat14.w = u_xlat15.y;
                        u_xlat16 = u_xlat14 + u_xlat16;
                        u_xlat17.yw = u_xlat64.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat15.xz = u_xlat64.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat15.y = u_xlat13.y;
                        u_xlat13 = u_xlat15 + u_xlat17;
                        u_xlat14 = u_xlat14 / u_xlat16;
                        u_xlat14 = u_xlat14 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat15 = u_xlat15 / u_xlat13;
                        u_xlat15 = u_xlat15 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat14 = u_xlat14.wxyz * _AdditionalShadowmapSize.xxxx;
                        u_xlat15 = u_xlat15.xwyz * _AdditionalShadowmapSize.yyyy;
                        u_xlat17.xzw = u_xlat14.yzw;
                        u_xlat17.y = u_xlat15.x;
                        u_xlat18 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat17.xyzy;
                        u_xlat64.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat17.wy;
                        u_xlat14.y = u_xlat17.y;
                        u_xlat17.y = u_xlat15.z;
                        u_xlat19 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat17.xyzy;
                        u_xlat20.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat17.wy;
                        u_xlat14.z = u_xlat17.y;
                        u_xlat21 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.xyxz;
                        u_xlat17.y = u_xlat15.w;
                        u_xlat22 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat17.xyzy;
                        u_xlat40.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat17.wy;
                        u_xlat14.w = u_xlat17.y;
                        u_xlat72.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat14.xw;
                        u_xlat15.xzw = u_xlat17.xzw;
                        u_xlat17 = u_xlat12.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat15.xyzy;
                        u_xlat67.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat15.wy;
                        u_xlat15.x = u_xlat14.x;
                        u_xlat12.xy = u_xlat12.xy * _AdditionalShadowmapSize.xy + u_xlat15.xy;
                        u_xlat23 = u_xlat13.xxxx * u_xlat16;
                        u_xlat24 = u_xlat13.yyyy * u_xlat16;
                        u_xlat25 = u_xlat13.zzzz * u_xlat16;
                        u_xlat13 = u_xlat13.wwww * u_xlat16;
                        vec3 txVec73 = vec3(u_xlat18.xy,u_xlat11.z);
                        u_xlat87 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec73, 0.0);
                        vec3 txVec74 = vec3(u_xlat18.zw,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec74, 0.0);
                        u_xlat88 = u_xlat88 * u_xlat23.y;
                        u_xlat87 = u_xlat23.x * u_xlat87 + u_xlat88;
                        vec3 txVec75 = vec3(u_xlat64.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec75, 0.0);
                        u_xlat87 = u_xlat23.z * u_xlat88 + u_xlat87;
                        vec3 txVec76 = vec3(u_xlat21.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec76, 0.0);
                        u_xlat87 = u_xlat23.w * u_xlat88 + u_xlat87;
                        vec3 txVec77 = vec3(u_xlat19.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec77, 0.0);
                        u_xlat87 = u_xlat24.x * u_xlat88 + u_xlat87;
                        vec3 txVec78 = vec3(u_xlat19.zw,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec78, 0.0);
                        u_xlat87 = u_xlat24.y * u_xlat88 + u_xlat87;
                        vec3 txVec79 = vec3(u_xlat20.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec79, 0.0);
                        u_xlat87 = u_xlat24.z * u_xlat88 + u_xlat87;
                        vec3 txVec80 = vec3(u_xlat21.zw,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec80, 0.0);
                        u_xlat87 = u_xlat24.w * u_xlat88 + u_xlat87;
                        vec3 txVec81 = vec3(u_xlat22.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec81, 0.0);
                        u_xlat87 = u_xlat25.x * u_xlat88 + u_xlat87;
                        vec3 txVec82 = vec3(u_xlat22.zw,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec82, 0.0);
                        u_xlat87 = u_xlat25.y * u_xlat88 + u_xlat87;
                        vec3 txVec83 = vec3(u_xlat40.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec83, 0.0);
                        u_xlat87 = u_xlat25.z * u_xlat88 + u_xlat87;
                        vec3 txVec84 = vec3(u_xlat72.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec84, 0.0);
                        u_xlat87 = u_xlat25.w * u_xlat88 + u_xlat87;
                        vec3 txVec85 = vec3(u_xlat17.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec85, 0.0);
                        u_xlat87 = u_xlat13.x * u_xlat88 + u_xlat87;
                        vec3 txVec86 = vec3(u_xlat17.zw,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec86, 0.0);
                        u_xlat87 = u_xlat13.y * u_xlat88 + u_xlat87;
                        vec3 txVec87 = vec3(u_xlat67.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec87, 0.0);
                        u_xlat87 = u_xlat13.z * u_xlat88 + u_xlat87;
                        vec3 txVec88 = vec3(u_xlat12.xy,u_xlat11.z);
                        u_xlat88 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec88, 0.0);
                        u_xlat86 = u_xlat13.w * u_xlat88 + u_xlat87;
                    }
                }
            } else {
                vec3 txVec89 = vec3(u_xlat11.xy,u_xlat11.z);
                u_xlat86 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec89, 0.0);
            }
            u_xlat87 = 1.0 + (-_AdditionalShadowParams[u_xlati82].x);
            u_xlat86 = u_xlat86 * _AdditionalShadowParams[u_xlati82].x + u_xlat87;
            u_xlatb87 = 0.0>=u_xlat11.z;
            u_xlatb88 = u_xlat11.z>=1.0;
            u_xlatb87 = u_xlatb87 || u_xlatb88;
            u_xlat86 = (u_xlatb87) ? 1.0 : u_xlat86;
        } else {
            u_xlat86 = 1.0;
        }
        u_xlat87 = (-u_xlat86) + 1.0;
        u_xlat86 = u_xlat79 * u_xlat87 + u_xlat86;
        u_xlati87 = 1 << (u_xlati82 & int(0x1F));
        u_xlati87 = int(uint(u_xlati87) & floatBitsToUint(_AdditionalLightsCookieEnableBits));
        if(u_xlati87 != 0) {
            u_xlati87 = int(_AdditionalLightsLightTypes[u_xlati82]);
            u_xlati88 = (u_xlati87 != 0) ? 0 : 1;
            u_xlati11 = u_xlati82 << (2 & int(0x1F));
            if(u_xlati88 != 0) {
                u_xlat37.xyz = vs_INTERP8.yyy * _AdditionalLightsWorldToLights[(u_xlati11 + 1) / 4][(u_xlati11 + 1) % 4].xyw;
                u_xlat37.xyz = _AdditionalLightsWorldToLights[u_xlati11 / 4][u_xlati11 % 4].xyw * vs_INTERP8.xxx + u_xlat37.xyz;
                u_xlat37.xyz = _AdditionalLightsWorldToLights[(u_xlati11 + 2) / 4][(u_xlati11 + 2) % 4].xyw * vs_INTERP8.zzz + u_xlat37.xyz;
                u_xlat37.xyz = u_xlat37.xyz + _AdditionalLightsWorldToLights[(u_xlati11 + 3) / 4][(u_xlati11 + 3) % 4].xyw;
                u_xlat37.xy = u_xlat37.xy / u_xlat37.zz;
                u_xlat37.xy = u_xlat37.xy * vec2(0.5, 0.5) + vec2(0.5, 0.5);
                u_xlat37.xy = clamp(u_xlat37.xy, 0.0, 1.0);
                u_xlat37.xy = _AdditionalLightsCookieAtlasUVRects[u_xlati82].xy * u_xlat37.xy + _AdditionalLightsCookieAtlasUVRects[u_xlati82].zw;
            } else {
                u_xlatb87 = u_xlati87==1;
                u_xlati87 = u_xlatb87 ? 1 : int(0);
                if(u_xlati87 != 0) {
                    u_xlat12.xy = vs_INTERP8.yy * _AdditionalLightsWorldToLights[(u_xlati11 + 1) / 4][(u_xlati11 + 1) % 4].xy;
                    u_xlat12.xy = _AdditionalLightsWorldToLights[u_xlati11 / 4][u_xlati11 % 4].xy * vs_INTERP8.xx + u_xlat12.xy;
                    u_xlat12.xy = _AdditionalLightsWorldToLights[(u_xlati11 + 2) / 4][(u_xlati11 + 2) % 4].xy * vs_INTERP8.zz + u_xlat12.xy;
                    u_xlat12.xy = u_xlat12.xy + _AdditionalLightsWorldToLights[(u_xlati11 + 3) / 4][(u_xlati11 + 3) % 4].xy;
                    u_xlat12.xy = u_xlat12.xy * vec2(0.5, 0.5) + vec2(0.5, 0.5);
                    u_xlat12.xy = fract(u_xlat12.xy);
                    u_xlat37.xy = _AdditionalLightsCookieAtlasUVRects[u_xlati82].xy * u_xlat12.xy + _AdditionalLightsCookieAtlasUVRects[u_xlati82].zw;
                } else {
                    u_xlat12 = vs_INTERP8.yyyy * _AdditionalLightsWorldToLights[(u_xlati11 + 1) / 4][(u_xlati11 + 1) % 4];
                    u_xlat12 = _AdditionalLightsWorldToLights[u_xlati11 / 4][u_xlati11 % 4] * vs_INTERP8.xxxx + u_xlat12;
                    u_xlat12 = _AdditionalLightsWorldToLights[(u_xlati11 + 2) / 4][(u_xlati11 + 2) % 4] * vs_INTERP8.zzzz + u_xlat12;
                    u_xlat12 = u_xlat12 + _AdditionalLightsWorldToLights[(u_xlati11 + 3) / 4][(u_xlati11 + 3) % 4];
                    u_xlat12.xyz = u_xlat12.xyz / u_xlat12.www;
                    u_xlat87 = dot(u_xlat12.xyz, u_xlat12.xyz);
                    u_xlat87 = inversesqrt(u_xlat87);
                    u_xlat12.xyz = vec3(u_xlat87) * u_xlat12.xyz;
                    u_xlat87 = dot(abs(u_xlat12.xyz), vec3(1.0, 1.0, 1.0));
                    u_xlat87 = max(u_xlat87, 9.99999997e-07);
                    u_xlat87 = float(1.0) / float(u_xlat87);
                    u_xlat13.xyz = vec3(u_xlat87) * u_xlat12.zxy;
                    u_xlat13.x = (-u_xlat13.x);
                    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
                    u_xlatb11.xw = greaterThanEqual(u_xlat13.yyyz, vec4(0.0, 0.0, 0.0, 0.0)).xw;
                    u_xlat11.x = (u_xlatb11.x) ? u_xlat13.x : (-u_xlat13.x);
                    u_xlat11.w = (u_xlatb11.w) ? u_xlat13.x : (-u_xlat13.x);
                    u_xlat11.xw = u_xlat12.xy * vec2(u_xlat87) + u_xlat11.xw;
                    u_xlat11.xw = u_xlat11.xw * vec2(0.5, 0.5) + vec2(0.5, 0.5);
                    u_xlat11.xw = clamp(u_xlat11.xw, 0.0, 1.0);
                    u_xlat37.xy = _AdditionalLightsCookieAtlasUVRects[u_xlati82].xy * u_xlat11.xw + _AdditionalLightsCookieAtlasUVRects[u_xlati82].zw;
                }
            }
            u_xlat11 = textureLod(sampler2D(_AdditionalLightsCookieAtlasTexture, sampler_LinearClamp), u_xlat37.xy, 0.0);
            u_xlat87 = (u_xlatb7.y) ? u_xlat11.w : u_xlat11.x;
            u_xlat11.xyz = (u_xlatb7.x) ? u_xlat11.xyz : vec3(u_xlat87);
        } else {
            u_xlat11.x = float(1.0);
            u_xlat11.y = float(1.0);
            u_xlat11.z = float(1.0);
        }
        u_xlat11.xyz = u_xlat11.xyz * _AdditionalLightsColor[u_xlati82].xyz;
        u_xlat82 = u_xlat59.x * u_xlat86;
        u_xlat59.x = dot(u_xlat3.xyz, u_xlat10.xyz);
        u_xlat59.x = clamp(u_xlat59.x, 0.0, 1.0);
        u_xlat82 = u_xlat82 * u_xlat59.x;
        u_xlat11.xyz = vec3(u_xlat82) * u_xlat11.xyz;
        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat85) + u_xlat2.xyz;
        u_xlat82 = dot(u_xlat9.xyz, u_xlat9.xyz);
        u_xlat82 = max(u_xlat82, 1.17549435e-38);
        u_xlat82 = inversesqrt(u_xlat82);
        u_xlat9.xyz = vec3(u_xlat82) * u_xlat9.xyz;
        u_xlat82 = dot(u_xlat3.xyz, u_xlat9.xyz);
        u_xlat82 = clamp(u_xlat82, 0.0, 1.0);
        u_xlat59.x = dot(u_xlat10.xyz, u_xlat9.xyz);
        u_xlat59.x = clamp(u_xlat59.x, 0.0, 1.0);
        u_xlat82 = u_xlat82 * u_xlat82;
        u_xlat82 = u_xlat82 * u_xlat53.x + 1.00001001;
        u_xlat59.x = u_xlat59.x * u_xlat59.x;
        u_xlat82 = u_xlat82 * u_xlat82;
        u_xlat59.x = max(u_xlat59.x, 0.100000001);
        u_xlat82 = u_xlat82 * u_xlat59.x;
        u_xlat82 = u_xlat5.x * u_xlat82;
        u_xlat82 = u_xlat81 / u_xlat82;
        u_xlat9.xyz = vec3(u_xlat82) * vec3(0.0399999991, 0.0399999991, 0.0399999991) + u_xlat4.xyz;
        u_xlat8.xyz = u_xlat9.xyz * u_xlat11.xyz + u_xlat8.xyz;
    }
    u_xlat2.xyz = u_xlat31.xyz * u_xlat6.xxx + u_xlat32.xyz;
    u_xlat2.xyz = u_xlat8.xyz + u_xlat2.xyz;
    SV_Target0.xyz = vs_INTERP6.www * u_xlat0.xyz + u_xlat2.xyz;
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    return;
}


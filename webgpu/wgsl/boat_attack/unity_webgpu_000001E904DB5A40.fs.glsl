#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require
#ifdef GL_ARB_derivative_control
#extension GL_ARB_derivative_control : enable
#endif

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
const uvec4 ImmCB_0[] = uvec4[4] (
	uvec4(0x3F800000, 0x0, 0x0, 0x0),
	uvec4(0x0, 0x3F800000, 0x0, 0x0),
	uvec4(0x0, 0x0, 0x3F800000, 0x0),
	uvec4(0x0, 0x0, 0x0, 0x3F800000));
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec4 _ScaledScreenParams;
	vec2 _GlobalMipBias;
	float _AlphaToMaskAvailable;
	vec4 _MainLightPosition;
	vec4 _MainLightColor;
	vec4 _AmbientOcclusionParam;
	vec4 _AdditionalLightsCount;
	uint _RenderingLayerMaxInt;
	float _RenderingLayerRcpMaxInt;
	vec3 _WorldSpaceCameraPos;
	vec4 _ProjectionParams;
	vec4 _ScreenParams;
	vec4 unity_OrthoParams;
	vec4 _ScaleBiasRt;
	vec4 unity_FogParams;
	vec4 unity_FogColor;
	mat4x4 unity_MatrixV;
};
layout(set = 1, binding = 1, std140) uniform AdditionalLights {
	vec4 _AdditionalLightsPosition[256];
	vec4 _AdditionalLightsColor[256];
	vec4 _AdditionalLightsAttenuation[256];
	vec4 _AdditionalLightsSpotDir[256];
	vec4 _AdditionalLightsOcclusionProbes[256];
	float _AdditionalLightsLayerMasks[256];
};
layout(set = 1, binding = 2, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 3, std140) uniform MainLightShadows {
	mat4x4 _MainLightWorldToShadow[5];
	vec4 _CascadeShadowSplitSpheres0;
	vec4 _CascadeShadowSplitSpheres1;
	vec4 _CascadeShadowSplitSpheres2;
	vec4 _CascadeShadowSplitSpheres3;
	vec4 _CascadeShadowSplitSphereRadii;
	vec4 _MainLightShadowOffset0;
	vec4 _MainLightShadowOffset1;
	vec4 _MainLightShadowParams;
	vec4 _MainLightShadowmapSize;
};
layout(set = 1, binding = 4, std140) uniform UnityPerMaterial {
	vec4 Texture2D_B222E8F_TexelSize;
	vec4 Color_C30C7CA3;
	vec4 Texture2D_D9BFD5F1_TexelSize;
};
layout(set = 0, binding = 0) uniform mediump textureCube unity_SpecCube0;
layout(set = 0, binding = 1) uniform mediump texture2D _ScreenSpaceOcclusionTexture;
layout(set = 0, binding = 2) uniform mediump texture2D _MainLightShadowmapTexture;
layout(set = 0, binding = 3) uniform mediump texture2D Texture2D_B222E8F;
layout(set = 0, binding = 4) uniform mediump texture2D Texture2D_D9BFD5F1;
layout(location = 0) in highp vec3 vs_INTERP0;
layout(location = 1) in highp vec3 vs_INTERP1;
layout(location = 2) in highp vec4 vs_INTERP2;
layout(location = 3) in highp vec4 vs_INTERP3;
layout(location = 4) in highp vec4 vs_INTERP4;
layout(location = 0) out highp vec4 SV_Target0;
layout(location = 1) out highp vec4 SV_Target1;
layout(set = 0, binding = 5) uniform mediump  sampler samplerunity_SpecCube0;
layout(set = 0, binding = 6) uniform mediump  sampler sampler_ScreenSpaceOcclusionTexture;
layout(set = 0, binding = 7) uniform mediump  samplerShadow sampler_MainLightShadowmapTexture;
layout(set = 0, binding = 8) uniform mediump  sampler samplerTexture2D_B222E8F;
layout(set = 0, binding = 9) uniform mediump  sampler samplerTexture2D_D9BFD5F1;
int int_bitfieldInsert(int base, int insert, int offset, int bits) {
    uint mask = ~(uint(0xffffffffu) << uint(bits)) << uint(offset);
    return int((uint(base) & ~mask) | ((uint(insert) << uint(offset)) & mask));
}

void main()
{
vec3 u_xlat0;
uint u_xlatu0;
vec3 u_xlat1;
vec3 u_xlat2;
int u_xlati2;
uvec3 u_xlatu2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
vec3 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
vec4 u_xlat12;
vec4 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec4 u_xlat17;
vec4 u_xlat18;
vec4 u_xlat19;
vec4 u_xlat20;
vec4 u_xlat21;
vec2 u_xlat24;
int u_xlati24;
uint u_xlatu24;
bvec2 u_xlatb24;
uint u_xlatu25;
vec3 u_xlat27;
float u_xlat29;
vec3 u_xlat30;
vec3 u_xlat31;
vec2 u_xlat32;
float u_xlat46;
int u_xlati46;
uint u_xlatu46;
vec2 u_xlat51;
vec2 u_xlat52;
vec2 u_xlat53;
vec2 u_xlat54;
vec2 u_xlat55;
vec2 u_xlat59;
vec2 u_xlat60;
float u_xlat66;
int u_xlati66;
uint u_xlatu66;
bool u_xlatb66;
float u_xlat67;
bool u_xlatb67;
float u_xlat68;
int u_xlati68;
uint u_xlatu68;
bool u_xlatb68;
float u_xlat69;
int u_xlati69;
float u_xlat70;
bool u_xlatb70;
float u_xlat71;
float u_xlat72;
bool u_xlatb72;
float u_xlat73;
bool u_xlatb73;
vec4 hlslcc_FragCoord = vec4(gl_FragCoord.xyz, 1.0/gl_FragCoord.w);
    u_xlat0.x = dot(vs_INTERP1.xyz, vs_INTERP1.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.xyz = u_xlat0.xxx * vs_INTERP1.xyz;
    u_xlatb66 = unity_OrthoParams.w==0.0;
    u_xlat1.xyz = (-vs_INTERP0.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat67 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat67 = inversesqrt(u_xlat67);
    u_xlat1.xyz = vec3(u_xlat67) * u_xlat1.xyz;
    u_xlat2.x = unity_MatrixV[0].z;
    u_xlat2.y = unity_MatrixV[1].z;
    u_xlat2.z = unity_MatrixV[2].z;
    u_xlat1.xyz = (bool(u_xlatb66)) ? u_xlat1.xyz : u_xlat2.xyz;
    u_xlat2.xyz = u_xlat1.yyy * unity_WorldToObject[1].xyz;
    u_xlat2.xyz = unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat2.xyz;
    u_xlat2.xyz = unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat2.xyz;
    u_xlat66 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat66 = inversesqrt(u_xlat66);
    u_xlat2.xyz = vec3(u_xlat66) * u_xlat2.xyz;
    u_xlat3 = texture(sampler2D(Texture2D_B222E8F, samplerTexture2D_B222E8F), vs_INTERP3.xy, _GlobalMipBias.x);
    u_xlat4.xyz = u_xlat3.xyz * Color_C30C7CA3.xyz;
    u_xlat5 = texture(sampler2D(Texture2D_D9BFD5F1, samplerTexture2D_D9BFD5F1), vs_INTERP3.xy, _GlobalMipBias.x).wxyz;
    u_xlat6 = u_xlat5.yzwx * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat66 = dot(u_xlat6, u_xlat6);
    u_xlat66 = inversesqrt(u_xlat66);
    u_xlat27.xyz = vec3(u_xlat66) * u_xlat6.xyz;
    u_xlat66 = vs_INTERP4.y * 200.0;
    u_xlat66 = min(u_xlat66, 1.0);
    u_xlat3.xyz = vec3(u_xlat66) * u_xlat3.xyz;
    u_xlat6.xyz = vs_INTERP0.xyz + (-_CascadeShadowSplitSpheres0.xyz);
    u_xlat7.xyz = vs_INTERP0.xyz + (-_CascadeShadowSplitSpheres1.xyz);
    u_xlat8.xyz = vs_INTERP0.xyz + (-_CascadeShadowSplitSpheres2.xyz);
    u_xlat9.xyz = vs_INTERP0.xyz + (-_CascadeShadowSplitSpheres3.xyz);
    u_xlat6.x = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat6.y = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.z = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat6.w = dot(u_xlat9.xyz, u_xlat9.xyz);
    u_xlatb6 = lessThan(u_xlat6, _CascadeShadowSplitSphereRadii);
    u_xlat7.x = u_xlatb6.x ? float(1.0) : 0.0;
    u_xlat7.y = u_xlatb6.y ? float(1.0) : 0.0;
    u_xlat7.z = u_xlatb6.z ? float(1.0) : 0.0;
    u_xlat7.w = u_xlatb6.w ? float(1.0) : 0.0;
;
    u_xlat6.x = (u_xlatb6.x) ? float(-1.0) : float(-0.0);
    u_xlat6.y = (u_xlatb6.y) ? float(-1.0) : float(-0.0);
    u_xlat6.z = (u_xlatb6.z) ? float(-1.0) : float(-0.0);
    u_xlat6.xyz = u_xlat6.xyz + u_xlat7.yzw;
    u_xlat7.yzw = max(u_xlat6.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat66 = dot(u_xlat7, vec4(4.0, 3.0, 2.0, 1.0));
    u_xlat66 = (-u_xlat66) + 4.0;
    u_xlatu66 = uint(u_xlat66);
    u_xlati66 = int(u_xlatu66) << (2 & int(0x1F));
    u_xlat6.xyz = vs_INTERP0.yyy * _MainLightWorldToShadow[(u_xlati66 + 1) / 4][(u_xlati66 + 1) % 4].xyz;
    u_xlat6.xyz = _MainLightWorldToShadow[u_xlati66 / 4][u_xlati66 % 4].xyz * vs_INTERP0.xxx + u_xlat6.xyz;
    u_xlat6.xyz = _MainLightWorldToShadow[(u_xlati66 + 2) / 4][(u_xlati66 + 2) % 4].xyz * vs_INTERP0.zzz + u_xlat6.xyz;
    u_xlat6.xyz = u_xlat6.xyz + _MainLightWorldToShadow[(u_xlati66 + 3) / 4][(u_xlati66 + 3) % 4].xyz;
    u_xlatb66 = 0.0<_MainLightShadowParams.y;
    if(u_xlatb66){
        u_xlatb67 = _MainLightShadowParams.y==1.0;
        if(u_xlatb67){
            u_xlat7 = u_xlat6.xyxy + _MainLightShadowOffset0;
            vec3 txVec0 = vec3(u_xlat7.xy,u_xlat6.z);
            u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec0, 0.0);
            vec3 txVec1 = vec3(u_xlat7.zw,u_xlat6.z);
            u_xlat8.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec1, 0.0);
            u_xlat7 = u_xlat6.xyxy + _MainLightShadowOffset1;
            vec3 txVec2 = vec3(u_xlat7.xy,u_xlat6.z);
            u_xlat8.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec2, 0.0);
            vec3 txVec3 = vec3(u_xlat7.zw,u_xlat6.z);
            u_xlat8.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec3, 0.0);
            u_xlat67 = dot(u_xlat8, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb68 = _MainLightShadowParams.y==2.0;
            if(u_xlatb68){
                u_xlat7.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat7.xy = floor(u_xlat7.xy);
                u_xlat51.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat7.xy);
                u_xlat8 = u_xlat51.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat8.xz = u_xlat9.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat9.xy = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat51.xy);
                u_xlat53.xy = (-u_xlat51.xy) + vec2(1.0, 1.0);
                u_xlat10.xy = min(u_xlat51.xy, vec2(0.0, 0.0));
                u_xlat10.xy = (-u_xlat10.xy) * u_xlat10.xy + u_xlat53.xy;
                u_xlat51.xy = max(u_xlat51.xy, vec2(0.0, 0.0));
                u_xlat51.xy = (-u_xlat51.xy) * u_xlat51.xy + u_xlat8.yw;
                u_xlat10.xy = u_xlat10.xy + vec2(1.0, 1.0);
                u_xlat51.xy = u_xlat51.xy + vec2(1.0, 1.0);
                u_xlat11.xy = u_xlat9.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat53.xy * vec2(0.159999996, 0.159999996);
                u_xlat10.xy = u_xlat10.xy * vec2(0.159999996, 0.159999996);
                u_xlat12.xy = u_xlat51.xy * vec2(0.159999996, 0.159999996);
                u_xlat51.xy = u_xlat8.yw * vec2(0.159999996, 0.159999996);
                u_xlat11.z = u_xlat10.x;
                u_xlat11.w = u_xlat51.x;
                u_xlat9.z = u_xlat12.x;
                u_xlat9.w = u_xlat8.x;
                u_xlat13 = u_xlat9.zwxz + u_xlat11.zwxz;
                u_xlat10.z = u_xlat11.y;
                u_xlat10.w = u_xlat51.y;
                u_xlat12.z = u_xlat9.y;
                u_xlat12.w = u_xlat8.z;
                u_xlat8.xyz = u_xlat10.zyw + u_xlat12.zyw;
                u_xlat9.xyz = u_xlat9.xzw / u_xlat13.zwy;
                u_xlat9.xyz = u_xlat9.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat10.xyz = u_xlat12.zyw / u_xlat8.xyz;
                u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat9.xyz = u_xlat9.yxz * _MainLightShadowmapSize.xxx;
                u_xlat10.xyz = u_xlat10.xyz * _MainLightShadowmapSize.yyy;
                u_xlat9.w = u_xlat10.x;
                u_xlat11 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.ywxw;
                u_xlat51.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat9.zw;
                u_xlat10.w = u_xlat9.y;
                u_xlat9.yw = u_xlat10.yz;
                u_xlat12 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat10 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.wywz;
                u_xlat9 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xwzw;
                u_xlat14 = u_xlat8.xxxy * u_xlat13.zwyz;
                u_xlat15 = u_xlat8.yyzz * u_xlat13;
                u_xlat68 = u_xlat8.z * u_xlat13.y;
                vec3 txVec4 = vec3(u_xlat11.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec4, 0.0);
                vec3 txVec5 = vec3(u_xlat11.zw,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec5, 0.0);
                u_xlat72 = u_xlat72 * u_xlat14.y;
                u_xlat70 = u_xlat14.x * u_xlat70 + u_xlat72;
                vec3 txVec6 = vec3(u_xlat51.xy,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec6, 0.0);
                u_xlat70 = u_xlat14.z * u_xlat72 + u_xlat70;
                vec3 txVec7 = vec3(u_xlat10.xy,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec7, 0.0);
                u_xlat70 = u_xlat14.w * u_xlat72 + u_xlat70;
                vec3 txVec8 = vec3(u_xlat12.xy,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec8, 0.0);
                u_xlat70 = u_xlat15.x * u_xlat72 + u_xlat70;
                vec3 txVec9 = vec3(u_xlat12.zw,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec9, 0.0);
                u_xlat70 = u_xlat15.y * u_xlat72 + u_xlat70;
                vec3 txVec10 = vec3(u_xlat10.zw,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec10, 0.0);
                u_xlat70 = u_xlat15.z * u_xlat72 + u_xlat70;
                vec3 txVec11 = vec3(u_xlat9.xy,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec11, 0.0);
                u_xlat70 = u_xlat15.w * u_xlat72 + u_xlat70;
                vec3 txVec12 = vec3(u_xlat9.zw,u_xlat6.z);
                u_xlat72 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec12, 0.0);
                u_xlat67 = u_xlat68 * u_xlat72 + u_xlat70;
            } else {
                u_xlat7.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat7.xy = floor(u_xlat7.xy);
                u_xlat51.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat7.xy);
                u_xlat8 = u_xlat51.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat10.yw = u_xlat9.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat8.xz = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat51.xy);
                u_xlat9.xy = (-u_xlat51.xy) + vec2(1.0, 1.0);
                u_xlat53.xy = min(u_xlat51.xy, vec2(0.0, 0.0));
                u_xlat9.xy = (-u_xlat53.xy) * u_xlat53.xy + u_xlat9.xy;
                u_xlat53.xy = max(u_xlat51.xy, vec2(0.0, 0.0));
                u_xlat30.xz = (-u_xlat53.xy) * u_xlat53.xy + u_xlat8.yw;
                u_xlat9.xy = u_xlat9.xy + vec2(2.0, 2.0);
                u_xlat8.yw = u_xlat30.xz + vec2(2.0, 2.0);
                u_xlat11.z = u_xlat8.y * 0.0816320032;
                u_xlat12.xyz = u_xlat8.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                u_xlat8.xy = u_xlat9.xy * vec2(0.0816320032, 0.0816320032);
                u_xlat11.x = u_xlat12.y;
                u_xlat11.yw = u_xlat51.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat9.xz = u_xlat51.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat9.y = u_xlat8.x;
                u_xlat9.w = u_xlat10.y;
                u_xlat11 = u_xlat9 + u_xlat11;
                u_xlat12.yw = u_xlat51.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat10.xz = u_xlat51.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat10.y = u_xlat8.y;
                u_xlat8 = u_xlat10 + u_xlat12;
                u_xlat9 = u_xlat9 / u_xlat11;
                u_xlat9 = u_xlat9 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat10 = u_xlat10 / u_xlat8;
                u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat9 = u_xlat9.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat10 = u_xlat10.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat12.xzw = u_xlat9.yzw;
                u_xlat12.y = u_xlat10.x;
                u_xlat13 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat51.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.y = u_xlat12.y;
                u_xlat12.y = u_xlat10.z;
                u_xlat14 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat15.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.z = u_xlat12.y;
                u_xlat16 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyxz;
                u_xlat12.y = u_xlat10.w;
                u_xlat17 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat12.xyzy;
                u_xlat31.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat12.wy;
                u_xlat9.w = u_xlat12.y;
                u_xlat59.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat9.xw;
                u_xlat10.xzw = u_xlat12.xzw;
                u_xlat12 = u_xlat7.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyzy;
                u_xlat54.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat10.wy;
                u_xlat10.x = u_xlat9.x;
                u_xlat7.xy = u_xlat7.xy * _MainLightShadowmapSize.xy + u_xlat10.xy;
                u_xlat18 = u_xlat8.xxxx * u_xlat11;
                u_xlat19 = u_xlat8.yyyy * u_xlat11;
                u_xlat20 = u_xlat8.zzzz * u_xlat11;
                u_xlat8 = u_xlat8.wwww * u_xlat11;
                vec3 txVec13 = vec3(u_xlat13.xy,u_xlat6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec13, 0.0);
                vec3 txVec14 = vec3(u_xlat13.zw,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec14, 0.0);
                u_xlat70 = u_xlat70 * u_xlat18.y;
                u_xlat68 = u_xlat18.x * u_xlat68 + u_xlat70;
                vec3 txVec15 = vec3(u_xlat51.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec15, 0.0);
                u_xlat68 = u_xlat18.z * u_xlat70 + u_xlat68;
                vec3 txVec16 = vec3(u_xlat16.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec16, 0.0);
                u_xlat68 = u_xlat18.w * u_xlat70 + u_xlat68;
                vec3 txVec17 = vec3(u_xlat14.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec17, 0.0);
                u_xlat68 = u_xlat19.x * u_xlat70 + u_xlat68;
                vec3 txVec18 = vec3(u_xlat14.zw,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec18, 0.0);
                u_xlat68 = u_xlat19.y * u_xlat70 + u_xlat68;
                vec3 txVec19 = vec3(u_xlat15.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec19, 0.0);
                u_xlat68 = u_xlat19.z * u_xlat70 + u_xlat68;
                vec3 txVec20 = vec3(u_xlat16.zw,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec20, 0.0);
                u_xlat68 = u_xlat19.w * u_xlat70 + u_xlat68;
                vec3 txVec21 = vec3(u_xlat17.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec21, 0.0);
                u_xlat68 = u_xlat20.x * u_xlat70 + u_xlat68;
                vec3 txVec22 = vec3(u_xlat17.zw,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec22, 0.0);
                u_xlat68 = u_xlat20.y * u_xlat70 + u_xlat68;
                vec3 txVec23 = vec3(u_xlat31.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec23, 0.0);
                u_xlat68 = u_xlat20.z * u_xlat70 + u_xlat68;
                vec3 txVec24 = vec3(u_xlat59.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec24, 0.0);
                u_xlat68 = u_xlat20.w * u_xlat70 + u_xlat68;
                vec3 txVec25 = vec3(u_xlat12.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec25, 0.0);
                u_xlat68 = u_xlat8.x * u_xlat70 + u_xlat68;
                vec3 txVec26 = vec3(u_xlat12.zw,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec26, 0.0);
                u_xlat68 = u_xlat8.y * u_xlat70 + u_xlat68;
                vec3 txVec27 = vec3(u_xlat54.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec27, 0.0);
                u_xlat68 = u_xlat8.z * u_xlat70 + u_xlat68;
                vec3 txVec28 = vec3(u_xlat7.xy,u_xlat6.z);
                u_xlat70 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec28, 0.0);
                u_xlat67 = u_xlat8.w * u_xlat70 + u_xlat68;
            }
        }
    } else {
        vec3 txVec29 = vec3(u_xlat6.xy,u_xlat6.z);
        u_xlat67 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec29, 0.0);
    }
    u_xlat68 = (-_MainLightShadowParams.x) + 1.0;
    u_xlat67 = u_xlat67 * _MainLightShadowParams.x + u_xlat68;
    u_xlatb70 = 0.0>=u_xlat6.z;
    u_xlatb72 = u_xlat6.z>=1.0;
    u_xlatb70 = u_xlatb70 || u_xlatb72;
    u_xlat67 = (u_xlatb70) ? 1.0 : u_xlat67;
    u_xlat0.x = dot(u_xlat0.xyz, (-_MainLightPosition.xyz));
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat7.xyz = vec3(u_xlat67) * _MainLightColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat3.xyz;
    u_xlatb67 = unity_LODFade.x<0.0;
    u_xlat3.x = unity_LODFade.x + 1.0;
    u_xlat67 = (u_xlatb67) ? u_xlat3.x : unity_LODFade.x;
    u_xlatb3 = 0.5>=u_xlat67;
    u_xlat2.xyz = abs(u_xlat2.xyz) * _ScreenParams.xyx;
    u_xlatu2.xyz = uvec3(u_xlat2.xyz);
    u_xlatu46 = u_xlatu2.z * 1025u;
    u_xlatu25 = u_xlatu46 >> (6u & uint(0x1F));
    u_xlati46 = int(u_xlatu46 ^ u_xlatu25);
    u_xlatu46 = uint(u_xlati46) * 9u;
    u_xlatu25 = u_xlatu46 >> (11u & uint(0x1F));
    u_xlati46 = int(u_xlatu46 ^ u_xlatu25);
    u_xlati46 = u_xlati46 * 32769;
    u_xlati24 = int(uint(u_xlati46) ^ u_xlatu2.y);
    u_xlatu24 = uint(u_xlati24) * 1025u;
    u_xlatu46 = u_xlatu24 >> (6u & uint(0x1F));
    u_xlati24 = int(u_xlatu46 ^ u_xlatu24);
    u_xlatu24 = uint(u_xlati24) * 9u;
    u_xlatu46 = u_xlatu24 >> (11u & uint(0x1F));
    u_xlati24 = int(u_xlatu46 ^ u_xlatu24);
    u_xlati24 = u_xlati24 * 32769;
    u_xlati2 = int(uint(u_xlati24) ^ u_xlatu2.x);
    u_xlatu2.x = uint(u_xlati2) * 1025u;
    u_xlatu24 = u_xlatu2.x >> (6u & uint(0x1F));
    u_xlati2 = int(u_xlatu24 ^ u_xlatu2.x);
    u_xlatu2.x = uint(u_xlati2) * 9u;
    u_xlatu24 = u_xlatu2.x >> (11u & uint(0x1F));
    u_xlati2 = int(u_xlatu24 ^ u_xlatu2.x);
    u_xlati2 = u_xlati2 * 32769;
    u_xlat2.x = intBitsToFloat(int(int_bitfieldInsert(1065353216, u_xlati2, 0 & int(0x1F), 23)));
    u_xlat2.x = u_xlat2.x + -1.0;
    u_xlat24.x = (-u_xlat2.x) + 1.0;
    u_xlat2.x = (u_xlatb3) ? u_xlat2.x : u_xlat24.x;
    u_xlat67 = u_xlat67 * 2.0 + (-u_xlat2.x);
    u_xlat2.x = u_xlat67 * u_xlat3.w;
    u_xlatb24.x = u_xlat2.x>=0.400000006;
    u_xlat24.x = u_xlatb24.x ? u_xlat2.x : float(0.0);
    u_xlat67 = u_xlat3.w * u_xlat67 + -0.400000006;
    u_xlat46 = dFdxCoarse(u_xlat2.x);
    u_xlat2.x = dFdyCoarse(u_xlat2.x);
    u_xlat2.x = abs(u_xlat2.x) + abs(u_xlat46);
    u_xlat2.x = max(u_xlat2.x, 9.99999975e-05);
    u_xlat67 = u_xlat67 / u_xlat2.x;
    u_xlat67 = u_xlat67 + 0.5;
    u_xlat67 = clamp(u_xlat67, 0.0, 1.0);
    u_xlatb2 = _AlphaToMaskAvailable!=0.0;
    u_xlat67 = (u_xlatb2) ? u_xlat67 : u_xlat24.x;
    u_xlat24.x = u_xlat67 + -9.99999975e-05;
    u_xlatb24.x = u_xlat24.x<0.0;
    if(((int(u_xlatb24.x) * int(0xffffffffu)))!=0){discard;}
    u_xlatb24.x = 0.0<vs_INTERP2.w;
    u_xlatb24.y = unity_WorldTransformParams.w>=0.0;
    u_xlat24.x = (u_xlatb24.x) ? float(1.0) : float(-1.0);
    u_xlat24.y = (u_xlatb24.y) ? float(1.0) : float(-1.0);
    u_xlat24.x = u_xlat24.y * u_xlat24.x;
    u_xlat3.xyz = vs_INTERP1.zxy * vs_INTERP2.yzx;
    u_xlat3.xyz = vs_INTERP1.yzx * vs_INTERP2.zxy + (-u_xlat3.xyz);
    u_xlat3.xyz = u_xlat24.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * u_xlat27.yyy;
    u_xlat3.xyz = u_xlat27.xxx * vs_INTERP2.xyz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat27.zzz * vs_INTERP1.xyz + u_xlat3.xyz;
    u_xlat24.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat24.x = inversesqrt(u_xlat24.x);
    u_xlat3.xyz = u_xlat24.xxx * u_xlat3.xyz;
    u_xlat24.x = vs_INTERP0.y * unity_MatrixV[1].z;
    u_xlat24.x = unity_MatrixV[0].z * vs_INTERP0.x + u_xlat24.x;
    u_xlat24.x = unity_MatrixV[2].z * vs_INTERP0.z + u_xlat24.x;
    u_xlat24.x = u_xlat24.x + unity_MatrixV[3].z;
    u_xlat24.x = (-u_xlat24.x) + (-_ProjectionParams.y);
    u_xlat24.x = max(u_xlat24.x, 0.0);
    u_xlat24.x = u_xlat24.x * unity_FogParams.x;
    u_xlat3.w = 1.0;
    u_xlat7.x = dot(unity_SHAr, u_xlat3);
    u_xlat7.y = dot(unity_SHAg, u_xlat3);
    u_xlat7.z = dot(unity_SHAb, u_xlat3);
    u_xlat8 = u_xlat3.yzzx * u_xlat3.xyzz;
    u_xlat9.x = dot(unity_SHBr, u_xlat8);
    u_xlat9.y = dot(unity_SHBg, u_xlat8);
    u_xlat9.z = dot(unity_SHBb, u_xlat8);
    u_xlat46 = u_xlat3.y * u_xlat3.y;
    u_xlat46 = u_xlat3.x * u_xlat3.x + (-u_xlat46);
    u_xlat27.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat9.xyz;
    u_xlat27.xyz = u_xlat27.xyz + u_xlat7.xyz;
    u_xlat27.xyz = max(u_xlat27.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xy = vec2(1.0) / vec2(_ScaledScreenParams.xy);
    u_xlat7.xy = u_xlat7.xy * hlslcc_FragCoord.xy;
    u_xlat46 = u_xlat7.y * _ScaleBiasRt.x + _ScaleBiasRt.y;
    u_xlat7.z = (-u_xlat46) + 1.0;
    u_xlat5.x = u_xlat5.x;
    u_xlat5.x = clamp(u_xlat5.x, 0.0, 1.0);
    u_xlat67 = u_xlat67;
    u_xlat67 = clamp(u_xlat67, 0.0, 1.0);
    u_xlat4.xyz = u_xlat4.xyz * vec3(0.959999979, 0.959999979, 0.959999979);
    u_xlat46 = (-u_xlat5.x) + 1.0;
    u_xlat69 = u_xlat46 * u_xlat46;
    u_xlat69 = max(u_xlat69, 0.0078125);
    u_xlat72 = u_xlat69 * u_xlat69;
    u_xlat5.x = u_xlat5.x + 0.0400000215;
    u_xlat5.x = min(u_xlat5.x, 1.0);
    u_xlat29 = u_xlat69 * 4.0 + 2.0;
    u_xlat7.x = texture(sampler2D(_ScreenSpaceOcclusionTexture, sampler_ScreenSpaceOcclusionTexture), u_xlat7.xz, _GlobalMipBias.x).x;
    u_xlat51.x = u_xlat7.x + -1.0;
    u_xlat51.x = _AmbientOcclusionParam.w * u_xlat51.x + 1.0;
    u_xlat7.x = min(u_xlat7.x, vs_INTERP4.w);
    if(u_xlatb66){
        u_xlatb66 = _MainLightShadowParams.y==1.0;
        if(u_xlatb66){
            u_xlat8 = u_xlat6.xyxy + _MainLightShadowOffset0;
            vec3 txVec30 = vec3(u_xlat8.xy,u_xlat6.z);
            u_xlat9.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec30, 0.0);
            vec3 txVec31 = vec3(u_xlat8.zw,u_xlat6.z);
            u_xlat9.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec31, 0.0);
            u_xlat8 = u_xlat6.xyxy + _MainLightShadowOffset1;
            vec3 txVec32 = vec3(u_xlat8.xy,u_xlat6.z);
            u_xlat9.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec32, 0.0);
            vec3 txVec33 = vec3(u_xlat8.zw,u_xlat6.z);
            u_xlat9.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec33, 0.0);
            u_xlat66 = dot(u_xlat9, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb73 = _MainLightShadowParams.y==2.0;
            if(u_xlatb73){
                u_xlat8.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat8.xy = floor(u_xlat8.xy);
                u_xlat52.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat8.xy);
                u_xlat9 = u_xlat52.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat10 = u_xlat9.xxzz * u_xlat9.xxzz;
                u_xlat9.xz = u_xlat10.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat10.xy = u_xlat10.xz * vec2(0.5, 0.5) + (-u_xlat52.xy);
                u_xlat54.xy = (-u_xlat52.xy) + vec2(1.0, 1.0);
                u_xlat11.xy = min(u_xlat52.xy, vec2(0.0, 0.0));
                u_xlat11.xy = (-u_xlat11.xy) * u_xlat11.xy + u_xlat54.xy;
                u_xlat52.xy = max(u_xlat52.xy, vec2(0.0, 0.0));
                u_xlat52.xy = (-u_xlat52.xy) * u_xlat52.xy + u_xlat9.yw;
                u_xlat11.xy = u_xlat11.xy + vec2(1.0, 1.0);
                u_xlat52.xy = u_xlat52.xy + vec2(1.0, 1.0);
                u_xlat12.xy = u_xlat10.xy * vec2(0.159999996, 0.159999996);
                u_xlat10.xy = u_xlat54.xy * vec2(0.159999996, 0.159999996);
                u_xlat11.xy = u_xlat11.xy * vec2(0.159999996, 0.159999996);
                u_xlat13.xy = u_xlat52.xy * vec2(0.159999996, 0.159999996);
                u_xlat52.xy = u_xlat9.yw * vec2(0.159999996, 0.159999996);
                u_xlat12.z = u_xlat11.x;
                u_xlat12.w = u_xlat52.x;
                u_xlat10.z = u_xlat13.x;
                u_xlat10.w = u_xlat9.x;
                u_xlat14 = u_xlat10.zwxz + u_xlat12.zwxz;
                u_xlat11.z = u_xlat12.y;
                u_xlat11.w = u_xlat52.y;
                u_xlat13.z = u_xlat10.y;
                u_xlat13.w = u_xlat9.z;
                u_xlat9.xyz = u_xlat11.zyw + u_xlat13.zyw;
                u_xlat10.xyz = u_xlat10.xzw / u_xlat14.zwy;
                u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat11.xyz = u_xlat13.zyw / u_xlat9.xyz;
                u_xlat11.xyz = u_xlat11.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat10.xyz = u_xlat10.yxz * _MainLightShadowmapSize.xxx;
                u_xlat11.xyz = u_xlat11.xyz * _MainLightShadowmapSize.yyy;
                u_xlat10.w = u_xlat11.x;
                u_xlat12 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.ywxw;
                u_xlat52.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat10.zw;
                u_xlat11.w = u_xlat10.y;
                u_xlat10.yw = u_xlat11.yz;
                u_xlat13 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyzy;
                u_xlat11 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.wywz;
                u_xlat10 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xwzw;
                u_xlat15 = u_xlat9.xxxy * u_xlat14.zwyz;
                u_xlat16 = u_xlat9.yyzz * u_xlat14;
                u_xlat73 = u_xlat9.z * u_xlat14.y;
                vec3 txVec34 = vec3(u_xlat12.xy,u_xlat6.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec34, 0.0);
                vec3 txVec35 = vec3(u_xlat12.zw,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec35, 0.0);
                u_xlat30.x = u_xlat30.x * u_xlat15.y;
                u_xlat8.x = u_xlat15.x * u_xlat8.x + u_xlat30.x;
                vec3 txVec36 = vec3(u_xlat52.xy,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec36, 0.0);
                u_xlat8.x = u_xlat15.z * u_xlat30.x + u_xlat8.x;
                vec3 txVec37 = vec3(u_xlat11.xy,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec37, 0.0);
                u_xlat8.x = u_xlat15.w * u_xlat30.x + u_xlat8.x;
                vec3 txVec38 = vec3(u_xlat13.xy,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec38, 0.0);
                u_xlat8.x = u_xlat16.x * u_xlat30.x + u_xlat8.x;
                vec3 txVec39 = vec3(u_xlat13.zw,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec39, 0.0);
                u_xlat8.x = u_xlat16.y * u_xlat30.x + u_xlat8.x;
                vec3 txVec40 = vec3(u_xlat11.zw,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec40, 0.0);
                u_xlat8.x = u_xlat16.z * u_xlat30.x + u_xlat8.x;
                vec3 txVec41 = vec3(u_xlat10.xy,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec41, 0.0);
                u_xlat8.x = u_xlat16.w * u_xlat30.x + u_xlat8.x;
                vec3 txVec42 = vec3(u_xlat10.zw,u_xlat6.z);
                u_xlat30.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec42, 0.0);
                u_xlat66 = u_xlat73 * u_xlat30.x + u_xlat8.x;
            } else {
                u_xlat8.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat8.xy = floor(u_xlat8.xy);
                u_xlat52.xy = u_xlat6.xy * _MainLightShadowmapSize.zw + (-u_xlat8.xy);
                u_xlat9 = u_xlat52.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat10 = u_xlat9.xxzz * u_xlat9.xxzz;
                u_xlat11.yw = u_xlat10.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat9.xz = u_xlat10.xz * vec2(0.5, 0.5) + (-u_xlat52.xy);
                u_xlat10.xy = (-u_xlat52.xy) + vec2(1.0, 1.0);
                u_xlat54.xy = min(u_xlat52.xy, vec2(0.0, 0.0));
                u_xlat10.xy = (-u_xlat54.xy) * u_xlat54.xy + u_xlat10.xy;
                u_xlat54.xy = max(u_xlat52.xy, vec2(0.0, 0.0));
                u_xlat31.xz = (-u_xlat54.xy) * u_xlat54.xy + u_xlat9.yw;
                u_xlat10.xy = u_xlat10.xy + vec2(2.0, 2.0);
                u_xlat9.yw = u_xlat31.xz + vec2(2.0, 2.0);
                u_xlat12.z = u_xlat9.y * 0.0816320032;
                u_xlat13.xyz = u_xlat9.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                u_xlat9.xy = u_xlat10.xy * vec2(0.0816320032, 0.0816320032);
                u_xlat12.x = u_xlat13.y;
                u_xlat12.yw = u_xlat52.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat10.xz = u_xlat52.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat10.y = u_xlat9.x;
                u_xlat10.w = u_xlat11.y;
                u_xlat12 = u_xlat10 + u_xlat12;
                u_xlat13.yw = u_xlat52.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat11.xz = u_xlat52.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat11.y = u_xlat9.y;
                u_xlat9 = u_xlat11 + u_xlat13;
                u_xlat10 = u_xlat10 / u_xlat12;
                u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat11 = u_xlat11 / u_xlat9;
                u_xlat11 = u_xlat11 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat10 = u_xlat10.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat11 = u_xlat11.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat13.xzw = u_xlat10.yzw;
                u_xlat13.y = u_xlat11.x;
                u_xlat14 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat13.xyzy;
                u_xlat52.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat13.wy;
                u_xlat10.y = u_xlat13.y;
                u_xlat13.y = u_xlat11.z;
                u_xlat15 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat13.xyzy;
                u_xlat16.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat13.wy;
                u_xlat10.z = u_xlat13.y;
                u_xlat17 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyxz;
                u_xlat13.y = u_xlat11.w;
                u_xlat18 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat13.xyzy;
                u_xlat32.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat13.wy;
                u_xlat10.w = u_xlat13.y;
                u_xlat60.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat10.xw;
                u_xlat11.xzw = u_xlat13.xzw;
                u_xlat13 = u_xlat8.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat55.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat11.x = u_xlat10.x;
                u_xlat8.xy = u_xlat8.xy * _MainLightShadowmapSize.xy + u_xlat11.xy;
                u_xlat19 = u_xlat9.xxxx * u_xlat12;
                u_xlat20 = u_xlat9.yyyy * u_xlat12;
                u_xlat21 = u_xlat9.zzzz * u_xlat12;
                u_xlat9 = u_xlat9.wwww * u_xlat12;
                vec3 txVec43 = vec3(u_xlat14.xy,u_xlat6.z);
                u_xlat73 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec43, 0.0);
                vec3 txVec44 = vec3(u_xlat14.zw,u_xlat6.z);
                u_xlat10.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec44, 0.0);
                u_xlat10.x = u_xlat10.x * u_xlat19.y;
                u_xlat73 = u_xlat19.x * u_xlat73 + u_xlat10.x;
                vec3 txVec45 = vec3(u_xlat52.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec45, 0.0);
                u_xlat73 = u_xlat19.z * u_xlat52.x + u_xlat73;
                vec3 txVec46 = vec3(u_xlat17.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec46, 0.0);
                u_xlat73 = u_xlat19.w * u_xlat52.x + u_xlat73;
                vec3 txVec47 = vec3(u_xlat15.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec47, 0.0);
                u_xlat73 = u_xlat20.x * u_xlat52.x + u_xlat73;
                vec3 txVec48 = vec3(u_xlat15.zw,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec48, 0.0);
                u_xlat73 = u_xlat20.y * u_xlat52.x + u_xlat73;
                vec3 txVec49 = vec3(u_xlat16.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec49, 0.0);
                u_xlat73 = u_xlat20.z * u_xlat52.x + u_xlat73;
                vec3 txVec50 = vec3(u_xlat17.zw,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec50, 0.0);
                u_xlat73 = u_xlat20.w * u_xlat52.x + u_xlat73;
                vec3 txVec51 = vec3(u_xlat18.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec51, 0.0);
                u_xlat73 = u_xlat21.x * u_xlat52.x + u_xlat73;
                vec3 txVec52 = vec3(u_xlat18.zw,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec52, 0.0);
                u_xlat73 = u_xlat21.y * u_xlat52.x + u_xlat73;
                vec3 txVec53 = vec3(u_xlat32.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec53, 0.0);
                u_xlat73 = u_xlat21.z * u_xlat52.x + u_xlat73;
                vec3 txVec54 = vec3(u_xlat60.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec54, 0.0);
                u_xlat73 = u_xlat21.w * u_xlat52.x + u_xlat73;
                vec3 txVec55 = vec3(u_xlat13.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec55, 0.0);
                u_xlat73 = u_xlat9.x * u_xlat52.x + u_xlat73;
                vec3 txVec56 = vec3(u_xlat13.zw,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec56, 0.0);
                u_xlat73 = u_xlat9.y * u_xlat52.x + u_xlat73;
                vec3 txVec57 = vec3(u_xlat55.xy,u_xlat6.z);
                u_xlat52.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec57, 0.0);
                u_xlat73 = u_xlat9.z * u_xlat52.x + u_xlat73;
                vec3 txVec58 = vec3(u_xlat8.xy,u_xlat6.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec58, 0.0);
                u_xlat66 = u_xlat9.w * u_xlat8.x + u_xlat73;
            }
        }
    } else {
        vec3 txVec59 = vec3(u_xlat6.xy,u_xlat6.z);
        u_xlat66 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec59, 0.0);
    }
    u_xlat66 = u_xlat66 * _MainLightShadowParams.x + u_xlat68;
    u_xlat66 = (u_xlatb70) ? 1.0 : u_xlat66;
    u_xlat6.xyz = vs_INTERP0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat68 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat68 = u_xlat68 * _MainLightShadowParams.z + _MainLightShadowParams.w;
    u_xlat68 = clamp(u_xlat68, 0.0, 1.0);
    u_xlat70 = (-u_xlat66) + 1.0;
    u_xlat66 = u_xlat68 * u_xlat70 + u_xlat66;
    u_xlat6.xyz = u_xlat51.xxx * _MainLightColor.xyz;
    u_xlat68 = dot((-u_xlat1.xyz), u_xlat3.xyz);
    u_xlat68 = u_xlat68 + u_xlat68;
    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat68)) + (-u_xlat1.xyz);
    u_xlat68 = dot(u_xlat3.xyz, u_xlat1.xyz);
    u_xlat68 = clamp(u_xlat68, 0.0, 1.0);
    u_xlat68 = (-u_xlat68) + 1.0;
    u_xlat68 = u_xlat68 * u_xlat68;
    u_xlat68 = u_xlat68 * u_xlat68;
    u_xlat70 = (-u_xlat46) * 0.699999988 + 1.70000005;
    u_xlat46 = u_xlat46 * u_xlat70;
    u_xlat46 = u_xlat46 * 6.0;
    u_xlat8 = textureLod(samplerCube(unity_SpecCube0, samplerunity_SpecCube0), u_xlat8.xyz, u_xlat46);
    u_xlat46 = u_xlat8.w + -1.0;
    u_xlat46 = unity_SpecCube0_HDR.w * u_xlat46 + 1.0;
    u_xlat46 = max(u_xlat46, 0.0);
    u_xlat46 = log2(u_xlat46);
    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.y;
    u_xlat46 = exp2(u_xlat46);
    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.x;
    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
    u_xlat9.xy = vec2(u_xlat69) * vec2(u_xlat69) + vec2(-1.0, 1.0);
    u_xlat46 = float(1.0) / u_xlat9.y;
    u_xlat69 = u_xlat5.x + -0.0399999991;
    u_xlat68 = u_xlat68 * u_xlat69 + 0.0399999991;
    u_xlat46 = u_xlat68 * u_xlat46;
    u_xlat8.xyz = vec3(u_xlat46) * u_xlat8.xyz;
    u_xlat5.xyz = u_xlat27.xyz * u_xlat4.xyz + u_xlat8.xyz;
    u_xlat66 = u_xlat66 * unity_LightData.z;
    u_xlat46 = dot(u_xlat3.xyz, _MainLightPosition.xyz);
    u_xlat46 = clamp(u_xlat46, 0.0, 1.0);
    u_xlat66 = u_xlat66 * u_xlat46;
    u_xlat6.xyz = vec3(u_xlat66) * u_xlat6.xyz;
    u_xlat8.xyz = u_xlat1.xyz + _MainLightPosition.xyz;
    u_xlat66 = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat66 = max(u_xlat66, 1.17549435e-37);
    u_xlat66 = inversesqrt(u_xlat66);
    u_xlat8.xyz = vec3(u_xlat66) * u_xlat8.xyz;
    u_xlat66 = dot(u_xlat3.xyz, u_xlat8.xyz);
    u_xlat66 = clamp(u_xlat66, 0.0, 1.0);
    u_xlat46 = dot(_MainLightPosition.xyz, u_xlat8.xyz);
    u_xlat46 = clamp(u_xlat46, 0.0, 1.0);
    u_xlat66 = u_xlat66 * u_xlat66;
    u_xlat66 = u_xlat66 * u_xlat9.x + 1.00001001;
    u_xlat46 = u_xlat46 * u_xlat46;
    u_xlat66 = u_xlat66 * u_xlat66;
    u_xlat46 = max(u_xlat46, 0.100000001);
    u_xlat66 = u_xlat66 * u_xlat46;
    u_xlat66 = u_xlat29 * u_xlat66;
    u_xlat66 = u_xlat72 / u_xlat66;
    u_xlat8.xyz = vec3(u_xlat66) * vec3(0.0399999991, 0.0399999991, 0.0399999991) + u_xlat4.xyz;
    u_xlat6.xyz = u_xlat6.xyz * u_xlat8.xyz;
    u_xlat66 = min(_AdditionalLightsCount.x, unity_LightData.y);
    u_xlatu66 =  uint(int(u_xlat66));
    u_xlat8.x = float(0.0);
    u_xlat8.y = float(0.0);
    u_xlat8.z = float(0.0);
    for(uint u_xlatu_loop_1 = 0u ; u_xlatu_loop_1<u_xlatu66 ; u_xlatu_loop_1++)
    {
        u_xlatu68 = u_xlatu_loop_1 >> (2u & uint(0x1F));
        u_xlati69 = int(u_xlatu_loop_1 & 3u);
        u_xlat68 = dot(unity_LightIndices[int(u_xlatu68)], uintBitsToFloat(ImmCB_0[u_xlati69]));
        u_xlati68 = int(u_xlat68);
        u_xlat31.xyz = (-vs_INTERP0.xyz) * _AdditionalLightsPosition[u_xlati68].www + _AdditionalLightsPosition[u_xlati68].xyz;
        u_xlat69 = dot(u_xlat31.xyz, u_xlat31.xyz);
        u_xlat69 = max(u_xlat69, 6.10351562e-05);
        u_xlat70 = inversesqrt(u_xlat69);
        u_xlat10.xyz = vec3(u_xlat70) * u_xlat31.xyz;
        u_xlat71 = float(1.0) / float(u_xlat69);
        u_xlat69 = u_xlat69 * _AdditionalLightsAttenuation[u_xlati68].x;
        u_xlat69 = (-u_xlat69) * u_xlat69 + 1.0;
        u_xlat69 = max(u_xlat69, 0.0);
        u_xlat69 = u_xlat69 * u_xlat69;
        u_xlat69 = u_xlat69 * u_xlat71;
        u_xlat71 = dot(_AdditionalLightsSpotDir[u_xlati68].xyz, u_xlat10.xyz);
        u_xlat71 = u_xlat71 * _AdditionalLightsAttenuation[u_xlati68].z + _AdditionalLightsAttenuation[u_xlati68].w;
        u_xlat71 = clamp(u_xlat71, 0.0, 1.0);
        u_xlat71 = u_xlat71 * u_xlat71;
        u_xlat69 = u_xlat69 * u_xlat71;
        u_xlat11.xyz = u_xlat51.xxx * _AdditionalLightsColor[u_xlati68].xyz;
        u_xlat68 = dot(u_xlat3.xyz, u_xlat10.xyz);
        u_xlat68 = clamp(u_xlat68, 0.0, 1.0);
        u_xlat68 = u_xlat68 * u_xlat69;
        u_xlat11.xyz = vec3(u_xlat68) * u_xlat11.xyz;
        u_xlat31.xyz = u_xlat31.xyz * vec3(u_xlat70) + u_xlat1.xyz;
        u_xlat68 = dot(u_xlat31.xyz, u_xlat31.xyz);
        u_xlat68 = max(u_xlat68, 1.17549435e-37);
        u_xlat68 = inversesqrt(u_xlat68);
        u_xlat31.xyz = vec3(u_xlat68) * u_xlat31.xyz;
        u_xlat68 = dot(u_xlat3.xyz, u_xlat31.xyz);
        u_xlat68 = clamp(u_xlat68, 0.0, 1.0);
        u_xlat69 = dot(u_xlat10.xyz, u_xlat31.xyz);
        u_xlat69 = clamp(u_xlat69, 0.0, 1.0);
        u_xlat68 = u_xlat68 * u_xlat68;
        u_xlat68 = u_xlat68 * u_xlat9.x + 1.00001001;
        u_xlat69 = u_xlat69 * u_xlat69;
        u_xlat68 = u_xlat68 * u_xlat68;
        u_xlat69 = max(u_xlat69, 0.100000001);
        u_xlat68 = u_xlat68 * u_xlat69;
        u_xlat68 = u_xlat29 * u_xlat68;
        u_xlat68 = u_xlat72 / u_xlat68;
        u_xlat31.xyz = vec3(u_xlat68) * vec3(0.0399999991, 0.0399999991, 0.0399999991) + u_xlat4.xyz;
        u_xlat8.xyz = u_xlat31.xyz * u_xlat11.xyz + u_xlat8.xyz;
    }
    u_xlat1.xyz = u_xlat5.xyz * u_xlat7.xxx + u_xlat6.xyz;
    u_xlat1.xyz = u_xlat8.xyz + u_xlat1.xyz;
    u_xlat0.xyz = vs_INTERP4.www * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat66 = u_xlat24.x * (-u_xlat24.x);
    u_xlat66 = exp2(u_xlat66);
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    SV_Target0.xyz = vec3(u_xlat66) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.w = (u_xlatb2) ? u_xlat67 : 1.0;
    u_xlatu0 = _RenderingLayerMaxInt & floatBitsToUint(unity_RenderingLayer.x);
    u_xlat0.x = float(u_xlatu0);
    SV_Target1.x = u_xlat0.x * _RenderingLayerRcpMaxInt;
    SV_Target1.x = clamp(SV_Target1.x, 0.0, 1.0);
    SV_Target1.yzw = vec3(0.0, 0.0, 0.0);
    return;
}


#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec4 _ScreenParams;
	vec4 _FsrEasuConstants0;
	vec4 _FsrEasuConstants1;
	vec4 _FsrEasuConstants2;
	vec4 _FsrEasuConstants3;
};
layout(set = 0, binding = 0) uniform mediump texture2D _BlitTexture;
layout(location = 0) in highp vec2 vs_TEXCOORD0;
layout(location = 0) out highp vec4 SV_Target0;
layout(set = 0, binding = 1) uniform mediump  sampler sampler_LinearClamp;
void main()
{
vec3 u_xlat0;
uvec2 u_xlatu0;
vec4 u_xlat1;
uint u_xlatu1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
vec4 u_xlat12;
vec3 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec4 u_xlat17;
vec3 u_xlat18;
vec3 u_xlat19;
vec2 u_xlat20;
vec2 u_xlat27;
vec3 u_xlat31;
vec2 u_xlat38;
vec2 u_xlat39;
float u_xlat57;
bool u_xlatb57;
float u_xlat58;
float u_xlat59;
float u_xlat60;
    u_xlat0.xy = vs_TEXCOORD0.xy * _ScreenParams.xy;
    u_xlatu0.xy = uvec2(u_xlat0.xy);
    u_xlat0.xy = vec2(u_xlatu0.xy);
    u_xlat0.xy = u_xlat0.xy * _FsrEasuConstants0.xy + _FsrEasuConstants0.zw;
    u_xlat38.xy = floor(u_xlat0.xy);
    u_xlat0.xy = (-u_xlat38.xy) + u_xlat0.xy;
    u_xlat38.xy = u_xlat38.xy * _FsrEasuConstants1.xy + _FsrEasuConstants1.zw;
    u_xlat1.xy = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy).xy;
    u_xlat2.x = u_xlat1.y;
    u_xlat3.xy = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy, 1).yx;
    u_xlat2.y = u_xlat3.x;
    u_xlat1.zw = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy, 2).xy;
    u_xlat2.z = u_xlat1.w;
    u_xlat4.xy = u_xlat1.xy * vec2(0.5, 0.5) + u_xlat3.yx;
    u_xlat3.xz = u_xlat1.xz;
    u_xlat1.xy = u_xlat1.zw * vec2(0.5, 0.5) + u_xlat4.xy;
    u_xlat4 = u_xlat38.xyxy + _FsrEasuConstants2;
    u_xlat38.xy = u_xlat38.xy + _FsrEasuConstants3.xy;
    u_xlat5 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.zw, 2).xywz;
    u_xlat6 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.zw);
    u_xlat7 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.zw, 1).xzyw;
    u_xlat8 = u_xlat6 * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat7.xzyw;
    u_xlat8 = u_xlat5.xywz * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat8;
    u_xlat20.xy = (-u_xlat1.yy) + u_xlat8.wx;
    u_xlat9.xyz = (-u_xlat8.wwx) + u_xlat8.zxy;
    u_xlat20.x = max(abs(u_xlat20.x), abs(u_xlat9.y));
    u_xlat20.x = intBitsToFloat((-floatBitsToInt(u_xlat20.x)) + int(0x7EF07EBBu));
    u_xlat1.y = u_xlat20.x * abs(u_xlat20.y);
    u_xlat1.y = clamp(u_xlat1.y, 0.0, 1.0);
    u_xlat10 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.xy, 2).xywz;
    u_xlat11 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.xy);
    u_xlat4 = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat4.xy, 1).xzyw;
    u_xlat12 = u_xlat11.zwyx * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat4.ywzx;
    u_xlat12 = u_xlat10.wzyx * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat12;
    u_xlat1.xw = (-u_xlat1.xx) + u_xlat12.xz;
    u_xlat13.xyz = (-u_xlat12.yxw) + u_xlat12.xzz;
    u_xlat1.x = max(abs(u_xlat1.x), abs(u_xlat13.y));
    u_xlat1.x = intBitsToFloat((-floatBitsToInt(u_xlat1.x)) + int(0x7EF07EBBu));
    u_xlat1.x = u_xlat1.x * abs(u_xlat1.w);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * u_xlat1.xy;
    u_xlat14 = (-u_xlat0.xyxy) + vec4(1.0, 1.0, 0.0, -1.0);
    u_xlat59 = u_xlat14.y * u_xlat14.x;
    u_xlat1.x = u_xlat1.x * u_xlat59;
    u_xlat15 = u_xlat8.wwzx + (-u_xlat12.xyxz);
    u_xlat13.xz = max(abs(u_xlat13.xz), abs(u_xlat15.xw));
    u_xlat13.xz = intBitsToFloat((-floatBitsToInt(u_xlat13.xz)) + ivec2(int(0x7EF07EBBu), int(0x7EF07EBBu)));
    u_xlat60 = u_xlat13.x * abs(u_xlat15.y);
    u_xlat60 = clamp(u_xlat60, 0.0, 1.0);
    u_xlat60 = u_xlat60 * u_xlat60;
    u_xlat1.x = u_xlat60 * u_xlat59 + u_xlat1.x;
    u_xlat9.xz = max(abs(u_xlat9.xz), abs(u_xlat15.xw));
    u_xlat9.xz = intBitsToFloat((-floatBitsToInt(u_xlat9.xz)) + ivec2(int(0x7EF07EBBu), int(0x7EF07EBBu)));
    u_xlat60 = u_xlat9.x * abs(u_xlat15.z);
    u_xlat60 = clamp(u_xlat60, 0.0, 1.0);
    u_xlat60 = u_xlat60 * u_xlat60;
    u_xlat9.xw = u_xlat0.xy * u_xlat14.yx;
    u_xlat1.x = u_xlat60 * u_xlat9.x + u_xlat1.x;
    u_xlat1.x = u_xlat1.y * u_xlat9.x + u_xlat1.x;
    u_xlat27.xy = u_xlat8.xy + (-u_xlat12.wz);
    u_xlat20.x = u_xlat13.z * abs(u_xlat27.x);
    u_xlat20.x = clamp(u_xlat20.x, 0.0, 1.0);
    u_xlat20.x = u_xlat20.x * u_xlat20.x;
    u_xlat1.x = u_xlat20.x * u_xlat9.w + u_xlat1.x;
    u_xlat31.xz = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy).zw;
    u_xlat16.yw = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy, 1).zw;
    u_xlat17.zw = textureGather(sampler2D(_BlitTexture, sampler_LinearClamp), u_xlat38.xy, 2).wz;
    u_xlat38.xy = u_xlat31.xz * vec2(0.5, 0.5) + u_xlat16.yw;
    u_xlat38.xy = u_xlat17.wz * vec2(0.5, 0.5) + u_xlat38.xy;
    u_xlat12.xz = (-u_xlat12.zx) + u_xlat38.yy;
    u_xlat38.xy = (-u_xlat8.xw) + u_xlat38.xx;
    u_xlat20.x = max(abs(u_xlat13.y), abs(u_xlat12.x));
    u_xlat20.x = intBitsToFloat((-floatBitsToInt(u_xlat20.x)) + int(0x7EF07EBBu));
    u_xlat20.x = u_xlat20.x * abs(u_xlat12.z);
    u_xlat20.x = clamp(u_xlat20.x, 0.0, 1.0);
    u_xlat20.x = u_xlat20.x * u_xlat20.x;
    u_xlat1.x = u_xlat20.x * u_xlat9.w + u_xlat1.x;
    u_xlat20.x = u_xlat0.y * u_xlat0.x;
    u_xlat60 = u_xlat9.z * abs(u_xlat27.y);
    u_xlat60 = clamp(u_xlat60, 0.0, 1.0);
    u_xlat60 = u_xlat60 * u_xlat60;
    u_xlat1.x = u_xlat60 * u_xlat20.x + u_xlat1.x;
    u_xlat38.x = max(abs(u_xlat9.y), abs(u_xlat38.x));
    u_xlat38.x = intBitsToFloat((-floatBitsToInt(u_xlat38.x)) + int(0x7EF07EBBu));
    u_xlat38.x = u_xlat38.x * abs(u_xlat38.y);
    u_xlat38.x = clamp(u_xlat38.x, 0.0, 1.0);
    u_xlat38.x = u_xlat38.x * u_xlat38.x;
    u_xlat38.x = u_xlat38.x * u_xlat20.x + u_xlat1.x;
    u_xlat38.x = u_xlat38.x * 0.5;
    u_xlat38.x = u_xlat38.x * u_xlat38.x;
    u_xlat13.yz = u_xlat38.xx * vec2(-0.5, -0.289999992) + vec2(1.0, 0.5);
    u_xlat1.x = u_xlat20.y * u_xlat9.x;
    u_xlat1.x = u_xlat1.w * u_xlat59 + u_xlat1.x;
    u_xlat1.x = u_xlat12.z * u_xlat9.w + u_xlat1.x;
    u_xlat18.z = u_xlat38.y * u_xlat20.x + u_xlat1.x;
    u_xlat57 = u_xlat9.x * u_xlat15.z;
    u_xlat57 = u_xlat15.y * u_xlat59 + u_xlat57;
    u_xlat57 = u_xlat27.x * u_xlat9.w + u_xlat57;
    u_xlat18.y = u_xlat27.y * u_xlat20.x + u_xlat57;
    u_xlat1.xy = u_xlat18.yz * u_xlat18.yz;
    u_xlat57 = u_xlat1.y + u_xlat1.x;
    u_xlatu1 = floatBitsToUint(u_xlat57) >> (1u & uint(0x1F));
    u_xlatb57 = u_xlat57<3.05175781e-05;
    u_xlat1.x = intBitsToFloat((-int(u_xlatu1)) + int(0x5F347D74u));
    u_xlat1.x = (u_xlatb57) ? 1.0 : u_xlat1.x;
    u_xlat18.x = (u_xlatb57) ? 1.0 : u_xlat18.y;
    u_xlat1.xy = u_xlat1.xx * u_xlat18.xz;
    u_xlat57 = max(abs(u_xlat1.y), abs(u_xlat1.x));
    u_xlat57 = intBitsToFloat((-floatBitsToInt(u_xlat57)) + int(0x7EF07EBBu));
    u_xlat39.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat57 = u_xlat39.x * u_xlat57 + -1.0;
    u_xlat13.x = u_xlat57 * u_xlat38.x + 1.0;
    u_xlat8 = (-u_xlat0.xyxy) + vec4(1.0, -1.0, -1.0, 1.0);
    u_xlat38.xy = u_xlat1.xx * u_xlat8.yw;
    u_xlat9.zw = u_xlat8.xz * (-u_xlat1.yy) + u_xlat38.xy;
    u_xlat9.y = dot(u_xlat8.xy, u_xlat1.xy);
    u_xlat9.x = dot(u_xlat8.zw, u_xlat1.xy);
    u_xlat38.xy = u_xlat13.xy * u_xlat9.xw;
    u_xlat39.xy = u_xlat13.xy * u_xlat9.yz;
    u_xlat39.x = dot(u_xlat39.xy, u_xlat39.xy);
    u_xlat38.x = dot(u_xlat38.xy, u_xlat38.xy);
    u_xlat57 = intBitsToFloat((-floatBitsToInt(u_xlat13.z)) + int(0x7EF07EBBu));
    u_xlat39.x = min(u_xlat57, u_xlat39.x);
    u_xlat39.y = u_xlat13.z * u_xlat39.x + -1.0;
    u_xlat39.x = u_xlat39.x * 0.400000006 + -1.0;
    u_xlat39.xy = u_xlat39.xy * u_xlat39.xy;
    u_xlat39.x = u_xlat39.x * 1.5625 + -0.5625;
    u_xlat39.x = u_xlat39.y * u_xlat39.x;
    u_xlat2.xyz = u_xlat39.xxx * u_xlat2.xyz;
    u_xlat58 = u_xlat1.x * u_xlat14.w;
    u_xlat8.y = u_xlat14.z * (-u_xlat1.y) + u_xlat58;
    u_xlat8.x = dot(u_xlat14.zw, u_xlat1.xy);
    u_xlat8.xy = u_xlat13.xy * u_xlat8.xy;
    u_xlat58 = dot(u_xlat8.xy, u_xlat8.xy);
    u_xlat58 = min(u_xlat57, u_xlat58);
    u_xlat59 = u_xlat13.z * u_xlat58 + -1.0;
    u_xlat58 = u_xlat58 * 0.400000006 + -1.0;
    u_xlat58 = u_xlat58 * u_xlat58;
    u_xlat58 = u_xlat58 * 1.5625 + -0.5625;
    u_xlat59 = u_xlat59 * u_xlat59;
    u_xlat60 = u_xlat58 * u_xlat59;
    u_xlat39.x = u_xlat58 * u_xlat59 + u_xlat39.x;
    u_xlat2.xyz = u_xlat3.xyz * vec3(u_xlat60) + u_xlat2.xyz;
    u_xlat38.x = min(u_xlat57, u_xlat38.x);
    u_xlat58 = u_xlat13.z * u_xlat38.x + -1.0;
    u_xlat38.x = u_xlat38.x * 0.400000006 + -1.0;
    u_xlat38.x = u_xlat38.x * u_xlat38.x;
    u_xlat38.x = u_xlat38.x * 1.5625 + -0.5625;
    u_xlat58 = u_xlat58 * u_xlat58;
    u_xlat59 = u_xlat38.x * u_xlat58;
    u_xlat38.x = u_xlat38.x * u_xlat58 + u_xlat39.x;
    u_xlat3.x = u_xlat11.x;
    u_xlat3.y = u_xlat4.x;
    u_xlat3.z = u_xlat10.x;
    u_xlat2.xyz = u_xlat3.xyz * vec3(u_xlat59) + u_xlat2.xyz;
    u_xlat3 = (-u_xlat0.xyxy) + vec4(0.0, 1.0, -1.0, 0.0);
    u_xlat39.xy = u_xlat1.xx * u_xlat3.yw;
    u_xlat8.zw = u_xlat3.xz * (-u_xlat1.yy) + u_xlat39.xy;
    u_xlat8.y = dot(u_xlat3.xy, u_xlat1.xy);
    u_xlat8.x = dot(u_xlat3.zw, u_xlat1.xy);
    u_xlat39.xy = u_xlat13.xy * u_xlat8.xw;
    u_xlat3.xy = u_xlat13.xy * u_xlat8.yz;
    u_xlat59 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat59 = min(u_xlat57, u_xlat59);
    u_xlat39.x = dot(u_xlat39.xy, u_xlat39.xy);
    u_xlat58 = u_xlat13.z * u_xlat59 + -1.0;
    u_xlat59 = u_xlat59 * 0.400000006 + -1.0;
    u_xlat59 = u_xlat59 * u_xlat59;
    u_xlat59 = u_xlat59 * 1.5625 + -0.5625;
    u_xlat58 = u_xlat58 * u_xlat58;
    u_xlat3.x = u_xlat58 * u_xlat59;
    u_xlat38.x = u_xlat59 * u_xlat58 + u_xlat38.x;
    u_xlat8.x = u_xlat11.y;
    u_xlat8.y = u_xlat4.z;
    u_xlat8.z = u_xlat10.y;
    u_xlat2.xyz = u_xlat8.xyz * u_xlat3.xxx + u_xlat2.xyz;
    u_xlat58 = (-u_xlat0.y) * u_xlat1.x;
    u_xlat3.y = u_xlat0.x * u_xlat1.y + u_xlat58;
    u_xlat3.x = dot((-u_xlat0.xy), u_xlat1.xy);
    u_xlat3.xy = u_xlat13.xy * u_xlat3.xy;
    u_xlat39.y = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat39.xy = min(vec2(u_xlat57), u_xlat39.xy);
    u_xlat59 = u_xlat13.z * u_xlat39.y + -1.0;
    u_xlat58 = u_xlat39.y * 0.400000006 + -1.0;
    u_xlat58 = u_xlat58 * u_xlat58;
    u_xlat58 = u_xlat58 * 1.5625 + -0.5625;
    u_xlat59 = u_xlat59 * u_xlat59;
    u_xlat3.x = u_xlat58 * u_xlat59;
    u_xlat38.x = u_xlat58 * u_xlat59 + u_xlat38.x;
    u_xlat4.x = u_xlat11.z;
    u_xlat10.x = u_xlat11.w;
    u_xlat10.y = u_xlat4.w;
    u_xlat4.z = u_xlat10.w;
    u_xlat2.xyz = u_xlat4.xyz * u_xlat3.xxx + u_xlat2.xyz;
    u_xlat39.y = u_xlat13.z * u_xlat39.x + -1.0;
    u_xlat39.x = u_xlat39.x * 0.400000006 + -1.0;
    u_xlat39.xy = u_xlat39.xy * u_xlat39.xy;
    u_xlat39.x = u_xlat39.x * 1.5625 + -0.5625;
    u_xlat59 = u_xlat39.y * u_xlat39.x;
    u_xlat38.x = u_xlat39.x * u_xlat39.y + u_xlat38.x;
    u_xlat2.xyz = u_xlat10.xyz * vec3(u_xlat59) + u_xlat2.xyz;
    u_xlat3 = (-u_xlat0.xyxy) + vec4(1.0, 1.0, 2.0, 1.0);
    u_xlat39.xy = u_xlat1.xx * u_xlat3.yw;
    u_xlat9.zw = u_xlat3.xz * (-u_xlat1.yy) + u_xlat39.xy;
    u_xlat9.y = dot(u_xlat3.xy, u_xlat1.xy);
    u_xlat9.x = dot(u_xlat3.zw, u_xlat1.xy);
    u_xlat39.xy = u_xlat13.xy * u_xlat9.xw;
    u_xlat3.xy = u_xlat13.xy * u_xlat9.yz;
    u_xlat59 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat59 = min(u_xlat57, u_xlat59);
    u_xlat39.x = dot(u_xlat39.xy, u_xlat39.xy);
    u_xlat39.x = min(u_xlat57, u_xlat39.x);
    u_xlat58 = u_xlat13.z * u_xlat59 + -1.0;
    u_xlat59 = u_xlat59 * 0.400000006 + -1.0;
    u_xlat59 = u_xlat59 * u_xlat59;
    u_xlat59 = u_xlat59 * 1.5625 + -0.5625;
    u_xlat58 = u_xlat58 * u_xlat58;
    u_xlat3.x = u_xlat58 * u_xlat59;
    u_xlat38.x = u_xlat59 * u_xlat58 + u_xlat38.x;
    u_xlat9.x = u_xlat6.x;
    u_xlat9.y = u_xlat7.x;
    u_xlat9.z = u_xlat5.x;
    u_xlat2.xyz = u_xlat9.xyz * u_xlat3.xxx + u_xlat2.xyz;
    u_xlat39.y = u_xlat13.z * u_xlat39.x + -1.0;
    u_xlat39.x = u_xlat39.x * 0.400000006 + -1.0;
    u_xlat39.xy = u_xlat39.xy * u_xlat39.xy;
    u_xlat39.x = u_xlat39.x * 1.5625 + -0.5625;
    u_xlat59 = u_xlat39.y * u_xlat39.x;
    u_xlat38.x = u_xlat39.x * u_xlat39.y + u_xlat38.x;
    u_xlat3.x = u_xlat6.y;
    u_xlat3.y = u_xlat7.z;
    u_xlat3.z = u_xlat5.y;
    u_xlat2.xyz = u_xlat3.xyz * vec3(u_xlat59) + u_xlat2.xyz;
    u_xlat3 = (-u_xlat0.xyxy) + vec4(2.0, 0.0, 1.0, 0.0);
    u_xlat10 = (-u_xlat0.xyxy) + vec4(1.0, 2.0, 0.0, 2.0);
    u_xlat0.xy = u_xlat1.xx * u_xlat3.yw;
    u_xlat11.zw = u_xlat3.xz * (-u_xlat1.yy) + u_xlat0.xy;
    u_xlat11.y = dot(u_xlat3.xy, u_xlat1.xy);
    u_xlat11.x = dot(u_xlat3.zw, u_xlat1.xy);
    u_xlat0.xy = u_xlat13.xy * u_xlat11.xw;
    u_xlat39.xy = u_xlat13.xy * u_xlat11.yz;
    u_xlat39.x = dot(u_xlat39.xy, u_xlat39.xy);
    u_xlat39.x = min(u_xlat57, u_xlat39.x);
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = min(u_xlat57, u_xlat0.x);
    u_xlat19.x = u_xlat13.z * u_xlat39.x + -1.0;
    u_xlat39.x = u_xlat39.x * 0.400000006 + -1.0;
    u_xlat39.x = u_xlat39.x * u_xlat39.x;
    u_xlat39.x = u_xlat39.x * 1.5625 + -0.5625;
    u_xlat19.x = u_xlat19.x * u_xlat19.x;
    u_xlat58 = u_xlat19.x * u_xlat39.x;
    u_xlat19.x = u_xlat39.x * u_xlat19.x + u_xlat38.x;
    u_xlat7.x = u_xlat6.z;
    u_xlat5.x = u_xlat6.w;
    u_xlat5.y = u_xlat7.w;
    u_xlat7.z = u_xlat5.w;
    u_xlat2.xyz = u_xlat7.xyz * vec3(u_xlat58) + u_xlat2.xyz;
    u_xlat0.z = u_xlat13.z * u_xlat0.x + -1.0;
    u_xlat0.x = u_xlat0.x * 0.400000006 + -1.0;
    u_xlat0.xz = u_xlat0.xz * u_xlat0.xz;
    u_xlat0.x = u_xlat0.x * 1.5625 + -0.5625;
    u_xlat39.x = u_xlat0.z * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.z + u_xlat19.x;
    u_xlat2.xyz = u_xlat5.xyz * u_xlat39.xxx + u_xlat2.xyz;
    u_xlat19.xy = u_xlat1.xx * u_xlat10.yw;
    u_xlat3.zw = u_xlat10.xz * (-u_xlat1.yy) + u_xlat19.xy;
    u_xlat3.y = dot(u_xlat10.xy, u_xlat1.xy);
    u_xlat3.x = dot(u_xlat10.zw, u_xlat1.xy);
    u_xlat19.xy = u_xlat13.xy * u_xlat3.xw;
    u_xlat1.xy = u_xlat13.xy * u_xlat3.yz;
    u_xlat1.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat1.x = min(u_xlat57, u_xlat1.x);
    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
    u_xlat19.x = min(u_xlat57, u_xlat19.x);
    u_xlat38.x = u_xlat13.z * u_xlat1.x + -1.0;
    u_xlat38.y = u_xlat1.x * 0.400000006 + -1.0;
    u_xlat38.xy = u_xlat38.xy * u_xlat38.xy;
    u_xlat57 = u_xlat38.y * 1.5625 + -0.5625;
    u_xlat1.x = u_xlat13.z * u_xlat19.x + -1.0;
    u_xlat19.x = u_xlat19.x * 0.400000006 + -1.0;
    u_xlat19.x = u_xlat19.x * u_xlat19.x;
    u_xlat19.x = u_xlat19.x * 1.5625 + -0.5625;
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat20.x = u_xlat38.x * u_xlat57;
    u_xlat0.x = u_xlat57 * u_xlat38.x + u_xlat0.x;
    u_xlat0.x = u_xlat19.x * u_xlat1.x + u_xlat0.x;
    u_xlat19.x = u_xlat19.x * u_xlat1.x;
    u_xlat0.x = float(1.0) / float(u_xlat0.x);
    u_xlat16.x = u_xlat31.x;
    u_xlat17.x = u_xlat31.z;
    u_xlat17.y = u_xlat16.w;
    u_xlat16.z = u_xlat17.w;
    u_xlat1.xyz = u_xlat16.xyz * u_xlat20.xxx + u_xlat2.xyz;
    u_xlat19.xyz = u_xlat17.xyz * u_xlat19.xxx + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat19.xyz;
    u_xlat1.xyz = min(u_xlat8.xyz, u_xlat5.xyz);
    u_xlat2.xyz = max(u_xlat8.xyz, u_xlat5.xyz);
    u_xlat2.xyz = max(u_xlat2.xyz, u_xlat4.xyz);
    u_xlat1.xyz = min(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat1.xyz = min(u_xlat9.xyz, u_xlat1.xyz);
    u_xlat2.xyz = max(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat0.xyz = max(u_xlat0.xyz, u_xlat1.xyz);
    u_xlat0.xyz = min(u_xlat0.xyz, u_xlat2.xyz);
    SV_Target0.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}


#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require
#ifdef GL_ARB_derivative_control
#extension GL_ARB_derivative_control : enable
#endif

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
const uvec4 ImmCB_0[] = uvec4[4] (
	uvec4(0x3F800000, 0x0, 0x0, 0x0),
	uvec4(0x0, 0x3F800000, 0x0, 0x0),
	uvec4(0x0, 0x0, 0x3F800000, 0x0),
	uvec4(0x0, 0x0, 0x0, 0x3F800000));
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec2 _GlobalMipBias;
	float _AlphaToMaskAvailable;
	vec4 _MainLightPosition;
	vec4 _MainLightColor;
	vec4 _AdditionalLightsCount;
	vec3 _WorldSpaceCameraPos;
};
layout(set = 1, binding = 1, std140) uniform AdditionalLights {
	vec4 _AdditionalLightsPosition[32];
	vec4 _AdditionalLightsColor[32];
	vec4 _AdditionalLightsAttenuation[32];
	vec4 _AdditionalLightsSpotDir[32];
	vec4 _AdditionalLightsOcclusionProbes[32];
	float _AdditionalLightsLayerMasks[32];
};
layout(set = 1, binding = 2, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 3, std140) uniform UnityPerMaterial {
	vec4 _BaseMap_ST;
	vec4 _BaseColor;
	vec4 _SpecColor;
	vec4 _EmissionColor;
	float _Cutoff;
	float _Surface;
};
layout(set = 1, binding = 4, std140) uniform LightShadows {
	mat4x4 _MainLightWorldToShadow[5];
	vec4 _CascadeShadowSplitSpheres0;
	vec4 _CascadeShadowSplitSpheres1;
	vec4 _CascadeShadowSplitSpheres2;
	vec4 _CascadeShadowSplitSpheres3;
	vec4 _CascadeShadowSplitSphereRadii;
	vec4 _MainLightShadowOffset0;
	vec4 _MainLightShadowOffset1;
	vec4 _MainLightShadowParams;
	vec4 _MainLightShadowmapSize;
	vec4 _AdditionalShadowOffset0;
	vec4 _AdditionalShadowOffset1;
	vec4 _AdditionalShadowFadeParams;
	vec4 _AdditionalShadowmapSize;
	vec4 _AdditionalShadowParams[32];
	mat4x4 _AdditionalLightsWorldToShadow[32];
};
layout(set = 0, binding = 0) uniform mediump texture2D unity_Lightmap;
layout(set = 0, binding = 1) uniform mediump texture2D unity_LightmapInd;
layout(set = 0, binding = 2) uniform mediump texture2D _BaseMap;
layout(set = 0, binding = 3) uniform mediump texture2D _MainLightShadowmapTexture;
layout(set = 0, binding = 4) uniform mediump texture2D _AdditionalLightsShadowmapTexture;
layout(location = 0) in highp  vec2 vs_TEXCOORD0;
layout(location = 1) in highp  vec3 vs_TEXCOORD1;
layout(location = 2) in highp  vec3 vs_TEXCOORD2;
layout(location = 3) in highp  vec4 vs_TEXCOORD6;
layout(location = 4) in highp  vec2 vs_TEXCOORD7;
layout(location = 0) out highp vec4 SV_Target0;
vec4 u_xlat0;
bool u_xlatb0;
vec4 u_xlat1;
uint u_xlatu1;
bool u_xlatb1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
bvec4 u_xlatb7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
vec4 u_xlat12;
vec4 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec4 u_xlat17;
vec4 u_xlat18;
vec4 u_xlat19;
vec4 u_xlat20;
vec4 u_xlat21;
float u_xlat22;
uint u_xlatu22;
bool u_xlatb22;
vec3 u_xlat27;
vec2 u_xlat28;
vec3 u_xlat31;
vec2 u_xlat32;
float u_xlat44;
bool u_xlatb44;
vec2 u_xlat48;
vec2 u_xlat50;
vec2 u_xlat51;
vec2 u_xlat52;
vec2 u_xlat54;
vec2 u_xlat55;
vec2 u_xlat56;
vec2 u_xlat60;
float u_xlat66;
bool u_xlatb66;
float u_xlat68;
int u_xlati68;
uint u_xlatu68;
bool u_xlatb68;
float u_xlat69;
int u_xlati69;
float u_xlat70;
int u_xlati70;
bool u_xlatb70;
float u_xlat71;
bool u_xlatb71;
float u_xlat72;
bool u_xlatb72;
float u_xlat73;
layout(set = 0, binding = 5) uniform mediump  sampler samplerunity_Lightmap;
layout(set = 0, binding = 6) uniform mediump  sampler sampler_BaseMap;
layout(set = 0, binding = 7) uniform mediump  samplerShadow sampler_LinearClampCompare;
void main()
{
    u_xlat0 = texture(sampler2D(_BaseMap, sampler_BaseMap), vs_TEXCOORD0.xy, _GlobalMipBias.x);
    u_xlat1 = u_xlat0.wxyz * _BaseColor.wxyz;
    u_xlatb0 = u_xlat1.x>=_Cutoff;
    u_xlat0.x = u_xlatb0 ? u_xlat1.x : float(0.0);
    u_xlat22 = u_xlat0.w * _BaseColor.w + (-_Cutoff);
    u_xlat44 = dFdxCoarse(u_xlat1.x);
    u_xlat66 = dFdyCoarse(u_xlat1.x);
    u_xlat44 = abs(u_xlat66) + abs(u_xlat44);
    u_xlat44 = max(u_xlat44, 9.99999975e-05);
    u_xlat22 = u_xlat22 / u_xlat44;
    u_xlat22 = u_xlat22 + 0.5;
    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
    u_xlatb44 = _AlphaToMaskAvailable!=0.0;
    u_xlat0.x = (u_xlatb44) ? u_xlat22 : u_xlat0.x;
    u_xlat22 = u_xlat0.x + -9.99999975e-05;
    u_xlatb22 = u_xlat22<0.0;
    if(((int(u_xlatb22) * int(0xffffffffu)))!=0){discard;}
    u_xlat22 = dot(vs_TEXCOORD2.xyz, vs_TEXCOORD2.xyz);
    u_xlat22 = inversesqrt(u_xlat22);
    u_xlat2.xyz = vec3(u_xlat22) * vs_TEXCOORD2.xyz;
    u_xlat3 = texture(sampler2D(unity_LightmapInd, samplerunity_Lightmap), vs_TEXCOORD7.xy, _GlobalMipBias.x);
    u_xlat4.xyz = texture(sampler2D(unity_Lightmap, samplerunity_Lightmap), vs_TEXCOORD7.xy, _GlobalMipBias.x).xyz;
    u_xlat3.xyz = u_xlat3.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat22 = dot(u_xlat2.xyz, u_xlat3.xyz);
    u_xlat22 = u_xlat22 + 0.5;
    u_xlat3.xyz = vec3(u_xlat22) * u_xlat4.xyz;
    u_xlat22 = max(u_xlat3.w, 9.99999975e-05);
    u_xlat3.xyz = u_xlat3.xyz / vec3(u_xlat22);
    u_xlatb22 = 0.0<_MainLightShadowParams.y;
    if(u_xlatb22){
        u_xlatb22 = _MainLightShadowParams.y==1.0;
        if(u_xlatb22){
            u_xlat4 = vs_TEXCOORD6.xyxy + _MainLightShadowOffset0;
            vec3 txVec0 = vec3(u_xlat4.xy,vs_TEXCOORD6.z);
            u_xlat5.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec0, 0.0);
            vec3 txVec1 = vec3(u_xlat4.zw,vs_TEXCOORD6.z);
            u_xlat5.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec1, 0.0);
            u_xlat4 = vs_TEXCOORD6.xyxy + _MainLightShadowOffset1;
            vec3 txVec2 = vec3(u_xlat4.xy,vs_TEXCOORD6.z);
            u_xlat5.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec2, 0.0);
            vec3 txVec3 = vec3(u_xlat4.zw,vs_TEXCOORD6.z);
            u_xlat5.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec3, 0.0);
            u_xlat22 = dot(u_xlat5, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb66 = _MainLightShadowParams.y==2.0;
            if(u_xlatb66){
                u_xlat4.xy = vs_TEXCOORD6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat4.xy = floor(u_xlat4.xy);
                u_xlat48.xy = vs_TEXCOORD6.xy * _MainLightShadowmapSize.zw + (-u_xlat4.xy);
                u_xlat5 = u_xlat48.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat6 = u_xlat5.xxzz * u_xlat5.xxzz;
                u_xlat5.xz = u_xlat6.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat6.xy = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat48.xy);
                u_xlat50.xy = (-u_xlat48.xy) + vec2(1.0, 1.0);
                u_xlat7.xy = min(u_xlat48.xy, vec2(0.0, 0.0));
                u_xlat7.xy = (-u_xlat7.xy) * u_xlat7.xy + u_xlat50.xy;
                u_xlat48.xy = max(u_xlat48.xy, vec2(0.0, 0.0));
                u_xlat48.xy = (-u_xlat48.xy) * u_xlat48.xy + u_xlat5.yw;
                u_xlat7.xy = u_xlat7.xy + vec2(1.0, 1.0);
                u_xlat48.xy = u_xlat48.xy + vec2(1.0, 1.0);
                u_xlat8.xy = u_xlat6.xy * vec2(0.159999996, 0.159999996);
                u_xlat6.xy = u_xlat50.xy * vec2(0.159999996, 0.159999996);
                u_xlat7.xy = u_xlat7.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat48.xy * vec2(0.159999996, 0.159999996);
                u_xlat48.xy = u_xlat5.yw * vec2(0.159999996, 0.159999996);
                u_xlat8.z = u_xlat7.x;
                u_xlat8.w = u_xlat48.x;
                u_xlat6.z = u_xlat9.x;
                u_xlat6.w = u_xlat5.x;
                u_xlat10 = u_xlat6.zwxz + u_xlat8.zwxz;
                u_xlat7.z = u_xlat8.y;
                u_xlat7.w = u_xlat48.y;
                u_xlat9.z = u_xlat6.y;
                u_xlat9.w = u_xlat5.z;
                u_xlat5.xyz = u_xlat7.zyw + u_xlat9.zyw;
                u_xlat6.xyz = u_xlat6.xzw / u_xlat10.zwy;
                u_xlat6.xyz = u_xlat6.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat7.xyz = u_xlat9.zyw / u_xlat5.xyz;
                u_xlat7.xyz = u_xlat7.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat6.xyz = u_xlat6.yxz * _MainLightShadowmapSize.xxx;
                u_xlat7.xyz = u_xlat7.xyz * _MainLightShadowmapSize.yyy;
                u_xlat6.w = u_xlat7.x;
                u_xlat8 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat6.ywxw;
                u_xlat48.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat6.zw;
                u_xlat7.w = u_xlat6.y;
                u_xlat6.yw = u_xlat7.yz;
                u_xlat9 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat6.xyzy;
                u_xlat7 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat7.wywz;
                u_xlat6 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat6.xwzw;
                u_xlat11 = u_xlat5.xxxy * u_xlat10.zwyz;
                u_xlat12 = u_xlat5.yyzz * u_xlat10;
                u_xlat66 = u_xlat5.z * u_xlat10.y;
                vec3 txVec4 = vec3(u_xlat8.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec4, 0.0);
                vec3 txVec5 = vec3(u_xlat8.zw,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec5, 0.0);
                u_xlat68 = u_xlat68 * u_xlat11.y;
                u_xlat1.x = u_xlat11.x * u_xlat1.x + u_xlat68;
                vec3 txVec6 = vec3(u_xlat48.xy,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec6, 0.0);
                u_xlat1.x = u_xlat11.z * u_xlat68 + u_xlat1.x;
                vec3 txVec7 = vec3(u_xlat7.xy,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec7, 0.0);
                u_xlat1.x = u_xlat11.w * u_xlat68 + u_xlat1.x;
                vec3 txVec8 = vec3(u_xlat9.xy,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec8, 0.0);
                u_xlat1.x = u_xlat12.x * u_xlat68 + u_xlat1.x;
                vec3 txVec9 = vec3(u_xlat9.zw,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec9, 0.0);
                u_xlat1.x = u_xlat12.y * u_xlat68 + u_xlat1.x;
                vec3 txVec10 = vec3(u_xlat7.zw,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec10, 0.0);
                u_xlat1.x = u_xlat12.z * u_xlat68 + u_xlat1.x;
                vec3 txVec11 = vec3(u_xlat6.xy,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec11, 0.0);
                u_xlat1.x = u_xlat12.w * u_xlat68 + u_xlat1.x;
                vec3 txVec12 = vec3(u_xlat6.zw,vs_TEXCOORD6.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec12, 0.0);
                u_xlat22 = u_xlat66 * u_xlat68 + u_xlat1.x;
            } else {
                u_xlat4.xy = vs_TEXCOORD6.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat4.xy = floor(u_xlat4.xy);
                u_xlat48.xy = vs_TEXCOORD6.xy * _MainLightShadowmapSize.zw + (-u_xlat4.xy);
                u_xlat5 = u_xlat48.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat6 = u_xlat5.xxzz * u_xlat5.xxzz;
                u_xlat7.yw = u_xlat6.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat5.xz = u_xlat6.xz * vec2(0.5, 0.5) + (-u_xlat48.xy);
                u_xlat6.xy = (-u_xlat48.xy) + vec2(1.0, 1.0);
                u_xlat50.xy = min(u_xlat48.xy, vec2(0.0, 0.0));
                u_xlat6.xy = (-u_xlat50.xy) * u_xlat50.xy + u_xlat6.xy;
                u_xlat50.xy = max(u_xlat48.xy, vec2(0.0, 0.0));
                u_xlat27.xz = (-u_xlat50.xy) * u_xlat50.xy + u_xlat5.yw;
                u_xlat6.xy = u_xlat6.xy + vec2(2.0, 2.0);
                u_xlat5.yw = u_xlat27.xz + vec2(2.0, 2.0);
                u_xlat8.z = u_xlat5.y * 0.0816320032;
                u_xlat9.xyz = u_xlat5.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                u_xlat5.xy = u_xlat6.xy * vec2(0.0816320032, 0.0816320032);
                u_xlat8.x = u_xlat9.y;
                u_xlat8.yw = u_xlat48.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat6.xz = u_xlat48.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat6.y = u_xlat5.x;
                u_xlat6.w = u_xlat7.y;
                u_xlat8 = u_xlat6 + u_xlat8;
                u_xlat9.yw = u_xlat48.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat7.xz = u_xlat48.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat7.y = u_xlat5.y;
                u_xlat5 = u_xlat7 + u_xlat9;
                u_xlat6 = u_xlat6 / u_xlat8;
                u_xlat6 = u_xlat6 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat7 = u_xlat7 / u_xlat5;
                u_xlat7 = u_xlat7 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat6 = u_xlat6.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat7 = u_xlat7.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat9.xzw = u_xlat6.yzw;
                u_xlat9.y = u_xlat7.x;
                u_xlat10 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat48.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat9.wy;
                u_xlat6.y = u_xlat9.y;
                u_xlat9.y = u_xlat7.z;
                u_xlat11 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat12.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat9.wy;
                u_xlat6.z = u_xlat9.y;
                u_xlat13 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat6.xyxz;
                u_xlat9.y = u_xlat7.w;
                u_xlat14 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat28.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat9.wy;
                u_xlat6.w = u_xlat9.y;
                u_xlat56.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat6.xw;
                u_xlat7.xzw = u_xlat9.xzw;
                u_xlat9 = u_xlat4.xyxy * _MainLightShadowmapSize.xyxy + u_xlat7.xyzy;
                u_xlat51.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat7.wy;
                u_xlat7.x = u_xlat6.x;
                u_xlat4.xy = u_xlat4.xy * _MainLightShadowmapSize.xy + u_xlat7.xy;
                u_xlat15 = u_xlat5.xxxx * u_xlat8;
                u_xlat16 = u_xlat5.yyyy * u_xlat8;
                u_xlat17 = u_xlat5.zzzz * u_xlat8;
                u_xlat5 = u_xlat5.wwww * u_xlat8;
                vec3 txVec13 = vec3(u_xlat10.xy,vs_TEXCOORD6.z);
                u_xlat66 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec13, 0.0);
                vec3 txVec14 = vec3(u_xlat10.zw,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec14, 0.0);
                u_xlat1.x = u_xlat1.x * u_xlat15.y;
                u_xlat66 = u_xlat15.x * u_xlat66 + u_xlat1.x;
                vec3 txVec15 = vec3(u_xlat48.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec15, 0.0);
                u_xlat66 = u_xlat15.z * u_xlat1.x + u_xlat66;
                vec3 txVec16 = vec3(u_xlat13.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec16, 0.0);
                u_xlat66 = u_xlat15.w * u_xlat1.x + u_xlat66;
                vec3 txVec17 = vec3(u_xlat11.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec17, 0.0);
                u_xlat66 = u_xlat16.x * u_xlat1.x + u_xlat66;
                vec3 txVec18 = vec3(u_xlat11.zw,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec18, 0.0);
                u_xlat66 = u_xlat16.y * u_xlat1.x + u_xlat66;
                vec3 txVec19 = vec3(u_xlat12.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec19, 0.0);
                u_xlat66 = u_xlat16.z * u_xlat1.x + u_xlat66;
                vec3 txVec20 = vec3(u_xlat13.zw,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec20, 0.0);
                u_xlat66 = u_xlat16.w * u_xlat1.x + u_xlat66;
                vec3 txVec21 = vec3(u_xlat14.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec21, 0.0);
                u_xlat66 = u_xlat17.x * u_xlat1.x + u_xlat66;
                vec3 txVec22 = vec3(u_xlat14.zw,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec22, 0.0);
                u_xlat66 = u_xlat17.y * u_xlat1.x + u_xlat66;
                vec3 txVec23 = vec3(u_xlat28.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec23, 0.0);
                u_xlat66 = u_xlat17.z * u_xlat1.x + u_xlat66;
                vec3 txVec24 = vec3(u_xlat56.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec24, 0.0);
                u_xlat66 = u_xlat17.w * u_xlat1.x + u_xlat66;
                vec3 txVec25 = vec3(u_xlat9.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec25, 0.0);
                u_xlat66 = u_xlat5.x * u_xlat1.x + u_xlat66;
                vec3 txVec26 = vec3(u_xlat9.zw,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec26, 0.0);
                u_xlat66 = u_xlat5.y * u_xlat1.x + u_xlat66;
                vec3 txVec27 = vec3(u_xlat51.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec27, 0.0);
                u_xlat66 = u_xlat5.z * u_xlat1.x + u_xlat66;
                vec3 txVec28 = vec3(u_xlat4.xy,vs_TEXCOORD6.z);
                u_xlat1.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec28, 0.0);
                u_xlat22 = u_xlat5.w * u_xlat1.x + u_xlat66;
            }
        }
    } else {
        vec3 txVec29 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
        u_xlat22 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec29, 0.0);
    }
    u_xlat66 = (-_MainLightShadowParams.x) + 1.0;
    u_xlat22 = u_xlat22 * _MainLightShadowParams.x + u_xlat66;
    u_xlatb66 = 0.0>=vs_TEXCOORD6.z;
    u_xlatb1 = vs_TEXCOORD6.z>=1.0;
    u_xlatb66 = u_xlatb66 || u_xlatb1;
    u_xlat22 = (u_xlatb66) ? 1.0 : u_xlat22;
    u_xlat4.xyz = vs_TEXCOORD1.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat66 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat1.x = u_xlat66 * _MainLightShadowParams.z + _MainLightShadowParams.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat68 = (-u_xlat22) + 1.0;
    u_xlat22 = u_xlat1.x * u_xlat68 + u_xlat22;
    u_xlat22 = u_xlat22 * unity_LightData.z;
    u_xlat4.xyz = vec3(u_xlat22) * _MainLightColor.xyz;
    u_xlat22 = dot(u_xlat2.xyz, _MainLightPosition.xyz);
    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
    u_xlat4.xyz = vec3(u_xlat22) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat1.yzw * u_xlat4.xyz;
    u_xlat22 = min(_AdditionalLightsCount.x, unity_LightData.y);
    u_xlatu22 =  uint(int(u_xlat22));
    u_xlat66 = u_xlat66 * _AdditionalShadowFadeParams.x + _AdditionalShadowFadeParams.y;
    u_xlat66 = clamp(u_xlat66, 0.0, 1.0);
    u_xlat5.x = float(0.0);
    u_xlat5.y = float(0.0);
    u_xlat5.z = float(0.0);
    for(uint u_xlatu_loop_1 = 0u ; u_xlatu_loop_1<u_xlatu22 ; u_xlatu_loop_1++)
    {
        u_xlatu68 = u_xlatu_loop_1 >> (2u & uint(0x1F));
        u_xlati69 = int(u_xlatu_loop_1 & 3u);
        u_xlat68 = dot(unity_LightIndices[int(u_xlatu68)], uintBitsToFloat(ImmCB_0[u_xlati69]));
        u_xlati68 = int(u_xlat68);
        u_xlat6.xyz = (-vs_TEXCOORD1.xyz) * _AdditionalLightsPosition[u_xlati68].www + _AdditionalLightsPosition[u_xlati68].xyz;
        u_xlat69 = dot(u_xlat6.xyz, u_xlat6.xyz);
        u_xlat69 = max(u_xlat69, 6.10351562e-05);
        u_xlat70 = inversesqrt(u_xlat69);
        u_xlat6.xyz = vec3(u_xlat70) * u_xlat6.xyz;
        u_xlat70 = float(1.0) / float(u_xlat69);
        u_xlat69 = u_xlat69 * _AdditionalLightsAttenuation[u_xlati68].x;
        u_xlat69 = (-u_xlat69) * u_xlat69 + 1.0;
        u_xlat69 = max(u_xlat69, 0.0);
        u_xlat69 = u_xlat69 * u_xlat69;
        u_xlat69 = u_xlat69 * u_xlat70;
        u_xlat70 = dot(_AdditionalLightsSpotDir[u_xlati68].xyz, u_xlat6.xyz);
        u_xlat70 = u_xlat70 * _AdditionalLightsAttenuation[u_xlati68].z + _AdditionalLightsAttenuation[u_xlati68].w;
        u_xlat70 = clamp(u_xlat70, 0.0, 1.0);
        u_xlat70 = u_xlat70 * u_xlat70;
        u_xlat69 = u_xlat69 * u_xlat70;
        u_xlati70 = int(_AdditionalShadowParams[u_xlati68].w);
        u_xlatb71 = u_xlati70>=0;
        if(u_xlatb71){
            u_xlatb71 = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_AdditionalShadowParams[u_xlati68].z);
            if(u_xlatb71){
                u_xlatb7.xyz = greaterThanEqual(abs(u_xlat6.zzyz), abs(u_xlat6.xyxx)).xyz;
                u_xlatb71 = u_xlatb7.y && u_xlatb7.x;
                u_xlatb7.xyw = lessThan((-u_xlat6.zyzx), vec4(0.0, 0.0, 0.0, 0.0)).xyw;
                u_xlat7.x = (u_xlatb7.x) ? float(5.0) : float(4.0);
                u_xlat7.y = (u_xlatb7.y) ? float(3.0) : float(2.0);
                u_xlat72 = u_xlatb7.w ? 1.0 : float(0.0);
                u_xlat72 = (u_xlatb7.z) ? u_xlat7.y : u_xlat72;
                u_xlat71 = (u_xlatb71) ? u_xlat7.x : u_xlat72;
                u_xlat72 = trunc(_AdditionalShadowParams[u_xlati68].w);
                u_xlat71 = u_xlat71 + u_xlat72;
                u_xlati70 = int(u_xlat71);
            }
            u_xlati70 = u_xlati70 << (2 & int(0x1F));
            u_xlat7 = vs_TEXCOORD1.yyyy * _AdditionalLightsWorldToShadow[(u_xlati70 + 1) / 4][(u_xlati70 + 1) % 4];
            u_xlat7 = _AdditionalLightsWorldToShadow[u_xlati70 / 4][u_xlati70 % 4] * vs_TEXCOORD1.xxxx + u_xlat7;
            u_xlat7 = _AdditionalLightsWorldToShadow[(u_xlati70 + 2) / 4][(u_xlati70 + 2) % 4] * vs_TEXCOORD1.zzzz + u_xlat7;
            u_xlat7 = u_xlat7 + _AdditionalLightsWorldToShadow[(u_xlati70 + 3) / 4][(u_xlati70 + 3) % 4];
            u_xlat7.xyz = u_xlat7.xyz / u_xlat7.www;
            u_xlatb70 = 0.0<_AdditionalShadowParams[u_xlati68].y;
            if(u_xlatb70){
                u_xlatb70 = 1.0==_AdditionalShadowParams[u_xlati68].y;
                if(u_xlatb70){
                    u_xlat8 = u_xlat7.xyxy + _AdditionalShadowOffset0;
                    vec3 txVec30 = vec3(u_xlat8.xy,u_xlat7.z);
                    u_xlat9.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec30, 0.0);
                    vec3 txVec31 = vec3(u_xlat8.zw,u_xlat7.z);
                    u_xlat9.y = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec31, 0.0);
                    u_xlat8 = u_xlat7.xyxy + _AdditionalShadowOffset1;
                    vec3 txVec32 = vec3(u_xlat8.xy,u_xlat7.z);
                    u_xlat9.z = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec32, 0.0);
                    vec3 txVec33 = vec3(u_xlat8.zw,u_xlat7.z);
                    u_xlat9.w = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec33, 0.0);
                    u_xlat70 = dot(u_xlat9, vec4(0.25, 0.25, 0.25, 0.25));
                } else {
                    u_xlatb71 = 2.0==_AdditionalShadowParams[u_xlati68].y;
                    if(u_xlatb71){
                        u_xlat8.xy = u_xlat7.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat8.xy = floor(u_xlat8.xy);
                        u_xlat52.xy = u_xlat7.xy * _AdditionalShadowmapSize.zw + (-u_xlat8.xy);
                        u_xlat9 = u_xlat52.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat10 = u_xlat9.xxzz * u_xlat9.xxzz;
                        u_xlat9.xz = u_xlat10.yw * vec2(0.0799999982, 0.0799999982);
                        u_xlat10.xy = u_xlat10.xz * vec2(0.5, 0.5) + (-u_xlat52.xy);
                        u_xlat54.xy = (-u_xlat52.xy) + vec2(1.0, 1.0);
                        u_xlat11.xy = min(u_xlat52.xy, vec2(0.0, 0.0));
                        u_xlat11.xy = (-u_xlat11.xy) * u_xlat11.xy + u_xlat54.xy;
                        u_xlat52.xy = max(u_xlat52.xy, vec2(0.0, 0.0));
                        u_xlat52.xy = (-u_xlat52.xy) * u_xlat52.xy + u_xlat9.yw;
                        u_xlat11.xy = u_xlat11.xy + vec2(1.0, 1.0);
                        u_xlat52.xy = u_xlat52.xy + vec2(1.0, 1.0);
                        u_xlat12.xy = u_xlat10.xy * vec2(0.159999996, 0.159999996);
                        u_xlat10.xy = u_xlat54.xy * vec2(0.159999996, 0.159999996);
                        u_xlat11.xy = u_xlat11.xy * vec2(0.159999996, 0.159999996);
                        u_xlat13.xy = u_xlat52.xy * vec2(0.159999996, 0.159999996);
                        u_xlat52.xy = u_xlat9.yw * vec2(0.159999996, 0.159999996);
                        u_xlat12.z = u_xlat11.x;
                        u_xlat12.w = u_xlat52.x;
                        u_xlat10.z = u_xlat13.x;
                        u_xlat10.w = u_xlat9.x;
                        u_xlat14 = u_xlat10.zwxz + u_xlat12.zwxz;
                        u_xlat11.z = u_xlat12.y;
                        u_xlat11.w = u_xlat52.y;
                        u_xlat13.z = u_xlat10.y;
                        u_xlat13.w = u_xlat9.z;
                        u_xlat9.xyz = u_xlat11.zyw + u_xlat13.zyw;
                        u_xlat10.xyz = u_xlat10.xzw / u_xlat14.zwy;
                        u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat11.xyz = u_xlat13.zyw / u_xlat9.xyz;
                        u_xlat11.xyz = u_xlat11.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat10.xyz = u_xlat10.yxz * _AdditionalShadowmapSize.xxx;
                        u_xlat11.xyz = u_xlat11.xyz * _AdditionalShadowmapSize.yyy;
                        u_xlat10.w = u_xlat11.x;
                        u_xlat12 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat10.ywxw;
                        u_xlat52.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat10.zw;
                        u_xlat11.w = u_xlat10.y;
                        u_xlat10.yw = u_xlat11.yz;
                        u_xlat13 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat10.xyzy;
                        u_xlat11 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat11.wywz;
                        u_xlat10 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat10.xwzw;
                        u_xlat15 = u_xlat9.xxxy * u_xlat14.zwyz;
                        u_xlat16 = u_xlat9.yyzz * u_xlat14;
                        u_xlat71 = u_xlat9.z * u_xlat14.y;
                        vec3 txVec34 = vec3(u_xlat12.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec34, 0.0);
                        vec3 txVec35 = vec3(u_xlat12.zw,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec35, 0.0);
                        u_xlat73 = u_xlat73 * u_xlat15.y;
                        u_xlat72 = u_xlat15.x * u_xlat72 + u_xlat73;
                        vec3 txVec36 = vec3(u_xlat52.xy,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec36, 0.0);
                        u_xlat72 = u_xlat15.z * u_xlat73 + u_xlat72;
                        vec3 txVec37 = vec3(u_xlat11.xy,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec37, 0.0);
                        u_xlat72 = u_xlat15.w * u_xlat73 + u_xlat72;
                        vec3 txVec38 = vec3(u_xlat13.xy,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec38, 0.0);
                        u_xlat72 = u_xlat16.x * u_xlat73 + u_xlat72;
                        vec3 txVec39 = vec3(u_xlat13.zw,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec39, 0.0);
                        u_xlat72 = u_xlat16.y * u_xlat73 + u_xlat72;
                        vec3 txVec40 = vec3(u_xlat11.zw,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec40, 0.0);
                        u_xlat72 = u_xlat16.z * u_xlat73 + u_xlat72;
                        vec3 txVec41 = vec3(u_xlat10.xy,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec41, 0.0);
                        u_xlat72 = u_xlat16.w * u_xlat73 + u_xlat72;
                        vec3 txVec42 = vec3(u_xlat10.zw,u_xlat7.z);
                        u_xlat73 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec42, 0.0);
                        u_xlat70 = u_xlat71 * u_xlat73 + u_xlat72;
                    } else {
                        u_xlat8.xy = u_xlat7.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat8.xy = floor(u_xlat8.xy);
                        u_xlat52.xy = u_xlat7.xy * _AdditionalShadowmapSize.zw + (-u_xlat8.xy);
                        u_xlat9 = u_xlat52.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat10 = u_xlat9.xxzz * u_xlat9.xxzz;
                        u_xlat11.yw = u_xlat10.yw * vec2(0.0408160016, 0.0408160016);
                        u_xlat9.xz = u_xlat10.xz * vec2(0.5, 0.5) + (-u_xlat52.xy);
                        u_xlat10.xy = (-u_xlat52.xy) + vec2(1.0, 1.0);
                        u_xlat54.xy = min(u_xlat52.xy, vec2(0.0, 0.0));
                        u_xlat10.xy = (-u_xlat54.xy) * u_xlat54.xy + u_xlat10.xy;
                        u_xlat54.xy = max(u_xlat52.xy, vec2(0.0, 0.0));
                        u_xlat31.xz = (-u_xlat54.xy) * u_xlat54.xy + u_xlat9.yw;
                        u_xlat10.xy = u_xlat10.xy + vec2(2.0, 2.0);
                        u_xlat9.yw = u_xlat31.xz + vec2(2.0, 2.0);
                        u_xlat12.z = u_xlat9.y * 0.0816320032;
                        u_xlat13.xyz = u_xlat9.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                        u_xlat9.xy = u_xlat10.xy * vec2(0.0816320032, 0.0816320032);
                        u_xlat12.x = u_xlat13.y;
                        u_xlat12.yw = u_xlat52.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat10.xz = u_xlat52.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat10.y = u_xlat9.x;
                        u_xlat10.w = u_xlat11.y;
                        u_xlat12 = u_xlat10 + u_xlat12;
                        u_xlat13.yw = u_xlat52.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat11.xz = u_xlat52.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat11.y = u_xlat9.y;
                        u_xlat9 = u_xlat11 + u_xlat13;
                        u_xlat10 = u_xlat10 / u_xlat12;
                        u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat11 = u_xlat11 / u_xlat9;
                        u_xlat11 = u_xlat11 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat10 = u_xlat10.wxyz * _AdditionalShadowmapSize.xxxx;
                        u_xlat11 = u_xlat11.xwyz * _AdditionalShadowmapSize.yyyy;
                        u_xlat13.xzw = u_xlat10.yzw;
                        u_xlat13.y = u_xlat11.x;
                        u_xlat14 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xyzy;
                        u_xlat52.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat13.wy;
                        u_xlat10.y = u_xlat13.y;
                        u_xlat13.y = u_xlat11.z;
                        u_xlat15 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xyzy;
                        u_xlat16.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat13.wy;
                        u_xlat10.z = u_xlat13.y;
                        u_xlat17 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat10.xyxz;
                        u_xlat13.y = u_xlat11.w;
                        u_xlat18 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xyzy;
                        u_xlat32.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat13.wy;
                        u_xlat10.w = u_xlat13.y;
                        u_xlat60.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat10.xw;
                        u_xlat11.xzw = u_xlat13.xzw;
                        u_xlat13 = u_xlat8.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat11.xyzy;
                        u_xlat55.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat11.wy;
                        u_xlat11.x = u_xlat10.x;
                        u_xlat8.xy = u_xlat8.xy * _AdditionalShadowmapSize.xy + u_xlat11.xy;
                        u_xlat19 = u_xlat9.xxxx * u_xlat12;
                        u_xlat20 = u_xlat9.yyyy * u_xlat12;
                        u_xlat21 = u_xlat9.zzzz * u_xlat12;
                        u_xlat9 = u_xlat9.wwww * u_xlat12;
                        vec3 txVec43 = vec3(u_xlat14.xy,u_xlat7.z);
                        u_xlat71 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec43, 0.0);
                        vec3 txVec44 = vec3(u_xlat14.zw,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec44, 0.0);
                        u_xlat72 = u_xlat72 * u_xlat19.y;
                        u_xlat71 = u_xlat19.x * u_xlat71 + u_xlat72;
                        vec3 txVec45 = vec3(u_xlat52.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec45, 0.0);
                        u_xlat71 = u_xlat19.z * u_xlat72 + u_xlat71;
                        vec3 txVec46 = vec3(u_xlat17.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec46, 0.0);
                        u_xlat71 = u_xlat19.w * u_xlat72 + u_xlat71;
                        vec3 txVec47 = vec3(u_xlat15.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec47, 0.0);
                        u_xlat71 = u_xlat20.x * u_xlat72 + u_xlat71;
                        vec3 txVec48 = vec3(u_xlat15.zw,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec48, 0.0);
                        u_xlat71 = u_xlat20.y * u_xlat72 + u_xlat71;
                        vec3 txVec49 = vec3(u_xlat16.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec49, 0.0);
                        u_xlat71 = u_xlat20.z * u_xlat72 + u_xlat71;
                        vec3 txVec50 = vec3(u_xlat17.zw,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec50, 0.0);
                        u_xlat71 = u_xlat20.w * u_xlat72 + u_xlat71;
                        vec3 txVec51 = vec3(u_xlat18.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec51, 0.0);
                        u_xlat71 = u_xlat21.x * u_xlat72 + u_xlat71;
                        vec3 txVec52 = vec3(u_xlat18.zw,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec52, 0.0);
                        u_xlat71 = u_xlat21.y * u_xlat72 + u_xlat71;
                        vec3 txVec53 = vec3(u_xlat32.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec53, 0.0);
                        u_xlat71 = u_xlat21.z * u_xlat72 + u_xlat71;
                        vec3 txVec54 = vec3(u_xlat60.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec54, 0.0);
                        u_xlat71 = u_xlat21.w * u_xlat72 + u_xlat71;
                        vec3 txVec55 = vec3(u_xlat13.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec55, 0.0);
                        u_xlat71 = u_xlat9.x * u_xlat72 + u_xlat71;
                        vec3 txVec56 = vec3(u_xlat13.zw,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec56, 0.0);
                        u_xlat71 = u_xlat9.y * u_xlat72 + u_xlat71;
                        vec3 txVec57 = vec3(u_xlat55.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec57, 0.0);
                        u_xlat71 = u_xlat9.z * u_xlat72 + u_xlat71;
                        vec3 txVec58 = vec3(u_xlat8.xy,u_xlat7.z);
                        u_xlat72 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec58, 0.0);
                        u_xlat70 = u_xlat9.w * u_xlat72 + u_xlat71;
                    }
                }
            } else {
                vec3 txVec59 = vec3(u_xlat7.xy,u_xlat7.z);
                u_xlat70 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec59, 0.0);
            }
            u_xlat71 = 1.0 + (-_AdditionalShadowParams[u_xlati68].x);
            u_xlat70 = u_xlat70 * _AdditionalShadowParams[u_xlati68].x + u_xlat71;
            u_xlatb71 = 0.0>=u_xlat7.z;
            u_xlatb72 = u_xlat7.z>=1.0;
            u_xlatb71 = u_xlatb71 || u_xlatb72;
            u_xlat70 = (u_xlatb71) ? 1.0 : u_xlat70;
        } else {
            u_xlat70 = 1.0;
        }
        u_xlat71 = (-u_xlat70) + 1.0;
        u_xlat70 = u_xlat66 * u_xlat71 + u_xlat70;
        u_xlat69 = u_xlat69 * u_xlat70;
        u_xlat7.xyz = vec3(u_xlat69) * _AdditionalLightsColor[u_xlati68].xyz;
        u_xlat68 = dot(u_xlat2.xyz, u_xlat6.xyz);
        u_xlat68 = clamp(u_xlat68, 0.0, 1.0);
        u_xlat6.xyz = vec3(u_xlat68) * u_xlat7.xyz;
        u_xlat5.xyz = u_xlat6.xyz * u_xlat1.yzw + u_xlat5.xyz;
    }
    u_xlat1.xyz = u_xlat3.xyz * u_xlat1.yzw + u_xlat4.xyz;
    SV_Target0.xyz = u_xlat5.xyz + u_xlat1.xyz;
    u_xlatb22 = _Surface==1.0;
    u_xlatb22 = u_xlatb22 || u_xlatb44;
    SV_Target0.w = (u_xlatb22) ? u_xlat0.x : 1.0;
    return;
}


#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
const uvec4 ImmCB_0[] = uvec4[4] (
	uvec4(0x3F800000, 0x0, 0x0, 0x0),
	uvec4(0x0, 0x3F800000, 0x0, 0x0),
	uvec4(0x0, 0x0, 0x3F800000, 0x0),
	uvec4(0x0, 0x0, 0x0, 0x3F800000));
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec4 _ScaledScreenParams;
	vec2 _GlobalMipBias;
	vec4 _MainLightPosition;
	vec4 _MainLightColor;
	vec4 _AmbientOcclusionParam;
	vec4 _AdditionalLightsCount;
	uint _RenderingLayerMaxInt;
	float _RenderingLayerRcpMaxInt;
	vec3 _WorldSpaceCameraPos;
	vec4 _ProjectionParams;
	vec4 unity_OrthoParams;
	vec4 _ScaleBiasRt;
	vec4 unity_FogParams;
	vec4 unity_FogColor;
	mat4x4 unity_MatrixV;
};
layout(set = 1, binding = 1, std140) uniform AdditionalLights {
	vec4 _AdditionalLightsPosition[256];
	vec4 _AdditionalLightsColor[256];
	vec4 _AdditionalLightsAttenuation[256];
	vec4 _AdditionalLightsSpotDir[256];
	vec4 _AdditionalLightsOcclusionProbes[256];
	float _AdditionalLightsLayerMasks[256];
};
layout(set = 1, binding = 2, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 3, std140) uniform MainLightShadows {
	mat4x4 _MainLightWorldToShadow[5];
	vec4 _CascadeShadowSplitSpheres0;
	vec4 _CascadeShadowSplitSpheres1;
	vec4 _CascadeShadowSplitSpheres2;
	vec4 _CascadeShadowSplitSpheres3;
	vec4 _CascadeShadowSplitSphereRadii;
	vec4 _MainLightShadowOffset0;
	vec4 _MainLightShadowOffset1;
	vec4 _MainLightShadowParams;
	vec4 _MainLightShadowmapSize;
};
layout(set = 1, binding = 4, std140) uniform UnityPerMaterial {
	vec4 _MainTex_TexelSize;
	vec4 _MRLL_TexelSize;
	vec4 _BumpMap_TexelSize;
	vec4 _Color1;
	vec4 _Color2;
};
layout(set = 0, binding = 0) uniform mediump textureCube unity_SpecCube0;
layout(set = 0, binding = 1) uniform mediump texture2D unity_Lightmap;
layout(set = 0, binding = 2) uniform mediump texture2D _ScreenSpaceOcclusionTexture;
layout(set = 0, binding = 3) uniform mediump texture2D _MainLightShadowmapTexture;
layout(set = 0, binding = 4) uniform mediump texture2D _MainTex;
layout(set = 0, binding = 5) uniform mediump texture2D _MRLL;
layout(set = 0, binding = 6) uniform mediump texture2D _BumpMap;
layout(location = 0) in highp vec3 vs_INTERP0;
layout(location = 1) in highp vec3 vs_INTERP1;
layout(location = 2) in highp vec4 vs_INTERP2;
layout(location = 3) in highp vec4 vs_INTERP3;
layout(location = 4) in highp vec2 vs_INTERP4;
layout(location = 5) in highp vec4 vs_INTERP8;
layout(location = 0) out highp vec4 SV_Target0;
layout(location = 1) out highp vec4 SV_Target1;
layout(set = 0, binding = 7) uniform mediump  sampler samplerunity_SpecCube0;
layout(set = 0, binding = 8) uniform mediump  sampler samplerunity_Lightmap;
layout(set = 0, binding = 9) uniform mediump  sampler sampler_ScreenSpaceOcclusionTexture;
layout(set = 0, binding = 10) uniform mediump  samplerShadow sampler_MainLightShadowmapTexture;
layout(set = 0, binding = 11) uniform mediump  sampler samplerSamplerState_Trilinear_Clamp;
void main()
{
vec4 u_xlat0;
uint u_xlatu0;
vec4 u_xlat1;
vec3 u_xlat2;
vec3 u_xlat3;
vec3 u_xlat4;
bvec3 u_xlatb4;
vec3 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
vec4 u_xlat12;
vec4 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec2 u_xlat17;
vec4 u_xlat18;
vec4 u_xlat19;
vec4 u_xlat20;
vec2 u_xlat21;
bool u_xlatb21;
vec3 u_xlat22;
bvec3 u_xlatb22;
vec3 u_xlat26;
bool u_xlatb26;
vec2 u_xlat29;
float u_xlat42;
uint u_xlatu42;
float u_xlat43;
float u_xlat47;
bool u_xlatb47;
vec2 u_xlat49;
vec2 u_xlat51;
vec2 u_xlat52;
vec2 u_xlat55;
float u_xlat63;
float u_xlat65;
uint u_xlatu65;
float u_xlat66;
float u_xlat67;
int u_xlati67;
uint u_xlatu67;
bool u_xlatb67;
float u_xlat68;
float u_xlat69;
int u_xlati69;
float u_xlat70;
float u_xlat71;
vec4 hlslcc_FragCoord = vec4(gl_FragCoord.xyz, 1.0/gl_FragCoord.w);
    u_xlat0 = texture(sampler2D(_MainTex, samplerSamplerState_Trilinear_Clamp), vs_INTERP3.xy, _GlobalMipBias.x);
    u_xlat1 = texture(sampler2D(_MRLL, samplerSamplerState_Trilinear_Clamp), vs_INTERP3.xy, _GlobalMipBias.x);
    u_xlat2.xyz = u_xlat1.www * _Color2.xyz;
    u_xlat2.xyz = _Color1.xyz * u_xlat1.zzz + u_xlat2.xyz;
    u_xlat43 = u_xlat1.w + u_xlat1.z;
    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
    u_xlat3.xyz = (-u_xlat0.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat3.xyz = u_xlat3.xyz + u_xlat3.xyz;
    u_xlat4.xyz = (-u_xlat2.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat3.xyz = (-u_xlat3.xyz) * u_xlat4.xyz + vec3(1.0, 1.0, 1.0);
    u_xlat4.xyz = u_xlat0.xyz + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat4.xyz;
    u_xlatb4.xyz = greaterThanEqual(vec4(0.5, 0.5, 0.5, 0.0), u_xlat0.xyzx).xyz;
    u_xlat5.x = u_xlatb4.x ? float(1.0) : 0.0;
    u_xlat5.y = u_xlatb4.y ? float(1.0) : 0.0;
    u_xlat5.z = u_xlatb4.z ? float(1.0) : 0.0;
;
    u_xlat4.x = (u_xlatb4.x) ? float(0.0) : float(1.0);
    u_xlat4.y = (u_xlatb4.y) ? float(0.0) : float(1.0);
    u_xlat4.z = (u_xlatb4.z) ? float(0.0) : float(1.0);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat4.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat5.xyz + u_xlat3.xyz;
    u_xlat2.xyz = (-u_xlat0.xyz) + u_xlat2.xyz;
    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat0.x + -0.150000006;
    u_xlat0.x = ceil(u_xlat0.x);
    u_xlat0.x = (-u_xlat0.x) + 1.0;
    u_xlat2.xyz = u_xlat0.xxx * vec3(0.400000006, 0.400000006, 0.400000006) + u_xlat2.xyz;
    u_xlat3.xyz = texture(sampler2D(_BumpMap, samplerSamplerState_Trilinear_Clamp), vs_INTERP3.xy, _GlobalMipBias.x).xyw;
    u_xlat3.x = u_xlat3.x * u_xlat3.z;
    u_xlat21.xy = u_xlat3.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
    u_xlat43 = dot(u_xlat21.xy, u_xlat21.xy);
    u_xlat43 = min(u_xlat43, 1.0);
    u_xlat43 = (-u_xlat43) + 1.0;
    u_xlat43 = sqrt(u_xlat43);
    u_xlat43 = max(u_xlat43, 1.00000002e-16);
    u_xlat0.x = u_xlat1.x + u_xlat0.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat1.x = max(u_xlat1.y, 0.0);
    u_xlat1.x = min(u_xlat1.x, 0.850000024);
    u_xlatb22.x = 0.0<vs_INTERP2.w;
    u_xlatb22.z = unity_WorldTransformParams.w>=0.0;
    u_xlat22.x = (u_xlatb22.x) ? float(1.0) : float(-1.0);
    u_xlat22.z = (u_xlatb22.z) ? float(1.0) : float(-1.0);
    u_xlat22.x = u_xlat22.z * u_xlat22.x;
    u_xlat3.xyz = vs_INTERP1.zxy * vs_INTERP2.yzx;
    u_xlat3.xyz = vs_INTERP1.yzx * vs_INTERP2.zxy + (-u_xlat3.xyz);
    u_xlat3.xyz = u_xlat22.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat21.yyy * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat21.xxx * vs_INTERP2.xyz + u_xlat3.xyz;
    u_xlat22.xyz = vec3(u_xlat43) * vs_INTERP1.xyz + u_xlat3.xyz;
    u_xlat21.x = dot(u_xlat22.xyz, u_xlat22.xyz);
    u_xlat21.x = inversesqrt(u_xlat21.x);
    u_xlat22.xyz = u_xlat21.xxx * u_xlat22.xyz;
    u_xlatb21 = unity_OrthoParams.w==0.0;
    u_xlat3.xyz = (-vs_INTERP0.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    u_xlat4.x = unity_MatrixV[0].z;
    u_xlat4.y = unity_MatrixV[1].z;
    u_xlat4.z = unity_MatrixV[2].z;
    u_xlat3.xyz = (bool(u_xlatb21)) ? u_xlat3.xyz : u_xlat4.xyz;
    u_xlat21.x = vs_INTERP0.y * unity_MatrixV[1].z;
    u_xlat21.x = unity_MatrixV[0].z * vs_INTERP0.x + u_xlat21.x;
    u_xlat21.x = unity_MatrixV[2].z * vs_INTERP0.z + u_xlat21.x;
    u_xlat21.x = u_xlat21.x + unity_MatrixV[3].z;
    u_xlat21.x = (-u_xlat21.x) + (-_ProjectionParams.y);
    u_xlat21.x = max(u_xlat21.x, 0.0);
    u_xlat21.x = u_xlat21.x * unity_FogParams.x;
    u_xlat4.xyz = texture(sampler2D(unity_Lightmap, samplerunity_Lightmap), vs_INTERP4.xy, _GlobalMipBias.x).xyz;
    u_xlat5.xy = vec2(1.0) / vec2(_ScaledScreenParams.xy);
    u_xlat5.xy = u_xlat5.xy * hlslcc_FragCoord.xy;
    u_xlat42 = u_xlat5.y * _ScaleBiasRt.x + _ScaleBiasRt.y;
    u_xlat5.z = (-u_xlat42) + 1.0;
    u_xlat42 = (-u_xlat0.x) * 0.959999979 + 0.959999979;
    u_xlat65 = (-u_xlat42) + u_xlat1.x;
    u_xlat6.xyz = vec3(u_xlat42) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);
    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);
    u_xlat0.x = (-u_xlat1.x) + 1.0;
    u_xlat42 = u_xlat0.x * u_xlat0.x;
    u_xlat1.x = u_xlat42 * u_xlat42;
    u_xlat65 = u_xlat65 + 1.0;
    u_xlat65 = min(u_xlat65, 1.0);
    u_xlat66 = u_xlat42 * 4.0 + 2.0;
    u_xlat67 = texture(sampler2D(_ScreenSpaceOcclusionTexture, sampler_ScreenSpaceOcclusionTexture), u_xlat5.xz, _GlobalMipBias.x).x;
    u_xlat5.x = u_xlat67 + -1.0;
    u_xlat5.x = _AmbientOcclusionParam.w * u_xlat5.x + 1.0;
    u_xlat63 = min(u_xlat0.w, u_xlat67);
    u_xlatb67 = 0.0<_MainLightShadowParams.y;
    if(u_xlatb67){
        u_xlatb67 = _MainLightShadowParams.y==1.0;
        if(u_xlatb67){
            u_xlat7 = vs_INTERP8.xyxy + _MainLightShadowOffset0;
            vec3 txVec0 = vec3(u_xlat7.xy,vs_INTERP8.z);
            u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec0, 0.0);
            vec3 txVec1 = vec3(u_xlat7.zw,vs_INTERP8.z);
            u_xlat8.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec1, 0.0);
            u_xlat7 = vs_INTERP8.xyxy + _MainLightShadowOffset1;
            vec3 txVec2 = vec3(u_xlat7.xy,vs_INTERP8.z);
            u_xlat8.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec2, 0.0);
            vec3 txVec3 = vec3(u_xlat7.zw,vs_INTERP8.z);
            u_xlat8.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec3, 0.0);
            u_xlat67 = dot(u_xlat8, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb26 = _MainLightShadowParams.y==2.0;
            if(u_xlatb26){
                u_xlat26.xy = vs_INTERP8.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat26.xy = floor(u_xlat26.xy);
                u_xlat7.xy = vs_INTERP8.xy * _MainLightShadowmapSize.zw + (-u_xlat26.xy);
                u_xlat8 = u_xlat7.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat49.xy = u_xlat9.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat8.xz = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat7.xy);
                u_xlat9.xy = (-u_xlat7.xy) + vec2(1.0, 1.0);
                u_xlat51.xy = min(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat51.xy = (-u_xlat51.xy) * u_xlat51.xy + u_xlat9.xy;
                u_xlat7.xy = max(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat7.xy = (-u_xlat7.xy) * u_xlat7.xy + u_xlat8.yw;
                u_xlat51.xy = u_xlat51.xy + vec2(1.0, 1.0);
                u_xlat7.xy = u_xlat7.xy + vec2(1.0, 1.0);
                u_xlat10.xy = u_xlat8.xz * vec2(0.159999996, 0.159999996);
                u_xlat11.xy = u_xlat9.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat51.xy * vec2(0.159999996, 0.159999996);
                u_xlat12.xy = u_xlat7.xy * vec2(0.159999996, 0.159999996);
                u_xlat7.xy = u_xlat8.yw * vec2(0.159999996, 0.159999996);
                u_xlat10.z = u_xlat9.x;
                u_xlat10.w = u_xlat7.x;
                u_xlat11.z = u_xlat12.x;
                u_xlat11.w = u_xlat49.x;
                u_xlat8 = u_xlat10.zwxz + u_xlat11.zwxz;
                u_xlat9.z = u_xlat10.y;
                u_xlat9.w = u_xlat7.y;
                u_xlat12.z = u_xlat11.y;
                u_xlat12.w = u_xlat49.y;
                u_xlat7.xyz = u_xlat9.zyw + u_xlat12.zyw;
                u_xlat9.xyz = u_xlat11.xzw / u_xlat8.zwy;
                u_xlat9.xyz = u_xlat9.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat10.xyz = u_xlat12.zyw / u_xlat7.xyz;
                u_xlat10.xyz = u_xlat10.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat9.xyz = u_xlat9.yxz * _MainLightShadowmapSize.xxx;
                u_xlat10.xyz = u_xlat10.xyz * _MainLightShadowmapSize.yyy;
                u_xlat9.w = u_xlat10.x;
                u_xlat11 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.ywxw;
                u_xlat12.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat9.zw;
                u_xlat10.w = u_xlat9.y;
                u_xlat9.yw = u_xlat10.yz;
                u_xlat13 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat10 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.wywz;
                u_xlat9 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xwzw;
                u_xlat14 = u_xlat7.xxxy * u_xlat8.zwyz;
                u_xlat15 = u_xlat7.yyzz * u_xlat8;
                u_xlat26.x = u_xlat7.z * u_xlat8.y;
                vec3 txVec4 = vec3(u_xlat11.xy,vs_INTERP8.z);
                u_xlat47 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec4, 0.0);
                vec3 txVec5 = vec3(u_xlat11.zw,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec5, 0.0);
                u_xlat68 = u_xlat68 * u_xlat14.y;
                u_xlat47 = u_xlat14.x * u_xlat47 + u_xlat68;
                vec3 txVec6 = vec3(u_xlat12.xy,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec6, 0.0);
                u_xlat47 = u_xlat14.z * u_xlat68 + u_xlat47;
                vec3 txVec7 = vec3(u_xlat10.xy,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec7, 0.0);
                u_xlat47 = u_xlat14.w * u_xlat68 + u_xlat47;
                vec3 txVec8 = vec3(u_xlat13.xy,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec8, 0.0);
                u_xlat47 = u_xlat15.x * u_xlat68 + u_xlat47;
                vec3 txVec9 = vec3(u_xlat13.zw,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec9, 0.0);
                u_xlat47 = u_xlat15.y * u_xlat68 + u_xlat47;
                vec3 txVec10 = vec3(u_xlat10.zw,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec10, 0.0);
                u_xlat47 = u_xlat15.z * u_xlat68 + u_xlat47;
                vec3 txVec11 = vec3(u_xlat9.xy,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec11, 0.0);
                u_xlat47 = u_xlat15.w * u_xlat68 + u_xlat47;
                vec3 txVec12 = vec3(u_xlat9.zw,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec12, 0.0);
                u_xlat67 = u_xlat26.x * u_xlat68 + u_xlat47;
            } else {
                u_xlat26.xy = vs_INTERP8.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat26.xy = floor(u_xlat26.xy);
                u_xlat7.xy = vs_INTERP8.xy * _MainLightShadowmapSize.zw + (-u_xlat26.xy);
                u_xlat8 = u_xlat7.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat9 = u_xlat8.xxzz * u_xlat8.xxzz;
                u_xlat10.yw = u_xlat9.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat49.xy = u_xlat9.xz * vec2(0.5, 0.5) + (-u_xlat7.xy);
                u_xlat8.xz = (-u_xlat7.xy) + vec2(1.0, 1.0);
                u_xlat9.xy = min(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat8.xz = (-u_xlat9.xy) * u_xlat9.xy + u_xlat8.xz;
                u_xlat9.xy = max(u_xlat7.xy, vec2(0.0, 0.0));
                u_xlat8.yw = (-u_xlat9.xy) * u_xlat9.xy + u_xlat8.yw;
                u_xlat8 = u_xlat8 + vec4(2.0, 2.0, 2.0, 2.0);
                u_xlat9.z = u_xlat8.y * 0.0816320032;
                u_xlat11.xy = u_xlat49.yx * vec2(0.0816320032, 0.0816320032);
                u_xlat49.xy = u_xlat8.xz * vec2(0.0816320032, 0.0816320032);
                u_xlat11.z = u_xlat8.w * 0.0816320032;
                u_xlat9.x = u_xlat11.y;
                u_xlat9.yw = u_xlat7.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat8.xz = u_xlat7.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat8.y = u_xlat49.x;
                u_xlat8.w = u_xlat10.y;
                u_xlat9 = u_xlat8 + u_xlat9;
                u_xlat11.yw = u_xlat7.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat10.xz = u_xlat7.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat10.y = u_xlat49.y;
                u_xlat7 = u_xlat10 + u_xlat11;
                u_xlat8 = u_xlat8 / u_xlat9;
                u_xlat8 = u_xlat8 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat10 = u_xlat10 / u_xlat7;
                u_xlat10 = u_xlat10 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat8 = u_xlat8.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat10 = u_xlat10.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat11.xzw = u_xlat8.yzw;
                u_xlat11.y = u_xlat10.x;
                u_xlat12 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat13.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.y = u_xlat11.y;
                u_xlat11.y = u_xlat10.z;
                u_xlat14 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat55.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.z = u_xlat11.y;
                u_xlat15 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.xyxz;
                u_xlat11.y = u_xlat10.w;
                u_xlat16 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat29.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.w = u_xlat11.y;
                u_xlat17.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat8.xw;
                u_xlat10.xzw = u_xlat11.xzw;
                u_xlat11 = u_xlat26.xyxy * _MainLightShadowmapSize.xyxy + u_xlat10.xyzy;
                u_xlat52.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat10.wy;
                u_xlat10.x = u_xlat8.x;
                u_xlat26.xy = u_xlat26.xy * _MainLightShadowmapSize.xy + u_xlat10.xy;
                u_xlat18 = u_xlat7.xxxx * u_xlat9;
                u_xlat19 = u_xlat7.yyyy * u_xlat9;
                u_xlat20 = u_xlat7.zzzz * u_xlat9;
                u_xlat7 = u_xlat7.wwww * u_xlat9;
                vec3 txVec13 = vec3(u_xlat12.xy,vs_INTERP8.z);
                u_xlat68 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec13, 0.0);
                vec3 txVec14 = vec3(u_xlat12.zw,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec14, 0.0);
                u_xlat69 = u_xlat69 * u_xlat18.y;
                u_xlat68 = u_xlat18.x * u_xlat68 + u_xlat69;
                vec3 txVec15 = vec3(u_xlat13.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec15, 0.0);
                u_xlat68 = u_xlat18.z * u_xlat69 + u_xlat68;
                vec3 txVec16 = vec3(u_xlat15.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec16, 0.0);
                u_xlat68 = u_xlat18.w * u_xlat69 + u_xlat68;
                vec3 txVec17 = vec3(u_xlat14.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec17, 0.0);
                u_xlat68 = u_xlat19.x * u_xlat69 + u_xlat68;
                vec3 txVec18 = vec3(u_xlat14.zw,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec18, 0.0);
                u_xlat68 = u_xlat19.y * u_xlat69 + u_xlat68;
                vec3 txVec19 = vec3(u_xlat55.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec19, 0.0);
                u_xlat68 = u_xlat19.z * u_xlat69 + u_xlat68;
                vec3 txVec20 = vec3(u_xlat15.zw,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec20, 0.0);
                u_xlat68 = u_xlat19.w * u_xlat69 + u_xlat68;
                vec3 txVec21 = vec3(u_xlat16.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec21, 0.0);
                u_xlat68 = u_xlat20.x * u_xlat69 + u_xlat68;
                vec3 txVec22 = vec3(u_xlat16.zw,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec22, 0.0);
                u_xlat68 = u_xlat20.y * u_xlat69 + u_xlat68;
                vec3 txVec23 = vec3(u_xlat29.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec23, 0.0);
                u_xlat68 = u_xlat20.z * u_xlat69 + u_xlat68;
                vec3 txVec24 = vec3(u_xlat17.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec24, 0.0);
                u_xlat68 = u_xlat20.w * u_xlat69 + u_xlat68;
                vec3 txVec25 = vec3(u_xlat11.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec25, 0.0);
                u_xlat68 = u_xlat7.x * u_xlat69 + u_xlat68;
                vec3 txVec26 = vec3(u_xlat11.zw,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec26, 0.0);
                u_xlat68 = u_xlat7.y * u_xlat69 + u_xlat68;
                vec3 txVec27 = vec3(u_xlat52.xy,vs_INTERP8.z);
                u_xlat69 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec27, 0.0);
                u_xlat68 = u_xlat7.z * u_xlat69 + u_xlat68;
                vec3 txVec28 = vec3(u_xlat26.xy,vs_INTERP8.z);
                u_xlat26.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec28, 0.0);
                u_xlat67 = u_xlat7.w * u_xlat26.x + u_xlat68;
            }
        }
    } else {
        vec3 txVec29 = vec3(vs_INTERP8.xy,vs_INTERP8.z);
        u_xlat67 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_MainLightShadowmapTexture), txVec29, 0.0);
    }
    u_xlat26.x = (-_MainLightShadowParams.x) + 1.0;
    u_xlat67 = u_xlat67 * _MainLightShadowParams.x + u_xlat26.x;
    u_xlatb26 = 0.0>=vs_INTERP8.z;
    u_xlatb47 = vs_INTERP8.z>=1.0;
    u_xlatb26 = u_xlatb47 || u_xlatb26;
    u_xlat67 = (u_xlatb26) ? 1.0 : u_xlat67;
    u_xlat26.xyz = vs_INTERP0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat26.x = dot(u_xlat26.xyz, u_xlat26.xyz);
    u_xlat26.x = u_xlat26.x * _MainLightShadowParams.z + _MainLightShadowParams.w;
    u_xlat26.x = clamp(u_xlat26.x, 0.0, 1.0);
    u_xlat47 = (-u_xlat67) + 1.0;
    u_xlat67 = u_xlat26.x * u_xlat47 + u_xlat67;
    u_xlat26.xyz = u_xlat5.xxx * _MainLightColor.xyz;
    u_xlat69 = dot((-u_xlat3.xyz), u_xlat22.xyz);
    u_xlat69 = u_xlat69 + u_xlat69;
    u_xlat7.xyz = u_xlat22.xyz * (-vec3(u_xlat69)) + (-u_xlat3.xyz);
    u_xlat69 = dot(u_xlat22.xyz, u_xlat3.xyz);
    u_xlat69 = clamp(u_xlat69, 0.0, 1.0);
    u_xlat69 = (-u_xlat69) + 1.0;
    u_xlat69 = u_xlat69 * u_xlat69;
    u_xlat69 = u_xlat69 * u_xlat69;
    u_xlat70 = (-u_xlat0.x) * 0.699999988 + 1.70000005;
    u_xlat0.x = u_xlat0.x * u_xlat70;
    u_xlat0.x = u_xlat0.x * 6.0;
    u_xlat7 = textureLod(samplerCube(unity_SpecCube0, samplerunity_SpecCube0), u_xlat7.xyz, u_xlat0.x);
    u_xlat0.x = u_xlat7.w + -1.0;
    u_xlat0.x = unity_SpecCube0_HDR.w * u_xlat0.x + 1.0;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = log2(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * unity_SpecCube0_HDR.y;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * unity_SpecCube0_HDR.x;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat0.xxx;
    u_xlat0.xz = vec2(u_xlat42) * vec2(u_xlat42) + vec2(-1.0, 1.0);
    u_xlat42 = float(1.0) / u_xlat0.z;
    u_xlat8.xyz = (-u_xlat2.xyz) + vec3(u_xlat65);
    u_xlat8.xyz = vec3(u_xlat69) * u_xlat8.xyz + u_xlat2.xyz;
    u_xlat8.xyz = vec3(u_xlat42) * u_xlat8.xyz;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat8.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat6.xyz + u_xlat7.xyz;
    u_xlat42 = u_xlat67 * unity_LightData.z;
    u_xlat65 = dot(u_xlat22.xyz, _MainLightPosition.xyz);
    u_xlat65 = clamp(u_xlat65, 0.0, 1.0);
    u_xlat42 = u_xlat42 * u_xlat65;
    u_xlat26.xyz = vec3(u_xlat42) * u_xlat26.xyz;
    u_xlat7.xyz = u_xlat3.xyz + _MainLightPosition.xyz;
    u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat42 = max(u_xlat42, 1.17549435e-37);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat7.xyz = vec3(u_xlat42) * u_xlat7.xyz;
    u_xlat42 = dot(u_xlat22.xyz, u_xlat7.xyz);
    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
    u_xlat65 = dot(_MainLightPosition.xyz, u_xlat7.xyz);
    u_xlat65 = clamp(u_xlat65, 0.0, 1.0);
    u_xlat42 = u_xlat42 * u_xlat42;
    u_xlat42 = u_xlat42 * u_xlat0.x + 1.00001001;
    u_xlat65 = u_xlat65 * u_xlat65;
    u_xlat42 = u_xlat42 * u_xlat42;
    u_xlat65 = max(u_xlat65, 0.100000001);
    u_xlat42 = u_xlat42 * u_xlat65;
    u_xlat42 = u_xlat66 * u_xlat42;
    u_xlat42 = u_xlat1.x / u_xlat42;
    u_xlat7.xyz = u_xlat2.xyz * vec3(u_xlat42) + u_xlat6.xyz;
    u_xlat26.xyz = u_xlat26.xyz * u_xlat7.xyz;
    u_xlat42 = min(_AdditionalLightsCount.x, unity_LightData.y);
    u_xlatu42 =  uint(int(u_xlat42));
    u_xlat7.x = float(0.0);
    u_xlat7.y = float(0.0);
    u_xlat7.z = float(0.0);
    for(uint u_xlatu_loop_1 = 0u ; u_xlatu_loop_1<u_xlatu42 ; u_xlatu_loop_1++)
    {
        u_xlatu67 = u_xlatu_loop_1 >> (2u & uint(0x1F));
        u_xlati69 = int(u_xlatu_loop_1 & 3u);
        u_xlat67 = dot(unity_LightIndices[int(u_xlatu67)], uintBitsToFloat(ImmCB_0[u_xlati69]));
        u_xlati67 = int(u_xlat67);
        u_xlat8.xyz = (-vs_INTERP0.xyz) * _AdditionalLightsPosition[u_xlati67].www + _AdditionalLightsPosition[u_xlati67].xyz;
        u_xlat69 = dot(u_xlat8.xyz, u_xlat8.xyz);
        u_xlat69 = max(u_xlat69, 6.10351562e-05);
        u_xlat70 = inversesqrt(u_xlat69);
        u_xlat9.xyz = vec3(u_xlat70) * u_xlat8.xyz;
        u_xlat71 = float(1.0) / float(u_xlat69);
        u_xlat69 = u_xlat69 * _AdditionalLightsAttenuation[u_xlati67].x;
        u_xlat69 = (-u_xlat69) * u_xlat69 + 1.0;
        u_xlat69 = max(u_xlat69, 0.0);
        u_xlat69 = u_xlat69 * u_xlat69;
        u_xlat69 = u_xlat69 * u_xlat71;
        u_xlat71 = dot(_AdditionalLightsSpotDir[u_xlati67].xyz, u_xlat9.xyz);
        u_xlat71 = u_xlat71 * _AdditionalLightsAttenuation[u_xlati67].z + _AdditionalLightsAttenuation[u_xlati67].w;
        u_xlat71 = clamp(u_xlat71, 0.0, 1.0);
        u_xlat71 = u_xlat71 * u_xlat71;
        u_xlat69 = u_xlat69 * u_xlat71;
        u_xlat10.xyz = u_xlat5.xxx * _AdditionalLightsColor[u_xlati67].xyz;
        u_xlat67 = dot(u_xlat22.xyz, u_xlat9.xyz);
        u_xlat67 = clamp(u_xlat67, 0.0, 1.0);
        u_xlat67 = u_xlat67 * u_xlat69;
        u_xlat10.xyz = vec3(u_xlat67) * u_xlat10.xyz;
        u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat70) + u_xlat3.xyz;
        u_xlat67 = dot(u_xlat8.xyz, u_xlat8.xyz);
        u_xlat67 = max(u_xlat67, 1.17549435e-37);
        u_xlat67 = inversesqrt(u_xlat67);
        u_xlat8.xyz = vec3(u_xlat67) * u_xlat8.xyz;
        u_xlat67 = dot(u_xlat22.xyz, u_xlat8.xyz);
        u_xlat67 = clamp(u_xlat67, 0.0, 1.0);
        u_xlat69 = dot(u_xlat9.xyz, u_xlat8.xyz);
        u_xlat69 = clamp(u_xlat69, 0.0, 1.0);
        u_xlat67 = u_xlat67 * u_xlat67;
        u_xlat67 = u_xlat67 * u_xlat0.x + 1.00001001;
        u_xlat69 = u_xlat69 * u_xlat69;
        u_xlat67 = u_xlat67 * u_xlat67;
        u_xlat69 = max(u_xlat69, 0.100000001);
        u_xlat67 = u_xlat67 * u_xlat69;
        u_xlat67 = u_xlat66 * u_xlat67;
        u_xlat67 = u_xlat1.x / u_xlat67;
        u_xlat8.xyz = u_xlat2.xyz * vec3(u_xlat67) + u_xlat6.xyz;
        u_xlat7.xyz = u_xlat8.xyz * u_xlat10.xyz + u_xlat7.xyz;
    }
    u_xlat0.xzw = u_xlat4.xyz * vec3(u_xlat63) + u_xlat26.xyz;
    u_xlat0.xzw = u_xlat7.xyz + u_xlat0.xzw;
    u_xlat21.x = u_xlat21.x * (-u_xlat21.x);
    u_xlat21.x = exp2(u_xlat21.x);
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    SV_Target0.xyz = u_xlat21.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlatu0 = _RenderingLayerMaxInt & floatBitsToUint(unity_RenderingLayer.x);
    u_xlat0.x = float(u_xlatu0);
    SV_Target1.x = u_xlat0.x * _RenderingLayerRcpMaxInt;
    SV_Target1.x = clamp(SV_Target1.x, 0.0, 1.0);
    SV_Target0.w = 1.0;
    SV_Target1.yzw = vec3(0.0, 0.0, 0.0);
    return;
}


#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
const uvec4 ImmCB_0[] = uvec4[4] (
	uvec4(0x3F800000, 0x0, 0x0, 0x0),
	uvec4(0x0, 0x3F800000, 0x0, 0x0),
	uvec4(0x0, 0x0, 0x3F800000, 0x0),
	uvec4(0x0, 0x0, 0x0, 0x3F800000));
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec2 _GlobalMipBias;
	vec4 _MainLightPosition;
	vec4 _MainLightColor;
	vec4 _AdditionalLightsCount;
	vec3 _WorldSpaceCameraPos;
	vec4 unity_OrthoParams;
	mat4x4 unity_MatrixV;
};
layout(set = 1, binding = 1, std140) uniform AdditionalLights {
	vec4 _AdditionalLightsPosition[32];
	vec4 _AdditionalLightsColor[32];
	vec4 _AdditionalLightsAttenuation[32];
	vec4 _AdditionalLightsSpotDir[32];
	vec4 _AdditionalLightsOcclusionProbes[32];
	float _AdditionalLightsLayerMasks[32];
};
layout(set = 1, binding = 2, std140) uniform UnityPerDraw {
	mat4x4 unity_ObjectToWorld;
	mat4x4 unity_WorldToObject;
	vec4 unity_LODFade;
	vec4 unity_WorldTransformParams;
	vec4 unity_RenderingLayer;
	vec4 unity_LightData;
	vec4 unity_LightIndices[2];
	vec4 unity_ProbesOcclusion;
	vec4 unity_SpecCube0_HDR;
	vec4 unity_SpecCube1_HDR;
	vec4 unity_SpecCube0_BoxMax;
	vec4 unity_SpecCube0_BoxMin;
	vec4 unity_SpecCube0_ProbePosition;
	vec4 unity_SpecCube1_BoxMax;
	vec4 unity_SpecCube1_BoxMin;
	vec4 unity_SpecCube1_ProbePosition;
	vec4 unity_LightmapST;
	vec4 unity_DynamicLightmapST;
	vec4 unity_SHAr;
	vec4 unity_SHAg;
	vec4 unity_SHAb;
	vec4 unity_SHBr;
	vec4 unity_SHBg;
	vec4 unity_SHBb;
	vec4 unity_SHC;
	vec4 unity_RendererBounds_Min;
	vec4 unity_RendererBounds_Max;
	mat4x4 unity_MatrixPreviousM;
	mat4x4 unity_MatrixPreviousMI;
	vec4 unity_MotionVectorsParams;
	vec4 unity_SpriteColor;
	vec4 unity_SpriteProps;
};
layout(set = 1, binding = 3, std140) uniform LightShadows {
	mat4x4 _MainLightWorldToShadow[5];
	vec4 _CascadeShadowSplitSpheres0;
	vec4 _CascadeShadowSplitSpheres1;
	vec4 _CascadeShadowSplitSpheres2;
	vec4 _CascadeShadowSplitSpheres3;
	vec4 _CascadeShadowSplitSphereRadii;
	vec4 _MainLightShadowOffset0;
	vec4 _MainLightShadowOffset1;
	vec4 _MainLightShadowParams;
	vec4 _MainLightShadowmapSize;
	vec4 _AdditionalShadowOffset0;
	vec4 _AdditionalShadowOffset1;
	vec4 _AdditionalShadowFadeParams;
	vec4 _AdditionalShadowmapSize;
	vec4 _AdditionalShadowParams[32];
	mat4x4 _AdditionalLightsWorldToShadow[32];
};
layout(set = 0, binding = 0) uniform mediump textureCube unity_SpecCube0;
layout(set = 0, binding = 1) uniform mediump texture2D unity_Lightmap;
layout(set = 0, binding = 2) uniform mediump texture2D unity_LightmapInd;
layout(set = 0, binding = 3) uniform mediump texture2D _MainTex;
layout(set = 0, binding = 4) uniform mediump texture2D _MetallicTex;
layout(set = 0, binding = 5) uniform mediump texture2D _MainLightShadowmapTexture;
layout(set = 0, binding = 6) uniform mediump texture2D _AdditionalLightsShadowmapTexture;
layout(location = 0) in highp  vec4 vs_TEXCOORD0;
layout(location = 1) in highp  vec3 vs_TEXCOORD3;
layout(location = 2) in highp  vec3 vs_TEXCOORD7;
layout(location = 0) out highp vec4 SV_Target0;
vec4 u_xlat0;
float u_xlat1;
vec4 u_xlat2;
int u_xlati2;
uint u_xlatu2;
bvec4 u_xlatb2;
vec3 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
vec4 u_xlat6;
bool u_xlatb6;
vec4 u_xlat7;
vec4 u_xlat8;
vec4 u_xlat9;
vec4 u_xlat10;
bvec3 u_xlatb10;
vec4 u_xlat11;
bvec3 u_xlatb11;
vec4 u_xlat12;
vec4 u_xlat13;
vec4 u_xlat14;
vec4 u_xlat15;
vec4 u_xlat16;
vec4 u_xlat17;
vec4 u_xlat18;
vec4 u_xlat19;
vec4 u_xlat20;
vec4 u_xlat21;
vec4 u_xlat22;
vec4 u_xlat23;
vec4 u_xlat24;
vec3 u_xlat26;
bool u_xlatb26;
vec3 u_xlat27;
uint u_xlatu27;
bool u_xlatb27;
float u_xlat31;
vec3 u_xlat32;
vec2 u_xlat33;
vec3 u_xlat35;
bool u_xlatb35;
float u_xlat36;
vec3 u_xlat37;
vec2 u_xlat38;
float u_xlat51;
float u_xlat52;
bool u_xlatb52;
vec2 u_xlat56;
vec2 u_xlat58;
vec2 u_xlat59;
float u_xlat60;
vec2 u_xlat61;
vec2 u_xlat63;
vec2 u_xlat64;
vec2 u_xlat69;
float u_xlat75;
uint u_xlatu75;
float u_xlat77;
float u_xlat78;
float u_xlat79;
float u_xlat80;
int u_xlati80;
uint u_xlatu80;
bool u_xlatb80;
float u_xlat81;
int u_xlati81;
float u_xlat83;
float u_xlat84;
int u_xlati84;
bool u_xlatb84;
float u_xlat85;
bool u_xlatb85;
layout(set = 0, binding = 7) uniform mediump  sampler samplerunity_SpecCube0;
layout(set = 0, binding = 8) uniform mediump  sampler samplerunity_Lightmap;
layout(set = 0, binding = 9) uniform mediump  sampler sampler_MainTex;
layout(set = 0, binding = 10) uniform mediump  sampler sampler_MetallicTex;
layout(set = 0, binding = 11) uniform mediump  samplerShadow sampler_LinearClampCompare;
void main()
{
    u_xlat0 = texture(sampler2D(_MainTex, sampler_MainTex), vs_TEXCOORD0.xy, _GlobalMipBias.x);
    u_xlat1 = texture(sampler2D(_MetallicTex, sampler_MetallicTex), vs_TEXCOORD0.xy, _GlobalMipBias.x).x;
    u_xlatb26 = unity_OrthoParams.w==0.0;
    u_xlat2.xyz = (-vs_TEXCOORD7.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat51 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat51 = inversesqrt(u_xlat51);
    u_xlat2.xyz = vec3(u_xlat51) * u_xlat2.xyz;
    u_xlat3.x = (u_xlatb26) ? u_xlat2.x : unity_MatrixV[0].z;
    u_xlat3.y = (u_xlatb26) ? u_xlat2.y : unity_MatrixV[1].z;
    u_xlat3.z = (u_xlatb26) ? u_xlat2.z : unity_MatrixV[2].z;
    u_xlat26.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);
    u_xlat26.x = inversesqrt(u_xlat26.x);
    u_xlat26.xyz = u_xlat26.xxx * vs_TEXCOORD3.xyz;
    u_xlat2.xyz = vs_TEXCOORD7.xyz + (-_CascadeShadowSplitSpheres0.xyz);
    u_xlat4.xyz = vs_TEXCOORD7.xyz + (-_CascadeShadowSplitSpheres1.xyz);
    u_xlat5.xyz = vs_TEXCOORD7.xyz + (-_CascadeShadowSplitSpheres2.xyz);
    u_xlat6.xyz = vs_TEXCOORD7.xyz + (-_CascadeShadowSplitSpheres3.xyz);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat2.y = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat2.z = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat2.w = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlatb2 = lessThan(u_xlat2, _CascadeShadowSplitSphereRadii);
    u_xlat4.x = u_xlatb2.x ? float(1.0) : 0.0;
    u_xlat4.y = u_xlatb2.y ? float(1.0) : 0.0;
    u_xlat4.z = u_xlatb2.z ? float(1.0) : 0.0;
    u_xlat4.w = u_xlatb2.w ? float(1.0) : 0.0;
;
    u_xlat2.x = (u_xlatb2.x) ? float(-1.0) : float(-0.0);
    u_xlat2.y = (u_xlatb2.y) ? float(-1.0) : float(-0.0);
    u_xlat2.z = (u_xlatb2.z) ? float(-1.0) : float(-0.0);
    u_xlat2.xyz = u_xlat2.xyz + u_xlat4.yzw;
    u_xlat4.yzw = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat2.x = dot(u_xlat4, vec4(4.0, 3.0, 2.0, 1.0));
    u_xlat2.x = (-u_xlat2.x) + 4.0;
    u_xlatu2 = uint(u_xlat2.x);
    u_xlati2 = int(u_xlatu2) << (2 & int(0x1F));
    u_xlat27.xyz = vs_TEXCOORD7.yyy * _MainLightWorldToShadow[(u_xlati2 + 1) / 4][(u_xlati2 + 1) % 4].xyz;
    u_xlat27.xyz = _MainLightWorldToShadow[u_xlati2 / 4][u_xlati2 % 4].xyz * vs_TEXCOORD7.xxx + u_xlat27.xyz;
    u_xlat27.xyz = _MainLightWorldToShadow[(u_xlati2 + 2) / 4][(u_xlati2 + 2) % 4].xyz * vs_TEXCOORD7.zzz + u_xlat27.xyz;
    u_xlat2.xyz = u_xlat27.xyz + _MainLightWorldToShadow[(u_xlati2 + 3) / 4][(u_xlati2 + 3) % 4].xyz;
    u_xlat4 = texture(sampler2D(unity_LightmapInd, samplerunity_Lightmap), vs_TEXCOORD0.zw, _GlobalMipBias.x);
    u_xlat5.xyz = texture(sampler2D(unity_Lightmap, samplerunity_Lightmap), vs_TEXCOORD0.zw, _GlobalMipBias.x).xyz;
    u_xlat4.xyz = u_xlat4.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat77 = dot(u_xlat26.xyz, u_xlat4.xyz);
    u_xlat77 = u_xlat77 + 0.5;
    u_xlat4.xyz = vec3(u_xlat77) * u_xlat5.xyz;
    u_xlat77 = max(u_xlat4.w, 9.99999975e-05);
    u_xlat4.xyz = u_xlat4.xyz / vec3(u_xlat77);
    u_xlat77 = (-u_xlat1) * 0.959999979 + 0.959999979;
    u_xlat78 = (-u_xlat77) + 1.0;
    u_xlat5.xyz = u_xlat0.xyz * vec3(u_xlat77);
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat0.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);
    u_xlat1 = (-u_xlat0.w) + 1.0;
    u_xlat77 = u_xlat1 * u_xlat1;
    u_xlat77 = max(u_xlat77, 0.0078125);
    u_xlat79 = u_xlat77 * u_xlat77;
    u_xlat75 = u_xlat0.w + u_xlat78;
    u_xlat75 = clamp(u_xlat75, 0.0, 1.0);
    u_xlat78 = u_xlat77 * 4.0 + 2.0;
    u_xlatb80 = 0.0<_MainLightShadowParams.y;
    if(u_xlatb80){
        u_xlatb80 = _MainLightShadowParams.y==1.0;
        if(u_xlatb80){
            u_xlat6 = u_xlat2.xyxy + _MainLightShadowOffset0;
            vec3 txVec0 = vec3(u_xlat6.xy,u_xlat2.z);
            u_xlat7.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec0, 0.0);
            vec3 txVec1 = vec3(u_xlat6.zw,u_xlat2.z);
            u_xlat7.y = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec1, 0.0);
            u_xlat6 = u_xlat2.xyxy + _MainLightShadowOffset1;
            vec3 txVec2 = vec3(u_xlat6.xy,u_xlat2.z);
            u_xlat7.z = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec2, 0.0);
            vec3 txVec3 = vec3(u_xlat6.zw,u_xlat2.z);
            u_xlat7.w = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec3, 0.0);
            u_xlat80 = dot(u_xlat7, vec4(0.25, 0.25, 0.25, 0.25));
        } else {
            u_xlatb6 = _MainLightShadowParams.y==2.0;
            if(u_xlatb6){
                u_xlat6.xy = u_xlat2.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat6.xy = floor(u_xlat6.xy);
                u_xlat56.xy = u_xlat2.xy * _MainLightShadowmapSize.zw + (-u_xlat6.xy);
                u_xlat7 = u_xlat56.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat8 = u_xlat7.xxzz * u_xlat7.xxzz;
                u_xlat7.xz = u_xlat8.yw * vec2(0.0799999982, 0.0799999982);
                u_xlat8.xy = u_xlat8.xz * vec2(0.5, 0.5) + (-u_xlat56.xy);
                u_xlat58.xy = (-u_xlat56.xy) + vec2(1.0, 1.0);
                u_xlat9.xy = min(u_xlat56.xy, vec2(0.0, 0.0));
                u_xlat9.xy = (-u_xlat9.xy) * u_xlat9.xy + u_xlat58.xy;
                u_xlat56.xy = max(u_xlat56.xy, vec2(0.0, 0.0));
                u_xlat56.xy = (-u_xlat56.xy) * u_xlat56.xy + u_xlat7.yw;
                u_xlat9.xy = u_xlat9.xy + vec2(1.0, 1.0);
                u_xlat56.xy = u_xlat56.xy + vec2(1.0, 1.0);
                u_xlat10.xy = u_xlat8.xy * vec2(0.159999996, 0.159999996);
                u_xlat8.xy = u_xlat58.xy * vec2(0.159999996, 0.159999996);
                u_xlat9.xy = u_xlat9.xy * vec2(0.159999996, 0.159999996);
                u_xlat11.xy = u_xlat56.xy * vec2(0.159999996, 0.159999996);
                u_xlat56.xy = u_xlat7.yw * vec2(0.159999996, 0.159999996);
                u_xlat10.z = u_xlat9.x;
                u_xlat10.w = u_xlat56.x;
                u_xlat8.z = u_xlat11.x;
                u_xlat8.w = u_xlat7.x;
                u_xlat12 = u_xlat8.zwxz + u_xlat10.zwxz;
                u_xlat9.z = u_xlat10.y;
                u_xlat9.w = u_xlat56.y;
                u_xlat11.z = u_xlat8.y;
                u_xlat11.w = u_xlat7.z;
                u_xlat7.xyz = u_xlat9.zyw + u_xlat11.zyw;
                u_xlat8.xyz = u_xlat8.xzw / u_xlat12.zwy;
                u_xlat8.xyz = u_xlat8.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat9.xyz = u_xlat11.zyw / u_xlat7.xyz;
                u_xlat9.xyz = u_xlat9.xyz + vec3(-2.5, -0.5, 1.5);
                u_xlat8.xyz = u_xlat8.yxz * _MainLightShadowmapSize.xxx;
                u_xlat9.xyz = u_xlat9.xyz * _MainLightShadowmapSize.yyy;
                u_xlat8.w = u_xlat9.x;
                u_xlat10 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.ywxw;
                u_xlat56.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat8.zw;
                u_xlat9.w = u_xlat8.y;
                u_xlat8.yw = u_xlat9.yz;
                u_xlat11 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.xyzy;
                u_xlat9 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.wywz;
                u_xlat8 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.xwzw;
                u_xlat13 = u_xlat7.xxxy * u_xlat12.zwyz;
                u_xlat14 = u_xlat7.yyzz * u_xlat12;
                u_xlat6.x = u_xlat7.z * u_xlat12.y;
                vec3 txVec4 = vec3(u_xlat10.xy,u_xlat2.z);
                u_xlat31 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec4, 0.0);
                vec3 txVec5 = vec3(u_xlat10.zw,u_xlat2.z);
                u_xlat7.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec5, 0.0);
                u_xlat7.x = u_xlat7.x * u_xlat13.y;
                u_xlat31 = u_xlat13.x * u_xlat31 + u_xlat7.x;
                vec3 txVec6 = vec3(u_xlat56.xy,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec6, 0.0);
                u_xlat31 = u_xlat13.z * u_xlat56.x + u_xlat31;
                vec3 txVec7 = vec3(u_xlat9.xy,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec7, 0.0);
                u_xlat31 = u_xlat13.w * u_xlat56.x + u_xlat31;
                vec3 txVec8 = vec3(u_xlat11.xy,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec8, 0.0);
                u_xlat31 = u_xlat14.x * u_xlat56.x + u_xlat31;
                vec3 txVec9 = vec3(u_xlat11.zw,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec9, 0.0);
                u_xlat31 = u_xlat14.y * u_xlat56.x + u_xlat31;
                vec3 txVec10 = vec3(u_xlat9.zw,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec10, 0.0);
                u_xlat31 = u_xlat14.z * u_xlat56.x + u_xlat31;
                vec3 txVec11 = vec3(u_xlat8.xy,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec11, 0.0);
                u_xlat31 = u_xlat14.w * u_xlat56.x + u_xlat31;
                vec3 txVec12 = vec3(u_xlat8.zw,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec12, 0.0);
                u_xlat80 = u_xlat6.x * u_xlat56.x + u_xlat31;
            } else {
                u_xlat6.xy = u_xlat2.xy * _MainLightShadowmapSize.zw + vec2(0.5, 0.5);
                u_xlat6.xy = floor(u_xlat6.xy);
                u_xlat56.xy = u_xlat2.xy * _MainLightShadowmapSize.zw + (-u_xlat6.xy);
                u_xlat7 = u_xlat56.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                u_xlat8 = u_xlat7.xxzz * u_xlat7.xxzz;
                u_xlat9.yw = u_xlat8.yw * vec2(0.0408160016, 0.0408160016);
                u_xlat7.xz = u_xlat8.xz * vec2(0.5, 0.5) + (-u_xlat56.xy);
                u_xlat8.xy = (-u_xlat56.xy) + vec2(1.0, 1.0);
                u_xlat58.xy = min(u_xlat56.xy, vec2(0.0, 0.0));
                u_xlat8.xy = (-u_xlat58.xy) * u_xlat58.xy + u_xlat8.xy;
                u_xlat58.xy = max(u_xlat56.xy, vec2(0.0, 0.0));
                u_xlat32.xz = (-u_xlat58.xy) * u_xlat58.xy + u_xlat7.yw;
                u_xlat8.xy = u_xlat8.xy + vec2(2.0, 2.0);
                u_xlat7.yw = u_xlat32.xz + vec2(2.0, 2.0);
                u_xlat10.z = u_xlat7.y * 0.0816320032;
                u_xlat11.xyz = u_xlat7.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                u_xlat7.xy = u_xlat8.xy * vec2(0.0816320032, 0.0816320032);
                u_xlat10.x = u_xlat11.y;
                u_xlat10.yw = u_xlat56.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat8.xz = u_xlat56.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat8.y = u_xlat7.x;
                u_xlat8.w = u_xlat9.y;
                u_xlat10 = u_xlat8 + u_xlat10;
                u_xlat11.yw = u_xlat56.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                u_xlat9.xz = u_xlat56.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                u_xlat9.y = u_xlat7.y;
                u_xlat7 = u_xlat9 + u_xlat11;
                u_xlat8 = u_xlat8 / u_xlat10;
                u_xlat8 = u_xlat8 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat9 = u_xlat9 / u_xlat7;
                u_xlat9 = u_xlat9 + vec4(-3.5, -1.5, 0.5, 2.5);
                u_xlat8 = u_xlat8.wxyz * _MainLightShadowmapSize.xxxx;
                u_xlat9 = u_xlat9.xwyz * _MainLightShadowmapSize.yyyy;
                u_xlat11.xzw = u_xlat8.yzw;
                u_xlat11.y = u_xlat9.x;
                u_xlat12 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat56.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.y = u_xlat11.y;
                u_xlat11.y = u_xlat9.z;
                u_xlat13 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat14.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.z = u_xlat11.y;
                u_xlat15 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat8.xyxz;
                u_xlat11.y = u_xlat9.w;
                u_xlat16 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat11.xyzy;
                u_xlat33.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat11.wy;
                u_xlat8.w = u_xlat11.y;
                u_xlat64.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat8.xw;
                u_xlat9.xzw = u_xlat11.xzw;
                u_xlat11 = u_xlat6.xyxy * _MainLightShadowmapSize.xyxy + u_xlat9.xyzy;
                u_xlat59.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat9.wy;
                u_xlat9.x = u_xlat8.x;
                u_xlat6.xy = u_xlat6.xy * _MainLightShadowmapSize.xy + u_xlat9.xy;
                u_xlat17 = u_xlat7.xxxx * u_xlat10;
                u_xlat18 = u_xlat7.yyyy * u_xlat10;
                u_xlat19 = u_xlat7.zzzz * u_xlat10;
                u_xlat7 = u_xlat7.wwww * u_xlat10;
                vec3 txVec13 = vec3(u_xlat12.xy,u_xlat2.z);
                u_xlat8.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec13, 0.0);
                vec3 txVec14 = vec3(u_xlat12.zw,u_xlat2.z);
                u_xlat83 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec14, 0.0);
                u_xlat83 = u_xlat83 * u_xlat17.y;
                u_xlat8.x = u_xlat17.x * u_xlat8.x + u_xlat83;
                vec3 txVec15 = vec3(u_xlat56.xy,u_xlat2.z);
                u_xlat56.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec15, 0.0);
                u_xlat56.x = u_xlat17.z * u_xlat56.x + u_xlat8.x;
                vec3 txVec16 = vec3(u_xlat15.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec16, 0.0);
                u_xlat56.x = u_xlat17.w * u_xlat81 + u_xlat56.x;
                vec3 txVec17 = vec3(u_xlat13.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec17, 0.0);
                u_xlat56.x = u_xlat18.x * u_xlat81 + u_xlat56.x;
                vec3 txVec18 = vec3(u_xlat13.zw,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec18, 0.0);
                u_xlat56.x = u_xlat18.y * u_xlat81 + u_xlat56.x;
                vec3 txVec19 = vec3(u_xlat14.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec19, 0.0);
                u_xlat56.x = u_xlat18.z * u_xlat81 + u_xlat56.x;
                vec3 txVec20 = vec3(u_xlat15.zw,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec20, 0.0);
                u_xlat56.x = u_xlat18.w * u_xlat81 + u_xlat56.x;
                vec3 txVec21 = vec3(u_xlat16.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec21, 0.0);
                u_xlat56.x = u_xlat19.x * u_xlat81 + u_xlat56.x;
                vec3 txVec22 = vec3(u_xlat16.zw,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec22, 0.0);
                u_xlat56.x = u_xlat19.y * u_xlat81 + u_xlat56.x;
                vec3 txVec23 = vec3(u_xlat33.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec23, 0.0);
                u_xlat56.x = u_xlat19.z * u_xlat81 + u_xlat56.x;
                vec3 txVec24 = vec3(u_xlat64.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec24, 0.0);
                u_xlat56.x = u_xlat19.w * u_xlat81 + u_xlat56.x;
                vec3 txVec25 = vec3(u_xlat11.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec25, 0.0);
                u_xlat56.x = u_xlat7.x * u_xlat81 + u_xlat56.x;
                vec3 txVec26 = vec3(u_xlat11.zw,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec26, 0.0);
                u_xlat56.x = u_xlat7.y * u_xlat81 + u_xlat56.x;
                vec3 txVec27 = vec3(u_xlat59.xy,u_xlat2.z);
                u_xlat81 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec27, 0.0);
                u_xlat56.x = u_xlat7.z * u_xlat81 + u_xlat56.x;
                vec3 txVec28 = vec3(u_xlat6.xy,u_xlat2.z);
                u_xlat6.x = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec28, 0.0);
                u_xlat80 = u_xlat7.w * u_xlat6.x + u_xlat56.x;
            }
        }
    } else {
        vec3 txVec29 = vec3(u_xlat2.xy,u_xlat2.z);
        u_xlat80 = textureLod(sampler2DShadow(_MainLightShadowmapTexture, sampler_LinearClampCompare), txVec29, 0.0);
    }
    u_xlat2.x = (-_MainLightShadowParams.x) + 1.0;
    u_xlat2.x = u_xlat80 * _MainLightShadowParams.x + u_xlat2.x;
    u_xlatb27 = 0.0>=u_xlat2.z;
    u_xlatb52 = u_xlat2.z>=1.0;
    u_xlatb27 = u_xlatb52 || u_xlatb27;
    u_xlat2.x = (u_xlatb27) ? 1.0 : u_xlat2.x;
    u_xlat6.xyz = vs_TEXCOORD7.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat27.x = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat52 = u_xlat27.x * _MainLightShadowParams.z + _MainLightShadowParams.w;
    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
    u_xlat80 = (-u_xlat2.x) + 1.0;
    u_xlat2.x = u_xlat52 * u_xlat80 + u_xlat2.x;
    u_xlat52 = dot((-u_xlat3.xyz), u_xlat26.xyz);
    u_xlat52 = u_xlat52 + u_xlat52;
    u_xlat6.xyz = u_xlat26.xyz * (-vec3(u_xlat52)) + (-u_xlat3.xyz);
    u_xlat52 = dot(u_xlat26.xyz, u_xlat3.xyz);
    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
    u_xlat52 = (-u_xlat52) + 1.0;
    u_xlat52 = u_xlat52 * u_xlat52;
    u_xlat52 = u_xlat52 * u_xlat52;
    u_xlat80 = (-u_xlat1) * 0.699999988 + 1.70000005;
    u_xlat1 = u_xlat1 * u_xlat80;
    u_xlat1 = u_xlat1 * 6.0;
    u_xlat6 = textureLod(samplerCube(unity_SpecCube0, samplerunity_SpecCube0), u_xlat6.xyz, u_xlat1);
    u_xlat1 = u_xlat6.w + -1.0;
    u_xlat1 = unity_SpecCube0_HDR.w * u_xlat1 + 1.0;
    u_xlat1 = max(u_xlat1, 0.0);
    u_xlat1 = log2(u_xlat1);
    u_xlat1 = u_xlat1 * unity_SpecCube0_HDR.y;
    u_xlat1 = exp2(u_xlat1);
    u_xlat1 = u_xlat1 * unity_SpecCube0_HDR.x;
    u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat1);
    u_xlat7.xy = vec2(u_xlat77) * vec2(u_xlat77) + vec2(-1.0, 1.0);
    u_xlat1 = float(1.0) / u_xlat7.y;
    u_xlat32.xyz = (-u_xlat0.xyz) + vec3(u_xlat75);
    u_xlat32.xyz = vec3(u_xlat52) * u_xlat32.xyz + u_xlat0.xyz;
    u_xlat32.xyz = vec3(u_xlat1) * u_xlat32.xyz;
    u_xlat6.xyz = u_xlat6.xyz * u_xlat32.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat5.xyz + u_xlat6.xyz;
    u_xlat75 = u_xlat2.x * unity_LightData.z;
    u_xlat1 = dot(u_xlat26.xyz, _MainLightPosition.xyz);
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat75 = u_xlat75 * u_xlat1;
    u_xlat2.xzw = vec3(u_xlat75) * _MainLightColor.xyz;
    u_xlat6.xyz = u_xlat3.xyz + _MainLightPosition.xyz;
    u_xlat75 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat75 = max(u_xlat75, 1.17549435e-38);
    u_xlat75 = inversesqrt(u_xlat75);
    u_xlat6.xyz = vec3(u_xlat75) * u_xlat6.xyz;
    u_xlat75 = dot(u_xlat26.xyz, u_xlat6.xyz);
    u_xlat75 = clamp(u_xlat75, 0.0, 1.0);
    u_xlat1 = dot(_MainLightPosition.xyz, u_xlat6.xyz);
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat75 = u_xlat75 * u_xlat75;
    u_xlat75 = u_xlat75 * u_xlat7.x + 1.00001001;
    u_xlat1 = u_xlat1 * u_xlat1;
    u_xlat75 = u_xlat75 * u_xlat75;
    u_xlat1 = max(u_xlat1, 0.100000001);
    u_xlat75 = u_xlat75 * u_xlat1;
    u_xlat75 = u_xlat78 * u_xlat75;
    u_xlat75 = u_xlat79 / u_xlat75;
    u_xlat6.xyz = u_xlat0.xyz * vec3(u_xlat75) + u_xlat5.xyz;
    u_xlat75 = min(_AdditionalLightsCount.x, unity_LightData.y);
    u_xlatu75 =  uint(int(u_xlat75));
    u_xlat1 = u_xlat27.x * _AdditionalShadowFadeParams.x + _AdditionalShadowFadeParams.y;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat32.x = float(0.0);
    u_xlat32.y = float(0.0);
    u_xlat32.z = float(0.0);
    for(uint u_xlatu_loop_1 = 0u ; u_xlatu_loop_1<u_xlatu75 ; u_xlatu_loop_1++)
    {
        u_xlatu80 = u_xlatu_loop_1 >> (2u & uint(0x1F));
        u_xlati81 = int(u_xlatu_loop_1 & 3u);
        u_xlat80 = dot(unity_LightIndices[int(u_xlatu80)], uintBitsToFloat(ImmCB_0[u_xlati81]));
        u_xlati80 = int(u_xlat80);
        u_xlat8.xyz = (-vs_TEXCOORD7.xyz) * _AdditionalLightsPosition[u_xlati80].www + _AdditionalLightsPosition[u_xlati80].xyz;
        u_xlat81 = dot(u_xlat8.xyz, u_xlat8.xyz);
        u_xlat81 = max(u_xlat81, 6.10351562e-05);
        u_xlat83 = inversesqrt(u_xlat81);
        u_xlat9.xyz = vec3(u_xlat83) * u_xlat8.xyz;
        u_xlat84 = float(1.0) / float(u_xlat81);
        u_xlat81 = u_xlat81 * _AdditionalLightsAttenuation[u_xlati80].x;
        u_xlat81 = (-u_xlat81) * u_xlat81 + 1.0;
        u_xlat81 = max(u_xlat81, 0.0);
        u_xlat81 = u_xlat81 * u_xlat81;
        u_xlat81 = u_xlat81 * u_xlat84;
        u_xlat84 = dot(_AdditionalLightsSpotDir[u_xlati80].xyz, u_xlat9.xyz);
        u_xlat84 = u_xlat84 * _AdditionalLightsAttenuation[u_xlati80].z + _AdditionalLightsAttenuation[u_xlati80].w;
        u_xlat84 = clamp(u_xlat84, 0.0, 1.0);
        u_xlat84 = u_xlat84 * u_xlat84;
        u_xlat81 = u_xlat81 * u_xlat84;
        u_xlati84 = int(_AdditionalShadowParams[u_xlati80].w);
        u_xlatb10.x = u_xlati84>=0;
        if(u_xlatb10.x){
            u_xlatb10.x = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_AdditionalShadowParams[u_xlati80].z);
            if(u_xlatb10.x){
                u_xlatb10.xyz = greaterThanEqual(abs(u_xlat9.zzyz), abs(u_xlat9.xyxx)).xyz;
                u_xlatb10.x = u_xlatb10.y && u_xlatb10.x;
                u_xlatb11.xyz = lessThan((-u_xlat9.zyxz), vec4(0.0, 0.0, 0.0, 0.0)).xyz;
                u_xlat35.x = (u_xlatb11.x) ? float(5.0) : float(4.0);
                u_xlat35.z = (u_xlatb11.y) ? float(3.0) : float(2.0);
                u_xlat11.x = u_xlatb11.z ? 1.0 : float(0.0);
                u_xlat60 = (u_xlatb10.z) ? u_xlat35.z : u_xlat11.x;
                u_xlat10.x = (u_xlatb10.x) ? u_xlat35.x : u_xlat60;
                u_xlat35.x = trunc(_AdditionalShadowParams[u_xlati80].w);
                u_xlat10.x = u_xlat10.x + u_xlat35.x;
                u_xlati84 = int(u_xlat10.x);
            }
            u_xlati84 = u_xlati84 << (2 & int(0x1F));
            u_xlat10 = vs_TEXCOORD7.yyyy * _AdditionalLightsWorldToShadow[(u_xlati84 + 1) / 4][(u_xlati84 + 1) % 4];
            u_xlat10 = _AdditionalLightsWorldToShadow[u_xlati84 / 4][u_xlati84 % 4] * vs_TEXCOORD7.xxxx + u_xlat10;
            u_xlat10 = _AdditionalLightsWorldToShadow[(u_xlati84 + 2) / 4][(u_xlati84 + 2) % 4] * vs_TEXCOORD7.zzzz + u_xlat10;
            u_xlat10 = u_xlat10 + _AdditionalLightsWorldToShadow[(u_xlati84 + 3) / 4][(u_xlati84 + 3) % 4];
            u_xlat10.xyz = u_xlat10.xyz / u_xlat10.www;
            u_xlatb84 = 0.0<_AdditionalShadowParams[u_xlati80].y;
            if(u_xlatb84){
                u_xlatb84 = 1.0==_AdditionalShadowParams[u_xlati80].y;
                if(u_xlatb84){
                    u_xlat11 = u_xlat10.xyxy + _AdditionalShadowOffset0;
                    vec3 txVec30 = vec3(u_xlat11.xy,u_xlat10.z);
                    u_xlat12.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec30, 0.0);
                    vec3 txVec31 = vec3(u_xlat11.zw,u_xlat10.z);
                    u_xlat12.y = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec31, 0.0);
                    u_xlat11 = u_xlat10.xyxy + _AdditionalShadowOffset1;
                    vec3 txVec32 = vec3(u_xlat11.xy,u_xlat10.z);
                    u_xlat12.z = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec32, 0.0);
                    vec3 txVec33 = vec3(u_xlat11.zw,u_xlat10.z);
                    u_xlat12.w = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec33, 0.0);
                    u_xlat84 = dot(u_xlat12, vec4(0.25, 0.25, 0.25, 0.25));
                } else {
                    u_xlatb85 = 2.0==_AdditionalShadowParams[u_xlati80].y;
                    if(u_xlatb85){
                        u_xlat11.xy = u_xlat10.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat11.xy = floor(u_xlat11.xy);
                        u_xlat61.xy = u_xlat10.xy * _AdditionalShadowmapSize.zw + (-u_xlat11.xy);
                        u_xlat12 = u_xlat61.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat13 = u_xlat12.xxzz * u_xlat12.xxzz;
                        u_xlat12.xz = u_xlat13.yw * vec2(0.0799999982, 0.0799999982);
                        u_xlat13.xy = u_xlat13.xz * vec2(0.5, 0.5) + (-u_xlat61.xy);
                        u_xlat63.xy = (-u_xlat61.xy) + vec2(1.0, 1.0);
                        u_xlat14.xy = min(u_xlat61.xy, vec2(0.0, 0.0));
                        u_xlat14.xy = (-u_xlat14.xy) * u_xlat14.xy + u_xlat63.xy;
                        u_xlat61.xy = max(u_xlat61.xy, vec2(0.0, 0.0));
                        u_xlat61.xy = (-u_xlat61.xy) * u_xlat61.xy + u_xlat12.yw;
                        u_xlat14.xy = u_xlat14.xy + vec2(1.0, 1.0);
                        u_xlat61.xy = u_xlat61.xy + vec2(1.0, 1.0);
                        u_xlat15.xy = u_xlat13.xy * vec2(0.159999996, 0.159999996);
                        u_xlat13.xy = u_xlat63.xy * vec2(0.159999996, 0.159999996);
                        u_xlat14.xy = u_xlat14.xy * vec2(0.159999996, 0.159999996);
                        u_xlat16.xy = u_xlat61.xy * vec2(0.159999996, 0.159999996);
                        u_xlat61.xy = u_xlat12.yw * vec2(0.159999996, 0.159999996);
                        u_xlat15.z = u_xlat14.x;
                        u_xlat15.w = u_xlat61.x;
                        u_xlat13.z = u_xlat16.x;
                        u_xlat13.w = u_xlat12.x;
                        u_xlat17 = u_xlat13.zwxz + u_xlat15.zwxz;
                        u_xlat14.z = u_xlat15.y;
                        u_xlat14.w = u_xlat61.y;
                        u_xlat16.z = u_xlat13.y;
                        u_xlat16.w = u_xlat12.z;
                        u_xlat12.xyz = u_xlat14.zyw + u_xlat16.zyw;
                        u_xlat13.xyz = u_xlat13.xzw / u_xlat17.zwy;
                        u_xlat13.xyz = u_xlat13.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat14.xyz = u_xlat16.zyw / u_xlat12.xyz;
                        u_xlat14.xyz = u_xlat14.xyz + vec3(-2.5, -0.5, 1.5);
                        u_xlat13.xyz = u_xlat13.yxz * _AdditionalShadowmapSize.xxx;
                        u_xlat14.xyz = u_xlat14.xyz * _AdditionalShadowmapSize.yyy;
                        u_xlat13.w = u_xlat14.x;
                        u_xlat15 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.ywxw;
                        u_xlat61.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat13.zw;
                        u_xlat14.w = u_xlat13.y;
                        u_xlat13.yw = u_xlat14.yz;
                        u_xlat16 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xyzy;
                        u_xlat14 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.wywz;
                        u_xlat13 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xwzw;
                        u_xlat18 = u_xlat12.xxxy * u_xlat17.zwyz;
                        u_xlat19 = u_xlat12.yyzz * u_xlat17;
                        u_xlat85 = u_xlat12.z * u_xlat17.y;
                        vec3 txVec34 = vec3(u_xlat15.xy,u_xlat10.z);
                        u_xlat11.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec34, 0.0);
                        vec3 txVec35 = vec3(u_xlat15.zw,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec35, 0.0);
                        u_xlat36 = u_xlat36 * u_xlat18.y;
                        u_xlat11.x = u_xlat18.x * u_xlat11.x + u_xlat36;
                        vec3 txVec36 = vec3(u_xlat61.xy,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec36, 0.0);
                        u_xlat11.x = u_xlat18.z * u_xlat36 + u_xlat11.x;
                        vec3 txVec37 = vec3(u_xlat14.xy,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec37, 0.0);
                        u_xlat11.x = u_xlat18.w * u_xlat36 + u_xlat11.x;
                        vec3 txVec38 = vec3(u_xlat16.xy,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec38, 0.0);
                        u_xlat11.x = u_xlat19.x * u_xlat36 + u_xlat11.x;
                        vec3 txVec39 = vec3(u_xlat16.zw,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec39, 0.0);
                        u_xlat11.x = u_xlat19.y * u_xlat36 + u_xlat11.x;
                        vec3 txVec40 = vec3(u_xlat14.zw,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec40, 0.0);
                        u_xlat11.x = u_xlat19.z * u_xlat36 + u_xlat11.x;
                        vec3 txVec41 = vec3(u_xlat13.xy,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec41, 0.0);
                        u_xlat11.x = u_xlat19.w * u_xlat36 + u_xlat11.x;
                        vec3 txVec42 = vec3(u_xlat13.zw,u_xlat10.z);
                        u_xlat36 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec42, 0.0);
                        u_xlat84 = u_xlat85 * u_xlat36 + u_xlat11.x;
                    } else {
                        u_xlat11.xy = u_xlat10.xy * _AdditionalShadowmapSize.zw + vec2(0.5, 0.5);
                        u_xlat11.xy = floor(u_xlat11.xy);
                        u_xlat61.xy = u_xlat10.xy * _AdditionalShadowmapSize.zw + (-u_xlat11.xy);
                        u_xlat12 = u_xlat61.xxyy + vec4(0.5, 1.0, 0.5, 1.0);
                        u_xlat13 = u_xlat12.xxzz * u_xlat12.xxzz;
                        u_xlat14.yw = u_xlat13.yw * vec2(0.0408160016, 0.0408160016);
                        u_xlat12.xz = u_xlat13.xz * vec2(0.5, 0.5) + (-u_xlat61.xy);
                        u_xlat13.xy = (-u_xlat61.xy) + vec2(1.0, 1.0);
                        u_xlat63.xy = min(u_xlat61.xy, vec2(0.0, 0.0));
                        u_xlat13.xy = (-u_xlat63.xy) * u_xlat63.xy + u_xlat13.xy;
                        u_xlat63.xy = max(u_xlat61.xy, vec2(0.0, 0.0));
                        u_xlat37.xz = (-u_xlat63.xy) * u_xlat63.xy + u_xlat12.yw;
                        u_xlat13.xy = u_xlat13.xy + vec2(2.0, 2.0);
                        u_xlat12.yw = u_xlat37.xz + vec2(2.0, 2.0);
                        u_xlat15.z = u_xlat12.y * 0.0816320032;
                        u_xlat16.xyz = u_xlat12.zxw * vec3(0.0816320032, 0.0816320032, 0.0816320032);
                        u_xlat12.xy = u_xlat13.xy * vec2(0.0816320032, 0.0816320032);
                        u_xlat15.x = u_xlat16.y;
                        u_xlat15.yw = u_xlat61.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat13.xz = u_xlat61.xx * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat13.y = u_xlat12.x;
                        u_xlat13.w = u_xlat14.y;
                        u_xlat15 = u_xlat13 + u_xlat15;
                        u_xlat16.yw = u_xlat61.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.163264006, 0.0816320032);
                        u_xlat14.xz = u_xlat61.yy * vec2(-0.0816320032, 0.0816320032) + vec2(0.0816320032, 0.163264006);
                        u_xlat14.y = u_xlat12.y;
                        u_xlat12 = u_xlat14 + u_xlat16;
                        u_xlat13 = u_xlat13 / u_xlat15;
                        u_xlat13 = u_xlat13 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat14 = u_xlat14 / u_xlat12;
                        u_xlat14 = u_xlat14 + vec4(-3.5, -1.5, 0.5, 2.5);
                        u_xlat13 = u_xlat13.wxyz * _AdditionalShadowmapSize.xxxx;
                        u_xlat14 = u_xlat14.xwyz * _AdditionalShadowmapSize.yyyy;
                        u_xlat16.xzw = u_xlat13.yzw;
                        u_xlat16.y = u_xlat14.x;
                        u_xlat17 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat16.xyzy;
                        u_xlat61.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat16.wy;
                        u_xlat13.y = u_xlat16.y;
                        u_xlat16.y = u_xlat14.z;
                        u_xlat18 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat16.xyzy;
                        u_xlat19.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat16.wy;
                        u_xlat13.z = u_xlat16.y;
                        u_xlat20 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat13.xyxz;
                        u_xlat16.y = u_xlat14.w;
                        u_xlat21 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat16.xyzy;
                        u_xlat38.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat16.wy;
                        u_xlat13.w = u_xlat16.y;
                        u_xlat69.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat13.xw;
                        u_xlat14.xzw = u_xlat16.xzw;
                        u_xlat16 = u_xlat11.xyxy * _AdditionalShadowmapSize.xyxy + u_xlat14.xyzy;
                        u_xlat64.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat14.wy;
                        u_xlat14.x = u_xlat13.x;
                        u_xlat11.xy = u_xlat11.xy * _AdditionalShadowmapSize.xy + u_xlat14.xy;
                        u_xlat22 = u_xlat12.xxxx * u_xlat15;
                        u_xlat23 = u_xlat12.yyyy * u_xlat15;
                        u_xlat24 = u_xlat12.zzzz * u_xlat15;
                        u_xlat12 = u_xlat12.wwww * u_xlat15;
                        vec3 txVec43 = vec3(u_xlat17.xy,u_xlat10.z);
                        u_xlat85 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec43, 0.0);
                        vec3 txVec44 = vec3(u_xlat17.zw,u_xlat10.z);
                        u_xlat13.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec44, 0.0);
                        u_xlat13.x = u_xlat13.x * u_xlat22.y;
                        u_xlat85 = u_xlat22.x * u_xlat85 + u_xlat13.x;
                        vec3 txVec45 = vec3(u_xlat61.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec45, 0.0);
                        u_xlat85 = u_xlat22.z * u_xlat61.x + u_xlat85;
                        vec3 txVec46 = vec3(u_xlat20.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec46, 0.0);
                        u_xlat85 = u_xlat22.w * u_xlat61.x + u_xlat85;
                        vec3 txVec47 = vec3(u_xlat18.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec47, 0.0);
                        u_xlat85 = u_xlat23.x * u_xlat61.x + u_xlat85;
                        vec3 txVec48 = vec3(u_xlat18.zw,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec48, 0.0);
                        u_xlat85 = u_xlat23.y * u_xlat61.x + u_xlat85;
                        vec3 txVec49 = vec3(u_xlat19.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec49, 0.0);
                        u_xlat85 = u_xlat23.z * u_xlat61.x + u_xlat85;
                        vec3 txVec50 = vec3(u_xlat20.zw,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec50, 0.0);
                        u_xlat85 = u_xlat23.w * u_xlat61.x + u_xlat85;
                        vec3 txVec51 = vec3(u_xlat21.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec51, 0.0);
                        u_xlat85 = u_xlat24.x * u_xlat61.x + u_xlat85;
                        vec3 txVec52 = vec3(u_xlat21.zw,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec52, 0.0);
                        u_xlat85 = u_xlat24.y * u_xlat61.x + u_xlat85;
                        vec3 txVec53 = vec3(u_xlat38.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec53, 0.0);
                        u_xlat85 = u_xlat24.z * u_xlat61.x + u_xlat85;
                        vec3 txVec54 = vec3(u_xlat69.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec54, 0.0);
                        u_xlat85 = u_xlat24.w * u_xlat61.x + u_xlat85;
                        vec3 txVec55 = vec3(u_xlat16.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec55, 0.0);
                        u_xlat85 = u_xlat12.x * u_xlat61.x + u_xlat85;
                        vec3 txVec56 = vec3(u_xlat16.zw,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec56, 0.0);
                        u_xlat85 = u_xlat12.y * u_xlat61.x + u_xlat85;
                        vec3 txVec57 = vec3(u_xlat64.xy,u_xlat10.z);
                        u_xlat61.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec57, 0.0);
                        u_xlat85 = u_xlat12.z * u_xlat61.x + u_xlat85;
                        vec3 txVec58 = vec3(u_xlat11.xy,u_xlat10.z);
                        u_xlat11.x = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec58, 0.0);
                        u_xlat84 = u_xlat12.w * u_xlat11.x + u_xlat85;
                    }
                }
            } else {
                vec3 txVec59 = vec3(u_xlat10.xy,u_xlat10.z);
                u_xlat84 = textureLod(sampler2DShadow(_AdditionalLightsShadowmapTexture, sampler_LinearClampCompare), txVec59, 0.0);
            }
            u_xlat10.x = 1.0 + (-_AdditionalShadowParams[u_xlati80].x);
            u_xlat84 = u_xlat84 * _AdditionalShadowParams[u_xlati80].x + u_xlat10.x;
            u_xlatb10.x = 0.0>=u_xlat10.z;
            u_xlatb35 = u_xlat10.z>=1.0;
            u_xlatb10.x = u_xlatb35 || u_xlatb10.x;
            u_xlat84 = (u_xlatb10.x) ? 1.0 : u_xlat84;
        } else {
            u_xlat84 = 1.0;
        }
        u_xlat10.x = (-u_xlat84) + 1.0;
        u_xlat84 = u_xlat1 * u_xlat10.x + u_xlat84;
        u_xlat81 = u_xlat81 * u_xlat84;
        u_xlat84 = dot(u_xlat26.xyz, u_xlat9.xyz);
        u_xlat84 = clamp(u_xlat84, 0.0, 1.0);
        u_xlat81 = u_xlat81 * u_xlat84;
        u_xlat10.xyz = vec3(u_xlat81) * _AdditionalLightsColor[u_xlati80].xyz;
        u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat83) + u_xlat3.xyz;
        u_xlat80 = dot(u_xlat8.xyz, u_xlat8.xyz);
        u_xlat80 = max(u_xlat80, 1.17549435e-38);
        u_xlat80 = inversesqrt(u_xlat80);
        u_xlat8.xyz = vec3(u_xlat80) * u_xlat8.xyz;
        u_xlat80 = dot(u_xlat26.xyz, u_xlat8.xyz);
        u_xlat80 = clamp(u_xlat80, 0.0, 1.0);
        u_xlat81 = dot(u_xlat9.xyz, u_xlat8.xyz);
        u_xlat81 = clamp(u_xlat81, 0.0, 1.0);
        u_xlat80 = u_xlat80 * u_xlat80;
        u_xlat80 = u_xlat80 * u_xlat7.x + 1.00001001;
        u_xlat81 = u_xlat81 * u_xlat81;
        u_xlat80 = u_xlat80 * u_xlat80;
        u_xlat81 = max(u_xlat81, 0.100000001);
        u_xlat80 = u_xlat80 * u_xlat81;
        u_xlat80 = u_xlat78 * u_xlat80;
        u_xlat80 = u_xlat79 / u_xlat80;
        u_xlat8.xyz = u_xlat0.xyz * vec3(u_xlat80) + u_xlat5.xyz;
        u_xlat32.xyz = u_xlat8.xyz * u_xlat10.xyz + u_xlat32.xyz;
    }
    u_xlat0.xyz = u_xlat6.xyz * u_xlat2.xzw + u_xlat4.xyz;
    SV_Target0.xyz = u_xlat32.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}


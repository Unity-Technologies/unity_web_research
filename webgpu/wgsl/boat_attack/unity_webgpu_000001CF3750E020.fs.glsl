#version 440
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

layout(origin_upper_left) in vec4 gl_FragCoord;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 1, binding = 0, std140) uniform PGlobals {
	vec2 _GlobalMipBias;
	vec4 _Lut_Params;
	vec4 _ColorBalance;
	vec4 _ColorFilter;
	vec4 _ChannelMixerRed;
	vec4 _ChannelMixerGreen;
	vec4 _ChannelMixerBlue;
	vec4 _HueSatCon;
	vec4 _Lift;
	vec4 _Gamma;
	vec4 _Gain;
	vec4 _Shadows;
	vec4 _Midtones;
	vec4 _Highlights;
	vec4 _ShaHiLimits;
	vec4 _SplitShadows;
	vec4 _SplitHighlights;
};
layout(set = 0, binding = 0) uniform mediump texture2D _CurveMaster;
layout(set = 0, binding = 1) uniform mediump texture2D _CurveRed;
layout(set = 0, binding = 2) uniform mediump texture2D _CurveGreen;
layout(set = 0, binding = 3) uniform mediump texture2D _CurveBlue;
layout(set = 0, binding = 4) uniform mediump texture2D _CurveHueVsHue;
layout(set = 0, binding = 5) uniform mediump texture2D _CurveHueVsSat;
layout(set = 0, binding = 6) uniform mediump texture2D _CurveSatVsSat;
layout(set = 0, binding = 7) uniform mediump texture2D _CurveLumVsSat;
layout(location = 0) in highp  vec2 vs_TEXCOORD0;
layout(location = 0) out highp vec4 SV_Target0;
vec4 u_xlat0;
bvec3 u_xlatb0;
vec3 u_xlat1;
ivec3 u_xlati1;
bvec4 u_xlatb1;
vec4 u_xlat2;
ivec3 u_xlati2;
bvec2 u_xlatb2;
vec4 u_xlat3;
vec3 u_xlat4;
bvec3 u_xlatb4;
vec3 u_xlat5;
vec3 u_xlat6;
bool u_xlatb6;
vec3 u_xlat7;
vec3 u_xlat8;
float u_xlat12;
float u_xlat13;
vec2 u_xlat14;
vec2 u_xlat15;
float u_xlat18;
bool u_xlatb18;
float u_xlat19;
bool u_xlatb19;
layout(set = 0, binding = 8) uniform mediump  sampler sampler_LinearClamp;
void main()
{
    u_xlat0.yz = vs_TEXCOORD0.xy + (-_Lut_Params.yz);
    u_xlat1.x = u_xlat0.y * _Lut_Params.x;
    u_xlat0.x = fract(u_xlat1.x);
    u_xlat1.x = u_xlat0.x / _Lut_Params.x;
    u_xlat0.w = u_xlat0.y + (-u_xlat1.x);
    u_xlat0.xyz = u_xlat0.xzw * _Lut_Params.www + vec3(-0.386036009, -0.386036009, -0.386036009);
    u_xlat0.xyz = u_xlat0.xyz * vec3(13.6054821, 13.6054821, 13.6054821);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.0479959995, -0.0479959995, -0.0479959995);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.179999992, 0.179999992, 0.179999992);
    u_xlat1.x = dot(vec3(0.390404999, 0.549941003, 0.00892631989), u_xlat0.xyz);
    u_xlat1.y = dot(vec3(0.070841603, 0.963172019, 0.00135775004), u_xlat0.xyz);
    u_xlat1.z = dot(vec3(0.0231081992, 0.128021002, 0.936245024), u_xlat0.xyz);
    u_xlat0.xyz = u_xlat1.xyz * _ColorBalance.xyz;
    u_xlat1.x = dot(vec3(2.85846996, -1.62879002, -0.0248910002), u_xlat0.xyz);
    u_xlat1.y = dot(vec3(-0.210181996, 1.15820003, 0.000324280991), u_xlat0.xyz);
    u_xlat1.z = dot(vec3(-0.0418119989, -0.118169002, 1.06867003), u_xlat0.xyz);
    u_xlat0.x = dot(vec3(0.439700991, 0.382977992, 0.177334994), u_xlat1.xyz);
    u_xlat0.y = dot(vec3(0.0897922963, 0.813422978, 0.0967615992), u_xlat1.xyz);
    u_xlat0.z = dot(vec3(0.0175439995, 0.111543998, 0.870703995), u_xlat1.xyz);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = min(u_xlat0.xyz, vec3(65504.0, 65504.0, 65504.0));
    u_xlat1.xyz = u_xlat0.xyz * vec3(0.5, 0.5, 0.5) + vec3(1.525878e-05, 1.525878e-05, 1.525878e-05);
    u_xlat1.xyz = log2(u_xlat1.xyz);
    u_xlat1.xyz = u_xlat1.xyz + vec3(9.72000027, 9.72000027, 9.72000027);
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.0570776239, 0.0570776239, 0.0570776239);
    u_xlat2.xyz = log2(u_xlat0.xyz);
    u_xlatb0.xyz = lessThan(u_xlat0.xyzx, vec4(3.05175708e-05, 3.05175708e-05, 3.05175708e-05, 0.0)).xyz;
    u_xlat2.xyz = u_xlat2.xyz + vec3(9.72000027, 9.72000027, 9.72000027);
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.0570776239, 0.0570776239, 0.0570776239);
    u_xlat0.x = (u_xlatb0.x) ? u_xlat1.x : u_xlat2.x;
    u_xlat0.y = (u_xlatb0.y) ? u_xlat1.y : u_xlat2.y;
    u_xlat0.z = (u_xlatb0.z) ? u_xlat1.z : u_xlat2.z;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.413588405, -0.413588405, -0.413588405);
    u_xlat0.xyz = u_xlat0.xyz * _HueSatCon.zzz + vec3(0.413588405, 0.413588405, 0.413588405);
    u_xlatb1 = lessThan(u_xlat0.xxyy, vec4(-0.301369876, 1.46799636, -0.301369876, 1.46799636));
    u_xlat0.xyw = u_xlat0.xyz * vec3(17.5200005, 17.5200005, 17.5200005) + vec3(-9.72000027, -9.72000027, -9.72000027);
    u_xlatb2.xy = lessThan(u_xlat0.zzzz, vec4(-0.301369876, 1.46799636, 0.0, 0.0)).xy;
    u_xlat0.xyz = exp2(u_xlat0.xyw);
    u_xlat7.x = (u_xlatb1.y) ? u_xlat0.x : float(65504.0);
    u_xlat7.z = (u_xlatb1.w) ? u_xlat0.y : float(65504.0);
    u_xlat0.xyw = u_xlat0.xyz + vec3(-1.52587891e-05, -1.52587891e-05, -1.52587891e-05);
    u_xlat12 = (u_xlatb2.y) ? u_xlat0.z : 65504.0;
    u_xlat0.xyw = u_xlat0.xyw + u_xlat0.xyw;
    u_xlat1.x = (u_xlatb1.x) ? u_xlat0.x : u_xlat7.x;
    u_xlat1.y = (u_xlatb1.z) ? u_xlat0.y : u_xlat7.z;
    u_xlat1.z = (u_xlatb2.x) ? u_xlat0.w : u_xlat12;
    u_xlat0.x = dot(vec3(1.45143926, -0.236510754, -0.214928567), u_xlat1.xyz);
    u_xlat0.y = dot(vec3(-0.0765537769, 1.17622972, -0.0996759236), u_xlat1.xyz);
    u_xlat0.z = dot(vec3(0.00831614807, -0.00603244966, 0.997716308), u_xlat1.xyz);
    u_xlat0.xyz = u_xlat0.xyz * _ColorFilter.xyz;
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.454545468, 0.454545468, 0.454545468);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat1.xyz = u_xlat0.xyz + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlat3.xyz = min(u_xlat0.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat18 = dot(u_xlat3.xyz, vec3(0.272228986, 0.674081981, 0.0536894985));
    u_xlat18 = u_xlat18 + _SplitShadows.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat19 = (-u_xlat18) + 1.0;
    u_xlat3.xyz = _SplitShadows.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat3.xyz = vec3(u_xlat19) * u_xlat3.xyz + vec3(0.5, 0.5, 0.5);
    u_xlat4.xyz = (-u_xlat3.xyz) * vec3(2.0, 2.0, 2.0) + vec3(1.0, 1.0, 1.0);
    u_xlat2.xyz = u_xlat2.xyz * u_xlat4.xyz;
    u_xlat2.xyz = u_xlat1.xyz * u_xlat3.xyz + u_xlat2.xyz;
    u_xlatb4.xyz = greaterThanEqual(u_xlat3.xyzx, vec4(0.5, 0.5, 0.5, 0.0)).xyz;
    u_xlat5.x = (u_xlatb4.x) ? float(0.0) : float(1.0);
    u_xlat5.y = (u_xlatb4.y) ? float(0.0) : float(1.0);
    u_xlat5.z = (u_xlatb4.z) ? float(0.0) : float(1.0);
    u_xlat4.x = u_xlatb4.x ? float(1.0) : 0.0;
    u_xlat4.y = u_xlatb4.y ? float(1.0) : 0.0;
    u_xlat4.z = u_xlatb4.z ? float(1.0) : 0.0;
;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat5.xyz;
    u_xlat5.xyz = (-u_xlat3.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat3.xyz = u_xlat3.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    u_xlat1.xyz = u_xlat1.xyz * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat3.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat4.xyz + u_xlat2.xyz;
    u_xlat1.xyz = u_xlat0.xyz + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = _SplitHighlights.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz + vec3(0.5, 0.5, 0.5);
    u_xlat4.xyz = (-u_xlat3.xyz) * vec3(2.0, 2.0, 2.0) + vec3(1.0, 1.0, 1.0);
    u_xlat2.xyz = u_xlat2.xyz * u_xlat4.xyz;
    u_xlat2.xyz = u_xlat1.xyz * u_xlat3.xyz + u_xlat2.xyz;
    u_xlatb4.xyz = greaterThanEqual(u_xlat3.xyzx, vec4(0.5, 0.5, 0.5, 0.0)).xyz;
    u_xlat5.x = (u_xlatb4.x) ? float(0.0) : float(1.0);
    u_xlat5.y = (u_xlatb4.y) ? float(0.0) : float(1.0);
    u_xlat5.z = (u_xlatb4.z) ? float(0.0) : float(1.0);
    u_xlat4.x = u_xlatb4.x ? float(1.0) : 0.0;
    u_xlat4.y = u_xlatb4.y ? float(1.0) : 0.0;
    u_xlat4.z = u_xlatb4.z ? float(1.0) : 0.0;
;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat5.xyz;
    u_xlat5.xyz = (-u_xlat3.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat3.xyz = u_xlat3.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    u_xlat1.xyz = u_xlat1.xyz * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat3.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat4.xyz + u_xlat2.xyz;
    u_xlat0.xyz = log2(abs(u_xlat0.xyz));
    u_xlat0.xyz = u_xlat0.xyz * vec3(2.20000005, 2.20000005, 2.20000005);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat1.x = dot(u_xlat0.xyz, _ChannelMixerRed.xyz);
    u_xlat1.y = dot(u_xlat0.xyz, _ChannelMixerGreen.xyz);
    u_xlat1.z = dot(u_xlat0.xyz, _ChannelMixerBlue.xyz);
    u_xlat0.xyz = u_xlat1.xyz * _Midtones.xyz;
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.272228986, 0.674081981, 0.0536894985));
    u_xlat2.xy = vec2(u_xlat18) + (-_ShaHiLimits.xz);
    u_xlat14.xy = (-_ShaHiLimits.xz) + _ShaHiLimits.yw;
    u_xlat14.xy = vec2(1.0, 1.0) / u_xlat14.xy;
    u_xlat2.xy = u_xlat14.xy * u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat2.xy * vec2(-2.0, -2.0) + vec2(3.0, 3.0);
    u_xlat2.xy = u_xlat2.xy * u_xlat2.xy;
    u_xlat18 = (-u_xlat14.x) * u_xlat2.x + 1.0;
    u_xlat19 = (-u_xlat18) + 1.0;
    u_xlat19 = (-u_xlat14.y) * u_xlat2.y + u_xlat19;
    u_xlat2.x = u_xlat2.y * u_xlat14.y;
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat19);
    u_xlat8.xyz = u_xlat1.xyz * _Shadows.xyz;
    u_xlat1.xyz = u_xlat1.xyz * _Highlights.xyz;
    u_xlat0.xyz = u_xlat8.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz * _Gain.xyz + _Lift.xyz;
    u_xlati1.xyz = ivec3(uvec3(lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat0.xyzx).xyz) * 0xFFFFFFFFu);
    u_xlati2.xyz = ivec3(uvec3(lessThan(u_xlat0.xyzx, vec4(0.0, 0.0, 0.0, 0.0)).xyz) * 0xFFFFFFFFu);
    u_xlat0.xyz = log2(abs(u_xlat0.xyz));
    u_xlat0.xyz = u_xlat0.xyz * _Gamma.xyz;
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlati1.xyz = (-u_xlati1.xyz) + u_xlati2.xyz;
    u_xlat1.xyz = vec3(u_xlati1.xyz);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
    u_xlat3.xy = u_xlat2.zy;
    u_xlat0.xy = u_xlat1.yz * u_xlat0.yz + (-u_xlat3.xy);
    u_xlatb1.x = u_xlat3.y>=u_xlat2.z;
    u_xlat1.x = u_xlatb1.x ? 1.0 : float(0.0);
    u_xlat3.z = float(-1.0);
    u_xlat3.w = float(0.666666687);
    u_xlat0.z = float(1.0);
    u_xlat0.w = float(-1.0);
    u_xlat0 = u_xlat1.xxxx * u_xlat0.xywz + u_xlat3.xywz;
    u_xlatb1.x = u_xlat2.x>=u_xlat0.x;
    u_xlat1.x = u_xlatb1.x ? 1.0 : float(0.0);
    u_xlat3.z = u_xlat0.w;
    u_xlat0.w = u_xlat2.x;
    u_xlat2.x = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat3.xyw = u_xlat0.wyx;
    u_xlat3 = (-u_xlat0) + u_xlat3;
    u_xlat0 = u_xlat1.xxxx * u_xlat3 + u_xlat0;
    u_xlat1.x = min(u_xlat0.y, u_xlat0.w);
    u_xlat1.x = u_xlat0.x + (-u_xlat1.x);
    u_xlat7.x = u_xlat1.x * 6.0 + 9.99999975e-05;
    u_xlat6.x = (-u_xlat0.y) + u_xlat0.w;
    u_xlat6.x = u_xlat6.x / u_xlat7.x;
    u_xlat6.x = u_xlat6.x + u_xlat0.z;
    u_xlat3.x = abs(u_xlat6.x);
    u_xlat14.x = u_xlat3.x + _HueSatCon.x;
    u_xlat2.y = float(0.0);
    u_xlat14.y = float(0.0);
    u_xlat6.x = texture(sampler2D(_CurveHueVsHue, sampler_LinearClamp), u_xlat14.xy, _GlobalMipBias.x).x;
    u_xlat6.y = texture(sampler2D(_CurveLumVsSat, sampler_LinearClamp), u_xlat2.xy, _GlobalMipBias.x).x;
    u_xlat6.xy = u_xlat6.xy;
    u_xlat6.xy = clamp(u_xlat6.xy, 0.0, 1.0);
    u_xlat6.x = u_xlat14.x + u_xlat6.x;
    u_xlat7.xyz = u_xlat6.xxx + vec3(-0.5, 0.5, -1.5);
    u_xlatb6 = 1.0<u_xlat7.x;
    u_xlat6.x = (u_xlatb6) ? u_xlat7.z : u_xlat7.x;
    u_xlatb18 = u_xlat7.x<0.0;
    u_xlat6.x = (u_xlatb18) ? u_xlat7.y : u_xlat6.x;
    u_xlat7.xyz = u_xlat6.xxx + vec3(1.0, 0.666666687, 0.333333343);
    u_xlat7.xyz = fract(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(6.0, 6.0, 6.0) + vec3(-3.0, -3.0, -3.0);
    u_xlat7.xyz = abs(u_xlat7.xyz) + vec3(-1.0, -1.0, -1.0);
    u_xlat7.xyz = clamp(u_xlat7.xyz, 0.0, 1.0);
    u_xlat7.xyz = u_xlat7.xyz + vec3(-1.0, -1.0, -1.0);
    u_xlat6.x = u_xlat0.x + 9.99999975e-05;
    u_xlat15.x = u_xlat1.x / u_xlat6.x;
    u_xlat1.xyz = u_xlat15.xxx * u_xlat7.xyz + vec3(1.0, 1.0, 1.0);
    u_xlat2.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat6.x = dot(u_xlat2.xyz, vec3(0.272228986, 0.674081981, 0.0536894985));
    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz + (-u_xlat6.xxx);
    u_xlat3.y = float(0.0);
    u_xlat15.y = float(0.0);
    u_xlat0.x = texture(sampler2D(_CurveHueVsSat, sampler_LinearClamp), u_xlat3.xy, _GlobalMipBias.x).x;
    u_xlat0.w = texture(sampler2D(_CurveSatVsSat, sampler_LinearClamp), u_xlat15.xy, _GlobalMipBias.x).x;
    u_xlat0.xw = u_xlat0.xw;
    u_xlat0.xw = clamp(u_xlat0.xw, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x + u_xlat0.x;
    u_xlat0.x = dot(u_xlat0.ww, u_xlat0.xx);
    u_xlat0.x = u_xlat0.x * u_xlat6.y;
    u_xlat0.x = dot(_HueSatCon.yy, u_xlat0.xx);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz + u_xlat6.xxx;
    u_xlat18 = max(u_xlat0.y, u_xlat0.x);
    u_xlat18 = max(u_xlat0.z, u_xlat18);
    u_xlat18 = u_xlat18 + 1.0;
    u_xlat18 = float(1.0) / float(u_xlat18);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + vec3(0.00390625, 0.00390625, 0.00390625);
    u_xlat0.w = 0.0;
    u_xlat1.x = texture(sampler2D(_CurveMaster, sampler_LinearClamp), u_xlat0.xw, _GlobalMipBias.x).x;
    u_xlat1.x = u_xlat1.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat7.x = texture(sampler2D(_CurveMaster, sampler_LinearClamp), u_xlat0.yw, _GlobalMipBias.x).x;
    u_xlat7.y = texture(sampler2D(_CurveMaster, sampler_LinearClamp), u_xlat0.zw, _GlobalMipBias.x).x;
    u_xlat1.yz = u_xlat7.xy;
    u_xlat1.yz = clamp(u_xlat1.yz, 0.0, 1.0);
    u_xlat0.xyz = u_xlat1.xyz + vec3(0.00390625, 0.00390625, 0.00390625);
    u_xlat0.w = 0.0;
    u_xlat1.x = texture(sampler2D(_CurveRed, sampler_LinearClamp), u_xlat0.xw, _GlobalMipBias.x).x;
    u_xlat1.x = u_xlat1.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat7.x = texture(sampler2D(_CurveGreen, sampler_LinearClamp), u_xlat0.yw, _GlobalMipBias.x).x;
    u_xlat7.y = texture(sampler2D(_CurveBlue, sampler_LinearClamp), u_xlat0.zw, _GlobalMipBias.x).x;
    u_xlat1.yz = u_xlat7.xy;
    u_xlat1.yz = clamp(u_xlat1.yz, 0.0, 1.0);
    u_xlat0.x = max(u_xlat1.y, u_xlat1.x);
    u_xlat0.x = max(u_xlat1.z, u_xlat0.x);
    u_xlat0.x = (-u_xlat0.x) + 1.0;
    u_xlat0.x = float(1.0) / float(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.x = dot(vec3(0.695452213, 0.140678704, 0.163869068), u_xlat0.xyz);
    u_xlat7.y = dot(vec3(0.0447945632, 0.859671116, 0.0955343172), u_xlat0.xyz);
    u_xlat7.z = dot(vec3(-0.00552588282, 0.00402521016, 1.00150073), u_xlat0.xyz);
    u_xlat0.xyz = (-u_xlat7.yxz) + u_xlat7.zyx;
    u_xlat0.xy = u_xlat0.xy * u_xlat7.zy;
    u_xlat0.x = u_xlat0.y + u_xlat0.x;
    u_xlat0.x = u_xlat7.x * u_xlat0.z + u_xlat0.x;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat6.x = u_xlat7.y + u_xlat7.z;
    u_xlat6.x = u_xlat7.x + u_xlat6.x;
    u_xlat0.x = u_xlat0.x * 1.75 + u_xlat6.x;
    u_xlat6.x = u_xlat0.x * 0.333333343;
    u_xlat6.x = 0.0799999982 / u_xlat6.x;
    u_xlat12 = min(u_xlat7.y, u_xlat7.x);
    u_xlat12 = min(u_xlat7.z, u_xlat12);
    u_xlat12 = max(u_xlat12, 9.99999975e-05);
    u_xlat18 = max(u_xlat7.y, u_xlat7.x);
    u_xlat18 = max(u_xlat7.z, u_xlat18);
    u_xlat2.xy = max(vec2(u_xlat18), vec2(9.99999975e-05, 0.00999999978));
    u_xlat12 = (-u_xlat12) + u_xlat2.x;
    u_xlat6.y = u_xlat12 / u_xlat2.y;
    u_xlat6.xz = u_xlat6.xy + vec2(-0.5, -0.400000006);
    u_xlat1.x = u_xlat6.z * 2.5;
    u_xlatb18 = u_xlat6.z>=0.0;
    u_xlat18 = (u_xlatb18) ? 1.0 : -1.0;
    u_xlat1.x = -abs(u_xlat1.x) + 1.0;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat1.x = (-u_xlat1.x) * u_xlat1.x + 1.0;
    u_xlat18 = u_xlat18 * u_xlat1.x + 1.0;
    u_xlat18 = u_xlat18 * 0.0250000004;
    u_xlat6.x = u_xlat6.x * u_xlat18;
    u_xlatb1.x = u_xlat0.x>=0.479999989;
    u_xlatb0.x = 0.159999996>=u_xlat0.x;
    u_xlat6.x = (u_xlatb1.x) ? 0.0 : u_xlat6.x;
    u_xlat0.x = (u_xlatb0.x) ? u_xlat18 : u_xlat6.x;
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat2.yzw = u_xlat0.xxx * u_xlat7.xyz;
    u_xlat6.x = (-u_xlat7.x) * u_xlat0.x + 0.0299999993;
    u_xlat18 = u_xlat7.y * u_xlat0.x + (-u_xlat2.w);
    u_xlat18 = u_xlat18 * 1.73205078;
    u_xlat1.x = u_xlat2.y * 2.0 + (-u_xlat2.z);
    u_xlat0.x = (-u_xlat7.z) * u_xlat0.x + u_xlat1.x;
    u_xlat1.x = max(abs(u_xlat0.x), abs(u_xlat18));
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat7.x = min(abs(u_xlat0.x), abs(u_xlat18));
    u_xlat1.x = u_xlat1.x * u_xlat7.x;
    u_xlat7.x = u_xlat1.x * u_xlat1.x;
    u_xlat13 = u_xlat7.x * 0.0208350997 + -0.0851330012;
    u_xlat13 = u_xlat7.x * u_xlat13 + 0.180141002;
    u_xlat13 = u_xlat7.x * u_xlat13 + -0.330299497;
    u_xlat7.x = u_xlat7.x * u_xlat13 + 0.999866009;
    u_xlat13 = u_xlat7.x * u_xlat1.x;
    u_xlat13 = u_xlat13 * -2.0 + 1.57079637;
    u_xlatb19 = abs(u_xlat0.x)<abs(u_xlat18);
    u_xlat13 = u_xlatb19 ? u_xlat13 : float(0.0);
    u_xlat19 = min(u_xlat0.x, u_xlat18);
    u_xlat18 = max(u_xlat0.x, u_xlat18);
    u_xlatb0.x = u_xlat0.x<(-u_xlat0.x);
    u_xlat0.x = u_xlatb0.x ? -3.14159274 : float(0.0);
    u_xlatb18 = u_xlat18>=(-u_xlat18);
    u_xlatb19 = u_xlat19<(-u_xlat19);
    u_xlatb18 = u_xlatb18 && u_xlatb19;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + u_xlat13;
    u_xlat0.x = u_xlat0.x + u_xlat1.x;
    u_xlat0.x = (u_xlatb18) ? (-u_xlat0.x) : u_xlat0.x;
    u_xlatb1.xy = equal(u_xlat2.zwzz, u_xlat2.yzyy).xy;
    u_xlatb18 = u_xlatb1.y && u_xlatb1.x;
    u_xlat0.x = u_xlat0.x * 57.2957802;
    u_xlat0.x = (u_xlatb18) ? 0.0 : u_xlat0.x;
    u_xlatb18 = u_xlat0.x<0.0;
    u_xlat1.x = u_xlat0.x + 360.0;
    u_xlat0.x = (u_xlatb18) ? u_xlat1.x : u_xlat0.x;
    u_xlatb18 = 180.0<u_xlat0.x;
    u_xlat1.xy = u_xlat0.xx + vec2(360.0, -360.0);
    u_xlat18 = (u_xlatb18) ? u_xlat1.y : u_xlat0.x;
    u_xlatb0.x = u_xlat0.x<-180.0;
    u_xlat0.x = (u_xlatb0.x) ? u_xlat1.x : u_xlat18;
    u_xlat0.x = u_xlat0.x * 0.0148148146;
    u_xlat0.x = -abs(u_xlat0.x) + 1.0;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat18 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat18;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat6.y * u_xlat0.x;
    u_xlat0.x = u_xlat6.x * u_xlat0.x;
    u_xlat2.x = u_xlat0.x * 0.180000007 + u_xlat2.y;
    u_xlat0.x = dot(vec3(1.45143926, -0.236510754, -0.214928567), u_xlat2.xzw);
    u_xlat0.y = dot(vec3(-0.0765537769, 1.17622972, -0.0996759236), u_xlat2.xzw);
    u_xlat0.z = dot(vec3(0.00831614807, -0.00603244966, 0.997716308), u_xlat2.xzw);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.272228986, 0.674081981, 0.0536894985));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.959999979, 0.959999979, 0.959999979) + vec3(u_xlat18);
    u_xlat1.xyz = u_xlat0.xyz + vec3(0.0245785993, 0.0245785993, 0.0245785993);
    u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(-9.05370034e-05, -9.05370034e-05, -9.05370034e-05);
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.983729005, 0.983729005, 0.983729005) + vec3(0.432951003, 0.432951003, 0.432951003);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.238080993, 0.238080993, 0.238080993);
    u_xlat0.xyz = u_xlat1.xyz / u_xlat0.xyz;
    u_xlat1.z = dot(vec3(-0.00557464967, 0.0040607336, 1.01033914), u_xlat0.xyz);
    u_xlat1.x = dot(vec3(0.662454188, 0.134004205, 0.156187683), u_xlat0.xyz);
    u_xlat1.y = dot(vec3(0.272228718, 0.674081743, 0.0536895171), u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);
    u_xlat0.xy = u_xlat1.xy / u_xlat0.xx;
    u_xlat18 = max(u_xlat1.y, 0.0);
    u_xlat18 = min(u_xlat18, 65504.0);
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * 0.981100023;
    u_xlat1.y = exp2(u_xlat18);
    u_xlat18 = (-u_xlat0.x) + 1.0;
    u_xlat0.z = (-u_xlat0.y) + u_xlat18;
    u_xlat6.x = max(u_xlat0.y, 9.99999975e-05);
    u_xlat6.x = u_xlat1.y / u_xlat6.x;
    u_xlat1.xz = u_xlat6.xx * u_xlat0.xz;
    u_xlat0.x = dot(vec3(1.6410234, -0.324803293, -0.236424699), u_xlat1.xyz);
    u_xlat0.y = dot(vec3(-0.663662851, 1.61533165, 0.0167563483), u_xlat1.xyz);
    u_xlat0.z = dot(vec3(0.0117218941, -0.00828444213, 0.988394856), u_xlat1.xyz);
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.272228986, 0.674081981, 0.0536894985));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.930000007, 0.930000007, 0.930000007) + vec3(u_xlat18);
    u_xlat1.x = dot(vec3(0.662454188, 0.134004205, 0.156187683), u_xlat0.xyz);
    u_xlat1.y = dot(vec3(0.272228718, 0.674081743, 0.0536895171), u_xlat0.xyz);
    u_xlat1.z = dot(vec3(-0.00557464967, 0.0040607336, 1.01033914), u_xlat0.xyz);
    u_xlat0.x = dot(vec3(0.987223983, -0.00611326983, 0.0159533005), u_xlat1.xyz);
    u_xlat0.y = dot(vec3(-0.00759836007, 1.00186002, 0.00533019984), u_xlat1.xyz);
    u_xlat0.z = dot(vec3(0.00307257008, -0.00509594986, 1.08168006), u_xlat1.xyz);
    SV_Target0.x = dot(vec3(3.2409699, -1.5373832, -0.498610765), u_xlat0.xyz);
    SV_Target0.y = dot(vec3(-0.969243646, 1.8759675, 0.0415550582), u_xlat0.xyz);
    SV_Target0.z = dot(vec3(0.0556300804, -0.203976959, 1.05697155), u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}


struct PGlobals {
  x_Phase : f32,
  @size(12)
  padding : u32,
  x_NoiseParameters : vec3<f32>,
}

var<private> vs_TEXCOORD1 : vec2<f32>;

@group(1) @binding(0) var<uniform> x_27 : PGlobals;

var<private> SV_Target0 : vec4<f32>;

var<private> gl_FragCoord : vec4<f32>;

fn main_1() {
  var u_xlat0 : vec4<f32>;
  var u_xlat1 : vec3<f32>;
  var u_xlat2 : vec4<f32>;
  var u_xlat18 : vec3<f32>;
  var u_xlat3 : vec4<f32>;
  var u_xlat52 : f32;
  var u_xlat4 : vec4<f32>;
  var u_xlat5 : vec4<f32>;
  var u_xlat20 : vec3<f32>;
  var u_xlat6 : vec4<f32>;
  var u_xlat54 : f32;
  var u_xlat23 : vec3<f32>;
  var u_xlat7 : vec4<f32>;
  var u_xlat8 : vec4<f32>;
  var u_xlat9 : vec4<f32>;
  var u_xlat40 : vec2<f32>;
  var u_xlat35 : vec2<f32>;
  var u_xlat10 : vec4<f32>;
  var u_xlat37 : f32;
  var u_xlat11 : vec4<f32>;
  var u_xlat57 : f32;
  var u_xlat12 : vec4<f32>;
  var u_xlat13 : vec4<f32>;
  var u_xlat14 : vec4<f32>;
  var u_xlat15 : vec4<f32>;
  var u_xlat16 : vec4<f32>;
  var u_xlat42 : vec2<f32>;
  var u_xlat32 : f32;
  var u_xlat59 : f32;
  var u_xlat34 : vec2<f32>;
  var u_xlat17 : vec3<f32>;
  var u_xlat51 : f32;
  var u_xlat19 : f32;
  var u_xlat_precise_vec4 : vec4<f32>;
  var u_xlat_precise_ivec4 : vec4<i32>;
  var u_xlat_precise_bvec4 : vec4<bool>;
  var u_xlat_precise_uvec4 : vec4<u32>;
  let x_13 : vec2<f32> = vs_TEXCOORD1;
  u_xlat0 = ((vec4<f32>(x_13.x, x_13.y, x_13.x, x_13.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-2.0f, -2.0f, -1.0f, -1.0f));
  let x_32 : f32 = x_27.x_Phase;
  u_xlat1.x = fract(x_32);
  let x_39 : vec3<f32> = u_xlat1;
  let x_44 : vec4<f32> = u_xlat0;
  u_xlat2 = ((vec4<f32>(x_39.x, x_39.x, x_39.x, x_39.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_44);
  let x_47 : vec4<f32> = u_xlat2;
  let x_52 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat18.x = dot(vec2<f32>(x_47.x, x_47.y), vec2<f32>(x_52.x, x_52.y));
  let x_56 : vec4<f32> = u_xlat2;
  let x_59 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat18.y = dot(vec2<f32>(x_56.z, x_56.w), vec2<f32>(x_59.x, x_59.y));
  let x_64 : vec3<f32> = u_xlat18;
  let x_66 : vec2<f32> = sin(vec2<f32>(x_64.x, x_64.y));
  let x_67 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_66.x, x_66.y, x_67.z);
  let x_69 : vec3<f32> = u_xlat18;
  let x_73 : f32 = x_27.x_NoiseParameters.z;
  let x_75 : f32 = x_27.x_NoiseParameters.z;
  let x_77 : vec2<f32> = (vec2<f32>(x_69.x, x_69.y) * vec2<f32>(x_73, x_75));
  let x_78 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_77.x, x_77.y, x_78.z);
  let x_80 : vec2<f32> = vs_TEXCOORD1;
  u_xlat2 = ((vec4<f32>(x_80.x, x_80.y, x_80.x, x_80.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-1.0f, -2.0f, 0.0f, -2.0f));
  let x_87 : vec3<f32> = u_xlat1;
  let x_90 : vec4<f32> = u_xlat2;
  u_xlat3 = ((vec4<f32>(x_87.x, x_87.x, x_87.x, x_87.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_90);
  let x_93 : vec4<f32> = u_xlat3;
  let x_96 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_93.x, x_93.y), vec2<f32>(x_96.x, x_96.y));
  let x_99 : vec4<f32> = u_xlat3;
  let x_102 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat3.x = dot(vec2<f32>(x_99.z, x_99.w), vec2<f32>(x_102.x, x_102.y));
  let x_107 : f32 = u_xlat3.x;
  u_xlat3.x = sin(x_107);
  let x_111 : f32 = u_xlat3.x;
  let x_113 : f32 = x_27.x_NoiseParameters.z;
  u_xlat3.x = (x_111 * x_113);
  let x_117 : f32 = u_xlat3.x;
  u_xlat3.x = fract(x_117);
  let x_120 : f32 = u_xlat52;
  u_xlat52 = sin(x_120);
  let x_122 : f32 = u_xlat52;
  let x_124 : f32 = x_27.x_NoiseParameters.z;
  u_xlat18.z = (x_122 * x_124);
  let x_127 : vec3<f32> = u_xlat18;
  u_xlat18 = fract(x_127);
  let x_130 : f32 = u_xlat18.z;
  let x_134 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_130 * 2.0f) + x_134);
  let x_138 : f32 = u_xlat3.x;
  let x_141 : f32 = u_xlat18.z;
  u_xlat18.z = ((x_138 * 2.0f) + x_141);
  let x_145 : f32 = u_xlat3.x;
  let x_147 : f32 = u_xlat18.x;
  u_xlat18.x = (x_145 + x_147);
  let x_151 : vec2<f32> = vs_TEXCOORD1;
  u_xlat4 = ((vec4<f32>(x_151.x, x_151.y, x_151.x, x_151.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-2.0f, -1.0f, 0.0f, -1.0f));
  let x_157 : vec3<f32> = u_xlat1;
  let x_160 : vec4<f32> = u_xlat4;
  u_xlat5 = ((vec4<f32>(x_157.x, x_157.x, x_157.x, x_157.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_160);
  let x_163 : vec4<f32> = u_xlat5;
  let x_166 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.x = dot(vec2<f32>(x_163.x, x_163.y), vec2<f32>(x_166.x, x_166.y));
  let x_170 : vec4<f32> = u_xlat5;
  let x_173 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.y = dot(vec2<f32>(x_170.z, x_170.w), vec2<f32>(x_173.x, x_173.y));
  let x_177 : vec3<f32> = u_xlat20;
  let x_179 : vec2<f32> = sin(vec2<f32>(x_177.x, x_177.y));
  let x_180 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_179.x, x_179.y, x_180.z);
  let x_182 : vec3<f32> = u_xlat20;
  let x_185 : f32 = x_27.x_NoiseParameters.z;
  let x_187 : f32 = x_27.x_NoiseParameters.z;
  let x_189 : vec2<f32> = (vec2<f32>(x_182.x, x_182.y) * vec2<f32>(x_185, x_187));
  let x_190 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_189.x, x_189.y, x_190.z);
  let x_192 : vec3<f32> = u_xlat20;
  let x_194 : vec2<f32> = fract(vec2<f32>(x_192.x, x_192.y));
  let x_195 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_194.x, x_194.y, x_195.z);
  let x_198 : f32 = u_xlat20.x;
  let x_201 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_198 * 2.0f) + x_201);
  let x_205 : f32 = u_xlat18.y;
  let x_208 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_205 * 2.0f) + x_208);
  let x_212 : f32 = u_xlat20.y;
  let x_214 : f32 = u_xlat20.x;
  u_xlat20.x = (x_212 + x_214);
  let x_218 : f32 = u_xlat18.y;
  let x_222 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_218 * -12.0f) + x_222);
  let x_226 : f32 = u_xlat20.y;
  let x_229 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_226 * 2.0f) + x_229);
  let x_232 : vec2<f32> = vs_TEXCOORD1;
  u_xlat5 = ((vec4<f32>(x_232.x, x_232.y, x_232.x, x_232.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-2.0f, 0.0f, -1.0f, 0.0f));
  let x_238 : vec3<f32> = u_xlat1;
  let x_241 : vec4<f32> = u_xlat5;
  u_xlat6 = ((vec4<f32>(x_238.x, x_238.x, x_238.x, x_238.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_241);
  let x_244 : vec4<f32> = u_xlat6;
  let x_247 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat54 = dot(vec2<f32>(x_244.x, x_244.y), vec2<f32>(x_247.x, x_247.y));
  let x_250 : vec4<f32> = u_xlat6;
  let x_253 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat6.x = dot(vec2<f32>(x_250.z, x_250.w), vec2<f32>(x_253.x, x_253.y));
  let x_258 : f32 = u_xlat6.x;
  u_xlat6.x = sin(x_258);
  let x_262 : f32 = u_xlat6.x;
  let x_264 : f32 = x_27.x_NoiseParameters.z;
  u_xlat6.x = (x_262 * x_264);
  let x_268 : f32 = u_xlat6.x;
  u_xlat6.x = fract(x_268);
  let x_271 : f32 = u_xlat54;
  u_xlat54 = sin(x_271);
  let x_273 : f32 = u_xlat54;
  let x_275 : f32 = x_27.x_NoiseParameters.z;
  u_xlat54 = (x_273 * x_275);
  let x_277 : f32 = u_xlat54;
  u_xlat54 = fract(x_277);
  let x_280 : f32 = u_xlat18.x;
  let x_281 : f32 = u_xlat54;
  u_xlat18.x = (x_280 + x_281);
  let x_285 : f32 = u_xlat6.x;
  let x_288 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_285 * 2.0f) + x_288);
  let x_292 : vec3<f32> = u_xlat1;
  u_xlat23 = (vec3<f32>(x_292.x, x_292.x, x_292.x) * vec3<f32>(0.07f, 0.109999999f, 0.129999995f));
  let x_299 : vec2<f32> = vs_TEXCOORD1;
  let x_302 : vec3<f32> = u_xlat23;
  let x_304 : vec2<f32> = ((x_299 * vec2<f32>(128.0f, 128.0f)) + vec2<f32>(x_302.z, x_302.z));
  let x_305 : vec4<f32> = u_xlat7;
  u_xlat7 = vec4<f32>(x_304.x, x_304.y, x_305.z, x_305.w);
  let x_308 : vec2<f32> = vs_TEXCOORD1;
  let x_311 : vec3<f32> = u_xlat23;
  u_xlat8 = ((vec4<f32>(x_308.x, x_308.y, x_308.x, x_308.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(x_311.x, x_311.x, x_311.y, x_311.y));
  let x_314 : vec4<f32> = u_xlat7;
  let x_317 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat23.x = dot(vec2<f32>(x_314.x, x_314.y), vec2<f32>(x_317.x, x_317.y));
  let x_322 : f32 = u_xlat23.x;
  u_xlat23.x = sin(x_322);
  let x_326 : f32 = u_xlat23.x;
  let x_328 : f32 = x_27.x_NoiseParameters.z;
  u_xlat23.x = (x_326 * x_328);
  let x_332 : f32 = u_xlat23.x;
  u_xlat23.x = fract(x_332);
  let x_335 : vec2<f32> = vs_TEXCOORD1;
  u_xlat7 = ((vec4<f32>(x_335.x, x_335.y, x_335.x, x_335.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(1.0f, -2.0f, 1.0f, -1.0f));
  let x_342 : vec3<f32> = u_xlat1;
  let x_345 : vec4<f32> = u_xlat7;
  u_xlat9 = ((vec4<f32>(x_342.x, x_342.x, x_342.x, x_342.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_345);
  let x_349 : vec4<f32> = u_xlat9;
  let x_352 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat40.x = dot(vec2<f32>(x_349.x, x_349.y), vec2<f32>(x_352.x, x_352.y));
  let x_356 : vec4<f32> = u_xlat9;
  let x_359 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat40.y = dot(vec2<f32>(x_356.z, x_356.w), vec2<f32>(x_359.x, x_359.y));
  let x_363 : vec2<f32> = u_xlat40;
  u_xlat40 = sin(x_363);
  let x_365 : vec2<f32> = u_xlat40;
  let x_367 : f32 = x_27.x_NoiseParameters.z;
  let x_369 : f32 = x_27.x_NoiseParameters.z;
  u_xlat40 = (x_365 * vec2<f32>(x_367, x_369));
  let x_372 : vec2<f32> = u_xlat40;
  let x_373 : vec2<f32> = fract(x_372);
  let x_374 : vec3<f32> = u_xlat23;
  u_xlat23 = vec3<f32>(x_374.x, x_373.x, x_373.y);
  let x_376 : vec3<f32> = u_xlat18;
  let x_378 : vec3<f32> = u_xlat23;
  let x_380 : vec2<f32> = (vec2<f32>(x_376.x, x_376.z) + vec2<f32>(x_378.x, x_378.y));
  let x_381 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_380.x, x_381.y, x_380.y);
  let x_384 : f32 = u_xlat23.y;
  let x_387 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_384 * 2.0f) + x_387);
  let x_391 : f32 = u_xlat18.y;
  let x_394 : f32 = u_xlat18.z;
  u_xlat52 = ((x_391 * 2.0f) + x_394);
  let x_398 : f32 = u_xlat20.y;
  let x_401 : f32 = u_xlat18.y;
  u_xlat35.x = ((x_398 * 2.0f) + x_401);
  let x_405 : f32 = u_xlat23.z;
  let x_407 : f32 = u_xlat35.x;
  u_xlat35.x = (x_405 + x_407);
  let x_411 : f32 = u_xlat6.x;
  let x_414 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_411 * 2.0f) + x_414);
  let x_418 : f32 = u_xlat23.x;
  let x_421 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_418 * -12.0f) + x_421);
  let x_425 : f32 = u_xlat20.y;
  let x_427 : f32 = u_xlat52;
  u_xlat52 = ((x_425 * -12.0f) + x_427);
  let x_430 : f32 = u_xlat23.z;
  let x_432 : f32 = u_xlat52;
  u_xlat52 = ((x_430 * 2.0f) + x_432);
  let x_435 : f32 = u_xlat6.x;
  let x_436 : f32 = u_xlat52;
  u_xlat52 = (x_435 + x_436);
  let x_439 : f32 = u_xlat23.x;
  let x_441 : f32 = u_xlat52;
  u_xlat52 = ((x_439 * 2.0f) + x_441);
  let x_443 : vec2<f32> = vs_TEXCOORD1;
  u_xlat9 = ((vec4<f32>(x_443.x, x_443.y, x_443.x, x_443.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(1.0f, 0.0f, 2.0f, -2.0f));
  let x_449 : vec3<f32> = u_xlat1;
  let x_452 : vec4<f32> = u_xlat9;
  u_xlat10 = ((vec4<f32>(x_449.x, x_449.x, x_449.x, x_449.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_452);
  let x_454 : vec4<f32> = u_xlat10;
  let x_457 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat40.x = dot(vec2<f32>(x_454.x, x_454.y), vec2<f32>(x_457.x, x_457.y));
  let x_461 : vec4<f32> = u_xlat10;
  let x_464 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat10.x = dot(vec2<f32>(x_461.z, x_461.w), vec2<f32>(x_464.x, x_464.y));
  let x_469 : f32 = u_xlat10.x;
  u_xlat10.x = sin(x_469);
  let x_473 : f32 = u_xlat10.x;
  let x_475 : f32 = x_27.x_NoiseParameters.z;
  u_xlat10.x = (x_473 * x_475);
  let x_479 : f32 = u_xlat10.x;
  u_xlat10.x = fract(x_479);
  let x_483 : f32 = u_xlat3.x;
  let x_485 : f32 = u_xlat10.x;
  u_xlat3.x = (x_483 + x_485);
  let x_489 : f32 = u_xlat20.y;
  let x_492 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_489 * 2.0f) + x_492);
  let x_497 : f32 = u_xlat23.z;
  let x_500 : f32 = u_xlat20.y;
  u_xlat37 = ((x_497 * 2.0f) + x_500);
  let x_503 : f32 = u_xlat23.z;
  let x_506 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_503 * -12.0f) + x_506);
  let x_510 : f32 = u_xlat40.x;
  u_xlat40.x = sin(x_510);
  let x_514 : f32 = u_xlat40.x;
  let x_516 : f32 = x_27.x_NoiseParameters.z;
  u_xlat40.x = (x_514 * x_516);
  let x_520 : f32 = u_xlat40.x;
  u_xlat23.y = fract(x_520);
  let x_523 : f32 = u_xlat52;
  let x_525 : f32 = u_xlat23.y;
  u_xlat52 = (x_523 + x_525);
  let x_527 : f32 = u_xlat52;
  u_xlat52 = (x_527 * 0.083333336f);
  let x_531 : f32 = u_xlat18.x;
  let x_534 : f32 = u_xlat52;
  u_xlat18.x = ((x_531 * 0.041666668f) + x_534);
  let x_537 : vec2<f32> = vs_TEXCOORD1;
  u_xlat10 = ((vec4<f32>(x_537.x, x_537.y, x_537.x, x_537.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(2.0f, -1.0f, 2.0f, 0.0f));
  let x_543 : vec3<f32> = u_xlat1;
  let x_546 : vec4<f32> = u_xlat10;
  u_xlat11 = ((vec4<f32>(x_543.x, x_543.x, x_543.x, x_543.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_546);
  let x_548 : vec4<f32> = u_xlat11;
  let x_551 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_548.x, x_548.y), vec2<f32>(x_551.x, x_551.y));
  let x_555 : vec4<f32> = u_xlat11;
  let x_558 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat57 = dot(vec2<f32>(x_555.z, x_555.w), vec2<f32>(x_558.x, x_558.y));
  let x_561 : f32 = u_xlat57;
  u_xlat57 = sin(x_561);
  let x_563 : f32 = u_xlat57;
  let x_565 : f32 = x_27.x_NoiseParameters.z;
  u_xlat57 = (x_563 * x_565);
  let x_567 : f32 = u_xlat57;
  u_xlat23.z = fract(x_567);
  let x_570 : f32 = u_xlat52;
  u_xlat52 = sin(x_570);
  let x_572 : f32 = u_xlat52;
  let x_574 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_572 * x_574);
  let x_576 : f32 = u_xlat52;
  u_xlat52 = fract(x_576);
  let x_578 : f32 = u_xlat52;
  let x_581 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_578 * 2.0f) + x_581);
  let x_584 : f32 = u_xlat52;
  let x_585 : f32 = u_xlat37;
  u_xlat52 = (x_584 + x_585);
  let x_588 : f32 = u_xlat23.x;
  let x_590 : f32 = u_xlat52;
  u_xlat52 = ((x_588 * 2.0f) + x_590);
  let x_593 : f32 = u_xlat23.y;
  let x_595 : f32 = u_xlat52;
  u_xlat52 = ((x_593 * -12.0f) + x_595);
  let x_598 : f32 = u_xlat23.z;
  let x_600 : f32 = u_xlat52;
  u_xlat52 = ((x_598 * 2.0f) + x_600);
  let x_603 : f32 = u_xlat23.x;
  let x_605 : f32 = u_xlat3.x;
  u_xlat3.x = (x_603 + x_605);
  let x_609 : f32 = u_xlat23.y;
  let x_612 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_609 * 2.0f) + x_612);
  let x_616 : f32 = u_xlat23.z;
  let x_618 : f32 = u_xlat3.x;
  u_xlat3.x = (x_616 + x_618);
  let x_622 : f32 = u_xlat3.x;
  let x_625 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_622 * 0.041666668f) + x_625);
  let x_628 : f32 = u_xlat54;
  let x_631 : f32 = u_xlat20.x;
  u_xlat3.x = ((x_628 * 2.0f) + x_631);
  let x_635 : f32 = u_xlat6.x;
  let x_637 : f32 = u_xlat54;
  u_xlat20.x = ((x_635 * 2.0f) + x_637);
  let x_641 : f32 = u_xlat6.x;
  let x_644 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_641 * -12.0f) + x_644);
  let x_648 : f32 = u_xlat23.x;
  let x_651 : f32 = u_xlat6.x;
  u_xlat20.y = ((x_648 * 2.0f) + x_651);
  let x_655 : f32 = u_xlat23.x;
  let x_658 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_655 * 2.0f) + x_658);
  let x_662 : f32 = u_xlat23.y;
  let x_665 : f32 = u_xlat23.x;
  u_xlat20.z = ((x_662 * 2.0f) + x_665);
  let x_669 : f32 = u_xlat23.y;
  let x_672 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_669 * 2.0f) + x_672);
  let x_675 : vec3<f32> = u_xlat23;
  let x_676 : vec3<f32> = u_xlat20;
  u_xlat20 = (x_675 + x_676);
  let x_678 : vec2<f32> = vs_TEXCOORD1;
  u_xlat6 = ((vec4<f32>(x_678.x, x_678.y, x_678.x, x_678.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-2.0f, 1.0f, -1.0f, 1.0f));
  let x_683 : vec3<f32> = u_xlat1;
  let x_686 : vec4<f32> = u_xlat6;
  u_xlat11 = ((vec4<f32>(x_683.x, x_683.x, x_683.x, x_683.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_686);
  let x_688 : vec4<f32> = u_xlat11;
  let x_691 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat11.x = dot(vec2<f32>(x_688.x, x_688.y), vec2<f32>(x_691.x, x_691.y));
  let x_695 : vec4<f32> = u_xlat11;
  let x_698 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat11.y = dot(vec2<f32>(x_695.z, x_695.w), vec2<f32>(x_698.x, x_698.y));
  let x_702 : vec4<f32> = u_xlat11;
  let x_704 : vec2<f32> = sin(vec2<f32>(x_702.x, x_702.y));
  let x_705 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_704.x, x_704.y, x_705.z, x_705.w);
  let x_707 : vec4<f32> = u_xlat11;
  let x_710 : f32 = x_27.x_NoiseParameters.z;
  let x_712 : f32 = x_27.x_NoiseParameters.z;
  let x_714 : vec2<f32> = (vec2<f32>(x_707.x, x_707.y) * vec2<f32>(x_710, x_712));
  let x_715 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_714.x, x_714.y, x_715.z, x_715.w);
  let x_717 : vec4<f32> = u_xlat11;
  let x_719 : vec2<f32> = fract(vec2<f32>(x_717.x, x_717.y));
  let x_720 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_719.x, x_719.y, x_720.z, x_720.w);
  let x_723 : f32 = u_xlat3.x;
  let x_725 : f32 = u_xlat11.x;
  u_xlat3.x = (x_723 + x_725);
  let x_729 : f32 = u_xlat11.x;
  let x_732 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_729 * 2.0f) + x_732);
  let x_736 : f32 = u_xlat11.y;
  let x_739 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_736 * -12.0f) + x_739);
  let x_743 : f32 = u_xlat11.y;
  let x_746 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_743 * 2.0f) + x_746);
  let x_750 : vec2<f32> = vs_TEXCOORD1;
  u_xlat12 = ((vec4<f32>(x_750.x, x_750.y, x_750.x, x_750.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(0.0f, 1.0f, 1.0f, 1.0f));
  let x_756 : vec3<f32> = u_xlat1;
  let x_759 : vec4<f32> = u_xlat12;
  u_xlat13 = ((vec4<f32>(x_756.x, x_756.x, x_756.x, x_756.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_759);
  let x_761 : vec4<f32> = u_xlat13;
  let x_764 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat11.x = dot(vec2<f32>(x_761.x, x_761.y), vec2<f32>(x_764.x, x_764.y));
  let x_768 : vec4<f32> = u_xlat13;
  let x_771 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat11.z = dot(vec2<f32>(x_768.z, x_768.w), vec2<f32>(x_771.x, x_771.y));
  let x_775 : vec4<f32> = u_xlat11;
  let x_777 : vec2<f32> = sin(vec2<f32>(x_775.x, x_775.z));
  let x_778 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_777.x, x_778.y, x_777.y, x_778.w);
  let x_780 : vec4<f32> = u_xlat11;
  let x_783 : f32 = x_27.x_NoiseParameters.z;
  let x_785 : f32 = x_27.x_NoiseParameters.z;
  let x_787 : vec2<f32> = (vec2<f32>(x_780.x, x_780.z) * vec2<f32>(x_783, x_785));
  let x_788 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_787.x, x_788.y, x_787.y, x_788.w);
  let x_790 : vec4<f32> = u_xlat11;
  let x_792 : vec2<f32> = fract(vec2<f32>(x_790.x, x_790.z));
  let x_793 : vec4<f32> = u_xlat11;
  u_xlat11 = vec4<f32>(x_792.x, x_793.y, x_792.y, x_793.w);
  let x_796 : f32 = u_xlat3.x;
  let x_798 : f32 = u_xlat11.x;
  u_xlat3.x = (x_796 + x_798);
  let x_802 : f32 = u_xlat3.x;
  let x_805 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_802 * 0.083333336f) + x_805);
  let x_809 : f32 = u_xlat35.x;
  let x_811 : f32 = u_xlat11.y;
  u_xlat35.x = (x_809 + x_811);
  let x_815 : f32 = u_xlat11.y;
  let x_818 : f32 = u_xlat20.y;
  u_xlat3.x = ((x_815 * 2.0f) + x_818);
  let x_822 : f32 = u_xlat11.x;
  let x_825 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_822 * -12.0f) + x_825);
  let x_829 : f32 = u_xlat11.z;
  let x_832 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_829 * 2.0f) + x_832);
  let x_836 : f32 = u_xlat11.x;
  let x_839 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_836 * 2.0f) + x_839);
  let x_843 : f32 = u_xlat11.z;
  let x_845 : f32 = u_xlat35.x;
  u_xlat35.x = (x_843 + x_845);
  let x_849 : f32 = u_xlat35.x;
  let x_853 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_849 * 0.166666672f) + x_853);
  let x_856 : f32 = u_xlat52;
  let x_858 : f32 = u_xlat11.x;
  u_xlat35.x = (x_856 + x_858);
  let x_862 : f32 = u_xlat11.z;
  let x_865 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_862 * 2.0f) + x_865);
  let x_868 : vec2<f32> = vs_TEXCOORD1;
  u_xlat13 = ((vec4<f32>(x_868.x, x_868.y, x_868.x, x_868.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(2.0f, 1.0f, -2.0f, 2.0f));
  let x_874 : vec3<f32> = u_xlat1;
  let x_877 : vec4<f32> = u_xlat13;
  u_xlat14 = ((vec4<f32>(x_874.x, x_874.x, x_874.x, x_874.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_877);
  let x_879 : vec4<f32> = u_xlat14;
  let x_882 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_879.x, x_879.y), vec2<f32>(x_882.x, x_882.y));
  let x_885 : vec4<f32> = u_xlat14;
  let x_888 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat37 = dot(vec2<f32>(x_885.z, x_885.w), vec2<f32>(x_888.x, x_888.y));
  let x_891 : f32 = u_xlat37;
  u_xlat37 = sin(x_891);
  let x_893 : f32 = u_xlat37;
  let x_895 : f32 = x_27.x_NoiseParameters.z;
  u_xlat37 = (x_893 * x_895);
  let x_897 : f32 = u_xlat37;
  u_xlat37 = fract(x_897);
  let x_899 : f32 = u_xlat52;
  u_xlat52 = sin(x_899);
  let x_901 : f32 = u_xlat52;
  let x_903 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_901 * x_903);
  let x_905 : f32 = u_xlat52;
  u_xlat52 = fract(x_905);
  let x_907 : f32 = u_xlat52;
  let x_909 : f32 = u_xlat35.x;
  u_xlat35.x = (x_907 + x_909);
  let x_913 : f32 = u_xlat35.x;
  let x_916 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_913 * 0.083333336f) + x_916);
  let x_920 : f32 = u_xlat11.x;
  let x_923 : f32 = u_xlat20.x;
  u_xlat35.x = ((x_920 * 2.0f) + x_923);
  let x_927 : f32 = u_xlat11.x;
  let x_930 : f32 = u_xlat20.z;
  u_xlat20.x = ((x_927 * 2.0f) + x_930);
  let x_934 : f32 = u_xlat11.z;
  let x_937 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_934 * -12.0f) + x_937);
  let x_940 : f32 = u_xlat52;
  let x_943 : f32 = u_xlat20.x;
  u_xlat35.y = ((x_940 * 2.0f) + x_943);
  let x_946 : f32 = u_xlat37;
  let x_948 : f32 = u_xlat35.x;
  u_xlat35.x = (x_946 + x_948);
  let x_951 : vec2<f32> = vs_TEXCOORD1;
  u_xlat11 = ((vec4<f32>(x_951.x, x_951.y, x_951.x, x_951.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(-1.0f, 2.0f, 0.0f, 2.0f));
  let x_956 : vec3<f32> = u_xlat1;
  let x_959 : vec4<f32> = u_xlat11;
  u_xlat14 = ((vec4<f32>(x_956.x, x_956.x, x_956.x, x_956.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_959);
  let x_961 : vec4<f32> = u_xlat14;
  let x_964 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.x = dot(vec2<f32>(x_961.x, x_961.y), vec2<f32>(x_964.x, x_964.y));
  let x_968 : vec4<f32> = u_xlat14;
  let x_971 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.y = dot(vec2<f32>(x_968.z, x_968.w), vec2<f32>(x_971.x, x_971.y));
  let x_975 : vec3<f32> = u_xlat20;
  let x_977 : vec2<f32> = sin(vec2<f32>(x_975.x, x_975.y));
  let x_978 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_977.x, x_977.y, x_978.z);
  let x_980 : vec3<f32> = u_xlat20;
  let x_983 : f32 = x_27.x_NoiseParameters.z;
  let x_985 : f32 = x_27.x_NoiseParameters.z;
  let x_987 : vec2<f32> = (vec2<f32>(x_980.x, x_980.y) * vec2<f32>(x_983, x_985));
  let x_988 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_987.x, x_987.y, x_988.z);
  let x_990 : vec3<f32> = u_xlat20;
  let x_992 : vec2<f32> = fract(vec2<f32>(x_990.x, x_990.y));
  let x_993 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_992.x, x_992.y, x_993.z);
  let x_996 : f32 = u_xlat20.x;
  let x_999 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_996 * 2.0f) + x_999);
  let x_1003 : f32 = u_xlat20.x;
  let x_1005 : f32 = u_xlat3.x;
  u_xlat3.x = (x_1003 + x_1005);
  let x_1009 : f32 = u_xlat20.y;
  let x_1012 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1009 * 2.0f) + x_1012);
  let x_1015 : vec2<f32> = u_xlat35;
  let x_1016 : vec3<f32> = u_xlat20;
  u_xlat35 = (x_1015 + vec2<f32>(x_1016.y, x_1016.y));
  let x_1020 : f32 = u_xlat35.x;
  let x_1023 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1020 * 0.041666668f) + x_1023);
  let x_1026 : vec2<f32> = vs_TEXCOORD1;
  u_xlat14 = ((vec4<f32>(x_1026.x, x_1026.y, x_1026.x, x_1026.y) * vec4<f32>(128.0f, 128.0f, 128.0f, 128.0f)) + vec4<f32>(1.0f, 2.0f, 2.0f, 2.0f));
  let x_1032 : vec3<f32> = u_xlat1;
  let x_1035 : vec4<f32> = u_xlat14;
  u_xlat15 = ((vec4<f32>(x_1032.x, x_1032.x, x_1032.x, x_1032.x) * vec4<f32>(0.129999995f, 0.129999995f, 0.129999995f, 0.129999995f)) + x_1035);
  let x_1037 : vec4<f32> = u_xlat15;
  let x_1040 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat35.x = dot(vec2<f32>(x_1037.x, x_1037.y), vec2<f32>(x_1040.x, x_1040.y));
  let x_1044 : vec4<f32> = u_xlat15;
  let x_1047 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.x = dot(vec2<f32>(x_1044.z, x_1044.w), vec2<f32>(x_1047.x, x_1047.y));
  let x_1052 : f32 = u_xlat20.x;
  u_xlat20.x = sin(x_1052);
  let x_1056 : f32 = u_xlat20.x;
  let x_1058 : f32 = x_27.x_NoiseParameters.z;
  u_xlat20.x = (x_1056 * x_1058);
  let x_1062 : f32 = u_xlat20.x;
  u_xlat20.x = fract(x_1062);
  let x_1066 : f32 = u_xlat35.x;
  u_xlat35.x = sin(x_1066);
  let x_1070 : f32 = u_xlat35.x;
  let x_1072 : f32 = x_27.x_NoiseParameters.z;
  u_xlat35.x = (x_1070 * x_1072);
  let x_1076 : f32 = u_xlat35.x;
  u_xlat35.x = fract(x_1076);
  let x_1080 : f32 = u_xlat35.x;
  let x_1082 : f32 = u_xlat3.x;
  u_xlat3.x = (x_1080 + x_1082);
  let x_1086 : f32 = u_xlat35.x;
  let x_1089 : f32 = u_xlat35.y;
  u_xlat35.x = ((x_1086 * 2.0f) + x_1089);
  let x_1093 : f32 = u_xlat20.x;
  let x_1095 : f32 = u_xlat35.x;
  u_xlat35.x = (x_1093 + x_1095);
  let x_1099 : f32 = u_xlat3.x;
  let x_1102 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1099 * 0.083333336f) + x_1102);
  let x_1106 : f32 = u_xlat35.x;
  let x_1109 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1106 * 0.041666668f) + x_1109);
  let x_1115 : f32 = u_xlat18.x;
  SV_Target0.z = (x_1115 * 0.0625f);
  let x_1120 : vec3<f32> = u_xlat1;
  let x_1124 : vec4<f32> = u_xlat0;
  u_xlat3 = ((vec4<f32>(x_1120.x, x_1120.x, x_1120.x, x_1120.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1124);
  let x_1126 : vec3<f32> = u_xlat1;
  let x_1130 : vec4<f32> = u_xlat0;
  u_xlat0 = ((vec4<f32>(x_1126.x, x_1126.x, x_1126.x, x_1126.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1130);
  let x_1132 : vec4<f32> = u_xlat3;
  let x_1135 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat18.x = dot(vec2<f32>(x_1132.x, x_1132.y), vec2<f32>(x_1135.x, x_1135.y));
  let x_1139 : vec4<f32> = u_xlat3;
  let x_1142 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat18.y = dot(vec2<f32>(x_1139.z, x_1139.w), vec2<f32>(x_1142.x, x_1142.y));
  let x_1146 : vec3<f32> = u_xlat18;
  let x_1148 : vec2<f32> = sin(vec2<f32>(x_1146.x, x_1146.y));
  let x_1149 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_1148.x, x_1148.y, x_1149.z);
  let x_1151 : vec3<f32> = u_xlat18;
  let x_1154 : f32 = x_27.x_NoiseParameters.z;
  let x_1156 : f32 = x_27.x_NoiseParameters.z;
  let x_1158 : vec2<f32> = (vec2<f32>(x_1151.x, x_1151.y) * vec2<f32>(x_1154, x_1156));
  let x_1159 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_1158.x, x_1158.y, x_1159.z);
  let x_1161 : vec3<f32> = u_xlat1;
  let x_1164 : vec4<f32> = u_xlat2;
  u_xlat3 = ((vec4<f32>(x_1161.x, x_1161.x, x_1161.x, x_1161.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1164);
  let x_1166 : vec3<f32> = u_xlat1;
  let x_1169 : vec4<f32> = u_xlat2;
  u_xlat2 = ((vec4<f32>(x_1166.x, x_1166.x, x_1166.x, x_1166.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1169);
  let x_1171 : vec4<f32> = u_xlat3;
  let x_1174 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_1171.x, x_1171.y), vec2<f32>(x_1174.x, x_1174.y));
  let x_1177 : vec4<f32> = u_xlat3;
  let x_1180 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat3.x = dot(vec2<f32>(x_1177.z, x_1177.w), vec2<f32>(x_1180.x, x_1180.y));
  let x_1185 : f32 = u_xlat3.x;
  u_xlat3.x = sin(x_1185);
  let x_1189 : f32 = u_xlat3.x;
  let x_1191 : f32 = x_27.x_NoiseParameters.z;
  u_xlat3.x = (x_1189 * x_1191);
  let x_1195 : f32 = u_xlat3.x;
  u_xlat3.x = fract(x_1195);
  let x_1198 : f32 = u_xlat52;
  u_xlat52 = sin(x_1198);
  let x_1200 : f32 = u_xlat52;
  let x_1202 : f32 = x_27.x_NoiseParameters.z;
  u_xlat18.z = (x_1200 * x_1202);
  let x_1205 : vec3<f32> = u_xlat18;
  u_xlat18 = fract(x_1205);
  let x_1208 : f32 = u_xlat18.z;
  let x_1211 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1208 * 2.0f) + x_1211);
  let x_1215 : f32 = u_xlat3.x;
  let x_1218 : f32 = u_xlat18.z;
  u_xlat18.z = ((x_1215 * 2.0f) + x_1218);
  let x_1222 : f32 = u_xlat3.x;
  let x_1224 : f32 = u_xlat18.x;
  u_xlat18.x = (x_1222 + x_1224);
  let x_1227 : vec3<f32> = u_xlat1;
  let x_1230 : vec4<f32> = u_xlat4;
  u_xlat15 = ((vec4<f32>(x_1227.x, x_1227.x, x_1227.x, x_1227.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1230);
  let x_1232 : vec3<f32> = u_xlat1;
  let x_1235 : vec4<f32> = u_xlat4;
  u_xlat4 = ((vec4<f32>(x_1232.x, x_1232.x, x_1232.x, x_1232.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1235);
  let x_1237 : vec4<f32> = u_xlat15;
  let x_1240 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.x = dot(vec2<f32>(x_1237.x, x_1237.y), vec2<f32>(x_1240.x, x_1240.y));
  let x_1244 : vec4<f32> = u_xlat15;
  let x_1247 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.y = dot(vec2<f32>(x_1244.z, x_1244.w), vec2<f32>(x_1247.x, x_1247.y));
  let x_1251 : vec3<f32> = u_xlat20;
  let x_1253 : vec2<f32> = sin(vec2<f32>(x_1251.x, x_1251.y));
  let x_1254 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_1253.x, x_1253.y, x_1254.z);
  let x_1256 : vec3<f32> = u_xlat20;
  let x_1259 : f32 = x_27.x_NoiseParameters.z;
  let x_1261 : f32 = x_27.x_NoiseParameters.z;
  let x_1263 : vec2<f32> = (vec2<f32>(x_1256.x, x_1256.y) * vec2<f32>(x_1259, x_1261));
  let x_1264 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_1263.x, x_1263.y, x_1264.z);
  let x_1266 : vec3<f32> = u_xlat20;
  let x_1268 : vec2<f32> = fract(vec2<f32>(x_1266.x, x_1266.y));
  let x_1269 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_1268.x, x_1268.y, x_1269.z);
  let x_1272 : f32 = u_xlat20.x;
  let x_1275 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1272 * 2.0f) + x_1275);
  let x_1279 : f32 = u_xlat18.y;
  let x_1282 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_1279 * 2.0f) + x_1282);
  let x_1286 : f32 = u_xlat20.y;
  let x_1288 : f32 = u_xlat20.x;
  u_xlat20.x = (x_1286 + x_1288);
  let x_1292 : f32 = u_xlat18.y;
  let x_1295 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1292 * -12.0f) + x_1295);
  let x_1299 : f32 = u_xlat20.y;
  let x_1302 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1299 * 2.0f) + x_1302);
  let x_1305 : vec3<f32> = u_xlat1;
  let x_1308 : vec4<f32> = u_xlat5;
  u_xlat15 = ((vec4<f32>(x_1305.x, x_1305.x, x_1305.x, x_1305.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1308);
  let x_1310 : vec3<f32> = u_xlat1;
  let x_1313 : vec4<f32> = u_xlat5;
  u_xlat5 = ((vec4<f32>(x_1310.x, x_1310.x, x_1310.x, x_1310.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1313);
  let x_1315 : vec4<f32> = u_xlat15;
  let x_1318 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat54 = dot(vec2<f32>(x_1315.x, x_1315.y), vec2<f32>(x_1318.x, x_1318.y));
  let x_1321 : vec4<f32> = u_xlat15;
  let x_1324 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat15.x = dot(vec2<f32>(x_1321.z, x_1321.w), vec2<f32>(x_1324.x, x_1324.y));
  let x_1329 : f32 = u_xlat15.x;
  u_xlat15.x = sin(x_1329);
  let x_1333 : f32 = u_xlat15.x;
  let x_1335 : f32 = x_27.x_NoiseParameters.z;
  u_xlat15.x = (x_1333 * x_1335);
  let x_1339 : f32 = u_xlat15.x;
  u_xlat15.x = fract(x_1339);
  let x_1342 : f32 = u_xlat54;
  u_xlat54 = sin(x_1342);
  let x_1344 : f32 = u_xlat54;
  let x_1346 : f32 = x_27.x_NoiseParameters.z;
  u_xlat54 = (x_1344 * x_1346);
  let x_1348 : f32 = u_xlat54;
  u_xlat54 = fract(x_1348);
  let x_1351 : f32 = u_xlat18.x;
  let x_1352 : f32 = u_xlat54;
  u_xlat18.x = (x_1351 + x_1352);
  let x_1356 : f32 = u_xlat15.x;
  let x_1359 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1356 * 2.0f) + x_1359);
  let x_1362 : vec4<f32> = u_xlat8;
  let x_1365 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.x = dot(vec2<f32>(x_1362.x, x_1362.y), vec2<f32>(x_1365.x, x_1365.y));
  let x_1369 : vec4<f32> = u_xlat8;
  let x_1372 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.y = dot(vec2<f32>(x_1369.z, x_1369.w), vec2<f32>(x_1372.x, x_1372.y));
  let x_1376 : vec4<f32> = u_xlat8;
  let x_1378 : vec2<f32> = sin(vec2<f32>(x_1376.x, x_1376.y));
  let x_1379 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1378.x, x_1378.y, x_1379.z, x_1379.w);
  let x_1381 : vec4<f32> = u_xlat8;
  let x_1384 : f32 = x_27.x_NoiseParameters.z;
  let x_1386 : f32 = x_27.x_NoiseParameters.z;
  let x_1388 : vec2<f32> = (vec2<f32>(x_1381.x, x_1381.y) * vec2<f32>(x_1384, x_1386));
  let x_1389 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1388.x, x_1388.y, x_1389.z, x_1389.w);
  let x_1391 : vec4<f32> = u_xlat8;
  let x_1393 : vec2<f32> = fract(vec2<f32>(x_1391.x, x_1391.y));
  let x_1394 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1393.x, x_1393.y, x_1394.z, x_1394.w);
  let x_1397 : vec3<f32> = u_xlat1;
  let x_1400 : vec4<f32> = u_xlat7;
  u_xlat16 = ((vec4<f32>(x_1397.x, x_1397.x, x_1397.x, x_1397.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1400);
  let x_1402 : vec3<f32> = u_xlat1;
  let x_1405 : vec4<f32> = u_xlat7;
  u_xlat7 = ((vec4<f32>(x_1402.x, x_1402.x, x_1402.x, x_1402.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1405);
  let x_1408 : vec4<f32> = u_xlat16;
  let x_1411 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat42.x = dot(vec2<f32>(x_1408.x, x_1408.y), vec2<f32>(x_1411.x, x_1411.y));
  let x_1415 : vec4<f32> = u_xlat16;
  let x_1418 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat42.y = dot(vec2<f32>(x_1415.z, x_1415.w), vec2<f32>(x_1418.x, x_1418.y));
  let x_1422 : vec2<f32> = u_xlat42;
  u_xlat42 = sin(x_1422);
  let x_1424 : vec2<f32> = u_xlat42;
  let x_1426 : f32 = x_27.x_NoiseParameters.z;
  let x_1428 : f32 = x_27.x_NoiseParameters.z;
  u_xlat42 = (x_1424 * vec2<f32>(x_1426, x_1428));
  let x_1431 : vec2<f32> = u_xlat42;
  let x_1432 : vec2<f32> = fract(x_1431);
  let x_1433 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1433.x, x_1433.y, x_1432.x, x_1432.y);
  let x_1435 : vec3<f32> = u_xlat18;
  let x_1437 : vec4<f32> = u_xlat8;
  let x_1439 : vec2<f32> = (vec2<f32>(x_1435.x, x_1435.z) + vec2<f32>(x_1437.x, x_1437.z));
  let x_1440 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_1439.x, x_1440.y, x_1439.y);
  let x_1443 : f32 = u_xlat8.z;
  let x_1446 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1443 * 2.0f) + x_1446);
  let x_1450 : f32 = u_xlat18.y;
  let x_1453 : f32 = u_xlat18.z;
  u_xlat52 = ((x_1450 * 2.0f) + x_1453);
  let x_1456 : f32 = u_xlat20.y;
  let x_1459 : f32 = u_xlat18.y;
  u_xlat35.x = ((x_1456 * 2.0f) + x_1459);
  let x_1464 : f32 = u_xlat8.w;
  let x_1466 : f32 = u_xlat35.x;
  u_xlat35.x = (x_1464 + x_1466);
  let x_1470 : f32 = u_xlat15.x;
  let x_1473 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_1470 * 2.0f) + x_1473);
  let x_1477 : f32 = u_xlat8.x;
  let x_1480 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_1477 * -12.0f) + x_1480);
  let x_1484 : f32 = u_xlat20.y;
  let x_1486 : f32 = u_xlat52;
  u_xlat52 = ((x_1484 * -12.0f) + x_1486);
  let x_1489 : f32 = u_xlat8.w;
  let x_1491 : f32 = u_xlat52;
  u_xlat52 = ((x_1489 * 2.0f) + x_1491);
  let x_1494 : f32 = u_xlat15.x;
  let x_1495 : f32 = u_xlat52;
  u_xlat52 = (x_1494 + x_1495);
  let x_1498 : f32 = u_xlat8.x;
  let x_1500 : f32 = u_xlat52;
  u_xlat52 = ((x_1498 * 2.0f) + x_1500);
  let x_1502 : vec3<f32> = u_xlat1;
  let x_1505 : vec4<f32> = u_xlat9;
  u_xlat16 = ((vec4<f32>(x_1502.x, x_1502.x, x_1502.x, x_1502.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1505);
  let x_1507 : vec3<f32> = u_xlat1;
  let x_1510 : vec4<f32> = u_xlat9;
  u_xlat9 = ((vec4<f32>(x_1507.x, x_1507.x, x_1507.x, x_1507.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1510);
  let x_1512 : vec4<f32> = u_xlat16;
  let x_1515 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat42.x = dot(vec2<f32>(x_1512.x, x_1512.y), vec2<f32>(x_1515.x, x_1515.y));
  let x_1520 : vec4<f32> = u_xlat16;
  let x_1523 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat32 = dot(vec2<f32>(x_1520.z, x_1520.w), vec2<f32>(x_1523.x, x_1523.y));
  let x_1526 : f32 = u_xlat32;
  u_xlat32 = sin(x_1526);
  let x_1528 : f32 = u_xlat32;
  let x_1530 : f32 = x_27.x_NoiseParameters.z;
  u_xlat32 = (x_1528 * x_1530);
  let x_1532 : f32 = u_xlat32;
  u_xlat32 = fract(x_1532);
  let x_1535 : f32 = u_xlat3.x;
  let x_1536 : f32 = u_xlat32;
  u_xlat3.x = (x_1535 + x_1536);
  let x_1540 : f32 = u_xlat20.y;
  let x_1543 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1540 * 2.0f) + x_1543);
  let x_1547 : f32 = u_xlat8.w;
  let x_1550 : f32 = u_xlat20.y;
  u_xlat37 = ((x_1547 * 2.0f) + x_1550);
  let x_1553 : f32 = u_xlat8.w;
  let x_1556 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1553 * -12.0f) + x_1556);
  let x_1560 : f32 = u_xlat42.x;
  u_xlat42.x = sin(x_1560);
  let x_1564 : f32 = u_xlat42.x;
  let x_1566 : f32 = x_27.x_NoiseParameters.z;
  u_xlat42.x = (x_1564 * x_1566);
  let x_1570 : f32 = u_xlat42.x;
  u_xlat8.z = fract(x_1570);
  let x_1573 : f32 = u_xlat52;
  let x_1575 : f32 = u_xlat8.z;
  u_xlat52 = (x_1573 + x_1575);
  let x_1577 : f32 = u_xlat52;
  u_xlat52 = (x_1577 * 0.083333336f);
  let x_1580 : f32 = u_xlat18.x;
  let x_1582 : f32 = u_xlat52;
  u_xlat18.x = ((x_1580 * 0.041666668f) + x_1582);
  let x_1585 : vec3<f32> = u_xlat1;
  let x_1588 : vec4<f32> = u_xlat10;
  u_xlat16 = ((vec4<f32>(x_1585.x, x_1585.x, x_1585.x, x_1585.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1588);
  let x_1590 : vec3<f32> = u_xlat1;
  let x_1593 : vec4<f32> = u_xlat10;
  u_xlat10 = ((vec4<f32>(x_1590.x, x_1590.x, x_1590.x, x_1590.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1593);
  let x_1595 : vec4<f32> = u_xlat16;
  let x_1598 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_1595.x, x_1595.y), vec2<f32>(x_1598.x, x_1598.y));
  let x_1602 : vec4<f32> = u_xlat16;
  let x_1605 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat59 = dot(vec2<f32>(x_1602.z, x_1602.w), vec2<f32>(x_1605.x, x_1605.y));
  let x_1608 : f32 = u_xlat59;
  u_xlat59 = sin(x_1608);
  let x_1610 : f32 = u_xlat59;
  let x_1612 : f32 = x_27.x_NoiseParameters.z;
  u_xlat59 = (x_1610 * x_1612);
  let x_1614 : f32 = u_xlat59;
  u_xlat8.w = fract(x_1614);
  let x_1617 : f32 = u_xlat52;
  u_xlat52 = sin(x_1617);
  let x_1619 : f32 = u_xlat52;
  let x_1621 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_1619 * x_1621);
  let x_1623 : f32 = u_xlat52;
  u_xlat52 = fract(x_1623);
  let x_1625 : f32 = u_xlat52;
  let x_1628 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1625 * 2.0f) + x_1628);
  let x_1631 : f32 = u_xlat52;
  let x_1632 : f32 = u_xlat37;
  u_xlat52 = (x_1631 + x_1632);
  let x_1635 : f32 = u_xlat8.x;
  let x_1637 : f32 = u_xlat52;
  u_xlat52 = ((x_1635 * 2.0f) + x_1637);
  let x_1640 : f32 = u_xlat8.z;
  let x_1642 : f32 = u_xlat52;
  u_xlat52 = ((x_1640 * -12.0f) + x_1642);
  let x_1645 : f32 = u_xlat8.w;
  let x_1647 : f32 = u_xlat52;
  u_xlat52 = ((x_1645 * 2.0f) + x_1647);
  let x_1650 : f32 = u_xlat8.x;
  let x_1652 : f32 = u_xlat3.x;
  u_xlat3.x = (x_1650 + x_1652);
  let x_1656 : f32 = u_xlat8.z;
  let x_1659 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1656 * 2.0f) + x_1659);
  let x_1663 : f32 = u_xlat8.w;
  let x_1665 : f32 = u_xlat3.x;
  u_xlat3.x = (x_1663 + x_1665);
  let x_1669 : f32 = u_xlat3.x;
  let x_1672 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1669 * 0.041666668f) + x_1672);
  let x_1675 : f32 = u_xlat54;
  let x_1678 : f32 = u_xlat20.x;
  u_xlat3.x = ((x_1675 * 2.0f) + x_1678);
  let x_1682 : f32 = u_xlat15.x;
  let x_1684 : f32 = u_xlat54;
  u_xlat20.x = ((x_1682 * 2.0f) + x_1684);
  let x_1688 : f32 = u_xlat15.x;
  let x_1691 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1688 * -12.0f) + x_1691);
  let x_1695 : f32 = u_xlat8.x;
  let x_1698 : f32 = u_xlat15.x;
  u_xlat20.y = ((x_1695 * 2.0f) + x_1698);
  let x_1702 : f32 = u_xlat8.x;
  let x_1705 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1702 * 2.0f) + x_1705);
  let x_1709 : f32 = u_xlat8.z;
  let x_1712 : f32 = u_xlat8.x;
  u_xlat20.z = ((x_1709 * 2.0f) + x_1712);
  let x_1716 : f32 = u_xlat8.z;
  let x_1719 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_1716 * 2.0f) + x_1719);
  let x_1722 : vec4<f32> = u_xlat8;
  let x_1724 : vec3<f32> = u_xlat20;
  u_xlat20 = (vec3<f32>(x_1722.x, x_1722.z, x_1722.w) + x_1724);
  let x_1726 : vec3<f32> = u_xlat1;
  let x_1729 : vec4<f32> = u_xlat6;
  u_xlat15 = ((vec4<f32>(x_1726.x, x_1726.x, x_1726.x, x_1726.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1729);
  let x_1731 : vec3<f32> = u_xlat1;
  let x_1734 : vec4<f32> = u_xlat6;
  u_xlat6 = ((vec4<f32>(x_1731.x, x_1731.x, x_1731.x, x_1731.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1734);
  let x_1736 : vec4<f32> = u_xlat15;
  let x_1739 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.x = dot(vec2<f32>(x_1736.x, x_1736.y), vec2<f32>(x_1739.x, x_1739.y));
  let x_1743 : vec4<f32> = u_xlat15;
  let x_1746 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.z = dot(vec2<f32>(x_1743.z, x_1743.w), vec2<f32>(x_1746.x, x_1746.y));
  let x_1750 : vec4<f32> = u_xlat8;
  let x_1752 : vec2<f32> = sin(vec2<f32>(x_1750.x, x_1750.z));
  let x_1753 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1752.x, x_1753.y, x_1752.y, x_1753.w);
  let x_1755 : vec4<f32> = u_xlat8;
  let x_1758 : f32 = x_27.x_NoiseParameters.z;
  let x_1760 : f32 = x_27.x_NoiseParameters.z;
  let x_1762 : vec2<f32> = (vec2<f32>(x_1755.x, x_1755.z) * vec2<f32>(x_1758, x_1760));
  let x_1763 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1762.x, x_1763.y, x_1762.y, x_1763.w);
  let x_1765 : vec4<f32> = u_xlat8;
  let x_1767 : vec2<f32> = fract(vec2<f32>(x_1765.x, x_1765.z));
  let x_1768 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1767.x, x_1768.y, x_1767.y, x_1768.w);
  let x_1771 : f32 = u_xlat3.x;
  let x_1773 : f32 = u_xlat8.x;
  u_xlat3.x = (x_1771 + x_1773);
  let x_1777 : f32 = u_xlat8.x;
  let x_1780 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_1777 * 2.0f) + x_1780);
  let x_1784 : f32 = u_xlat8.z;
  let x_1787 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_1784 * -12.0f) + x_1787);
  let x_1791 : f32 = u_xlat8.z;
  let x_1794 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1791 * 2.0f) + x_1794);
  let x_1797 : vec3<f32> = u_xlat1;
  let x_1800 : vec4<f32> = u_xlat12;
  u_xlat15 = ((vec4<f32>(x_1797.x, x_1797.x, x_1797.x, x_1797.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1800);
  let x_1802 : vec3<f32> = u_xlat1;
  let x_1805 : vec4<f32> = u_xlat12;
  u_xlat12 = ((vec4<f32>(x_1802.x, x_1802.x, x_1802.x, x_1802.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1805);
  let x_1807 : vec4<f32> = u_xlat15;
  let x_1810 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.x = dot(vec2<f32>(x_1807.x, x_1807.y), vec2<f32>(x_1810.x, x_1810.y));
  let x_1814 : vec4<f32> = u_xlat15;
  let x_1817 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat8.w = dot(vec2<f32>(x_1814.z, x_1814.w), vec2<f32>(x_1817.x, x_1817.y));
  let x_1821 : vec4<f32> = u_xlat8;
  let x_1823 : vec2<f32> = sin(vec2<f32>(x_1821.x, x_1821.w));
  let x_1824 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1823.x, x_1824.y, x_1824.z, x_1823.y);
  let x_1826 : vec4<f32> = u_xlat8;
  let x_1829 : f32 = x_27.x_NoiseParameters.z;
  let x_1831 : f32 = x_27.x_NoiseParameters.z;
  let x_1833 : vec2<f32> = (vec2<f32>(x_1826.x, x_1826.w) * vec2<f32>(x_1829, x_1831));
  let x_1834 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1833.x, x_1834.y, x_1834.z, x_1833.y);
  let x_1836 : vec4<f32> = u_xlat8;
  let x_1838 : vec2<f32> = fract(vec2<f32>(x_1836.x, x_1836.w));
  let x_1839 : vec4<f32> = u_xlat8;
  u_xlat8 = vec4<f32>(x_1838.x, x_1839.y, x_1839.z, x_1838.y);
  let x_1842 : f32 = u_xlat3.x;
  let x_1844 : f32 = u_xlat8.x;
  u_xlat3.x = (x_1842 + x_1844);
  let x_1848 : f32 = u_xlat3.x;
  let x_1851 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1848 * 0.083333336f) + x_1851);
  let x_1855 : f32 = u_xlat35.x;
  let x_1857 : f32 = u_xlat8.z;
  u_xlat35.x = (x_1855 + x_1857);
  let x_1861 : f32 = u_xlat8.z;
  let x_1864 : f32 = u_xlat20.y;
  u_xlat3.x = ((x_1861 * 2.0f) + x_1864);
  let x_1868 : f32 = u_xlat8.x;
  let x_1871 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1868 * -12.0f) + x_1871);
  let x_1875 : f32 = u_xlat8.w;
  let x_1878 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_1875 * 2.0f) + x_1878);
  let x_1882 : f32 = u_xlat8.x;
  let x_1885 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_1882 * 2.0f) + x_1885);
  let x_1889 : f32 = u_xlat8.w;
  let x_1891 : f32 = u_xlat35.x;
  u_xlat35.x = (x_1889 + x_1891);
  let x_1895 : f32 = u_xlat35.x;
  let x_1898 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1895 * 0.166666672f) + x_1898);
  let x_1901 : f32 = u_xlat52;
  let x_1903 : f32 = u_xlat8.x;
  u_xlat35.x = (x_1901 + x_1903);
  let x_1907 : f32 = u_xlat8.w;
  let x_1910 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_1907 * 2.0f) + x_1910);
  let x_1913 : vec3<f32> = u_xlat1;
  let x_1916 : vec4<f32> = u_xlat13;
  u_xlat15 = ((vec4<f32>(x_1913.x, x_1913.x, x_1913.x, x_1913.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1916);
  let x_1918 : vec3<f32> = u_xlat1;
  let x_1921 : vec4<f32> = u_xlat13;
  u_xlat13 = ((vec4<f32>(x_1918.x, x_1918.x, x_1918.x, x_1918.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_1921);
  let x_1923 : vec4<f32> = u_xlat15;
  let x_1926 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_1923.x, x_1923.y), vec2<f32>(x_1926.x, x_1926.y));
  let x_1929 : vec4<f32> = u_xlat15;
  let x_1932 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat37 = dot(vec2<f32>(x_1929.z, x_1929.w), vec2<f32>(x_1932.x, x_1932.y));
  let x_1935 : f32 = u_xlat37;
  u_xlat37 = sin(x_1935);
  let x_1937 : f32 = u_xlat37;
  let x_1939 : f32 = x_27.x_NoiseParameters.z;
  u_xlat37 = (x_1937 * x_1939);
  let x_1941 : f32 = u_xlat37;
  u_xlat37 = fract(x_1941);
  let x_1943 : f32 = u_xlat52;
  u_xlat52 = sin(x_1943);
  let x_1945 : f32 = u_xlat52;
  let x_1947 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_1945 * x_1947);
  let x_1949 : f32 = u_xlat52;
  u_xlat52 = fract(x_1949);
  let x_1951 : f32 = u_xlat52;
  let x_1953 : f32 = u_xlat35.x;
  u_xlat35.x = (x_1951 + x_1953);
  let x_1957 : f32 = u_xlat35.x;
  let x_1960 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_1957 * 0.083333336f) + x_1960);
  let x_1964 : f32 = u_xlat8.x;
  let x_1967 : f32 = u_xlat20.x;
  u_xlat35.x = ((x_1964 * 2.0f) + x_1967);
  let x_1971 : f32 = u_xlat8.x;
  let x_1974 : f32 = u_xlat20.z;
  u_xlat20.x = ((x_1971 * 2.0f) + x_1974);
  let x_1978 : f32 = u_xlat8.w;
  let x_1981 : f32 = u_xlat20.x;
  u_xlat20.x = ((x_1978 * -12.0f) + x_1981);
  let x_1984 : f32 = u_xlat52;
  let x_1987 : f32 = u_xlat20.x;
  u_xlat35.y = ((x_1984 * 2.0f) + x_1987);
  let x_1990 : f32 = u_xlat37;
  let x_1992 : f32 = u_xlat35.x;
  u_xlat35.x = (x_1990 + x_1992);
  let x_1995 : vec3<f32> = u_xlat1;
  let x_1998 : vec4<f32> = u_xlat11;
  u_xlat15 = ((vec4<f32>(x_1995.x, x_1995.x, x_1995.x, x_1995.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_1998);
  let x_2000 : vec3<f32> = u_xlat1;
  let x_2003 : vec4<f32> = u_xlat11;
  u_xlat11 = ((vec4<f32>(x_2000.x, x_2000.x, x_2000.x, x_2000.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_2003);
  let x_2005 : vec4<f32> = u_xlat15;
  let x_2008 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.x = dot(vec2<f32>(x_2005.x, x_2005.y), vec2<f32>(x_2008.x, x_2008.y));
  let x_2012 : vec4<f32> = u_xlat15;
  let x_2015 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat20.y = dot(vec2<f32>(x_2012.z, x_2012.w), vec2<f32>(x_2015.x, x_2015.y));
  let x_2019 : vec3<f32> = u_xlat20;
  let x_2021 : vec2<f32> = sin(vec2<f32>(x_2019.x, x_2019.y));
  let x_2022 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_2021.x, x_2021.y, x_2022.z);
  let x_2024 : vec3<f32> = u_xlat20;
  let x_2027 : f32 = x_27.x_NoiseParameters.z;
  let x_2029 : f32 = x_27.x_NoiseParameters.z;
  let x_2031 : vec2<f32> = (vec2<f32>(x_2024.x, x_2024.y) * vec2<f32>(x_2027, x_2029));
  let x_2032 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_2031.x, x_2031.y, x_2032.z);
  let x_2034 : vec3<f32> = u_xlat20;
  let x_2036 : vec2<f32> = fract(vec2<f32>(x_2034.x, x_2034.y));
  let x_2037 : vec3<f32> = u_xlat20;
  u_xlat20 = vec3<f32>(x_2036.x, x_2036.y, x_2037.z);
  let x_2040 : f32 = u_xlat20.x;
  let x_2043 : f32 = u_xlat35.x;
  u_xlat35.x = ((x_2040 * 2.0f) + x_2043);
  let x_2047 : f32 = u_xlat20.x;
  let x_2049 : f32 = u_xlat3.x;
  u_xlat3.x = (x_2047 + x_2049);
  let x_2053 : f32 = u_xlat20.y;
  let x_2056 : f32 = u_xlat3.x;
  u_xlat3.x = ((x_2053 * 2.0f) + x_2056);
  let x_2059 : vec2<f32> = u_xlat35;
  let x_2060 : vec3<f32> = u_xlat20;
  u_xlat35 = (x_2059 + vec2<f32>(x_2060.y, x_2060.y));
  let x_2064 : f32 = u_xlat35.x;
  let x_2067 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_2064 * 0.041666668f) + x_2067);
  let x_2070 : vec3<f32> = u_xlat1;
  let x_2073 : vec4<f32> = u_xlat14;
  u_xlat15 = ((vec4<f32>(x_2070.x, x_2070.x, x_2070.x, x_2070.x) * vec4<f32>(0.07f, 0.07f, 0.07f, 0.07f)) + x_2073);
  let x_2075 : vec3<f32> = u_xlat1;
  let x_2078 : vec4<f32> = u_xlat14;
  u_xlat14 = ((vec4<f32>(x_2075.x, x_2075.x, x_2075.x, x_2075.x) * vec4<f32>(0.109999999f, 0.109999999f, 0.109999999f, 0.109999999f)) + x_2078);
  let x_2080 : vec4<f32> = u_xlat15;
  let x_2083 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.x = dot(vec2<f32>(x_2080.x, x_2080.y), vec2<f32>(x_2083.x, x_2083.y));
  let x_2087 : vec4<f32> = u_xlat15;
  let x_2090 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.z = dot(vec2<f32>(x_2087.z, x_2087.w), vec2<f32>(x_2090.x, x_2090.y));
  let x_2094 : vec3<f32> = u_xlat1;
  let x_2096 : vec2<f32> = sin(vec2<f32>(x_2094.x, x_2094.z));
  let x_2097 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2096.x, x_2097.y, x_2096.y);
  let x_2099 : vec3<f32> = u_xlat1;
  let x_2102 : f32 = x_27.x_NoiseParameters.z;
  let x_2104 : f32 = x_27.x_NoiseParameters.z;
  let x_2106 : vec2<f32> = (vec2<f32>(x_2099.x, x_2099.z) * vec2<f32>(x_2102, x_2104));
  let x_2107 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2106.x, x_2107.y, x_2106.y);
  let x_2109 : vec3<f32> = u_xlat1;
  let x_2111 : vec2<f32> = fract(vec2<f32>(x_2109.x, x_2109.z));
  let x_2112 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2111.x, x_2112.y, x_2111.y);
  let x_2115 : f32 = u_xlat1.x;
  let x_2117 : f32 = u_xlat3.x;
  u_xlat3.x = (x_2115 + x_2117);
  let x_2121 : f32 = u_xlat1.x;
  let x_2124 : f32 = u_xlat35.y;
  u_xlat1.x = ((x_2121 * 2.0f) + x_2124);
  let x_2128 : f32 = u_xlat1.z;
  let x_2130 : f32 = u_xlat1.x;
  u_xlat1.x = (x_2128 + x_2130);
  let x_2134 : f32 = u_xlat3.x;
  let x_2137 : f32 = u_xlat18.x;
  u_xlat18.x = ((x_2134 * 0.083333336f) + x_2137);
  let x_2141 : f32 = u_xlat1.x;
  let x_2144 : f32 = u_xlat18.x;
  u_xlat1.x = ((x_2141 * 0.041666668f) + x_2144);
  let x_2148 : f32 = u_xlat1.x;
  SV_Target0.x = (x_2148 * 0.0625f);
  let x_2151 : vec4<f32> = u_xlat0;
  let x_2154 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat0.x = dot(vec2<f32>(x_2151.x, x_2151.y), vec2<f32>(x_2154.x, x_2154.y));
  let x_2158 : vec4<f32> = u_xlat0;
  let x_2161 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat0.y = dot(vec2<f32>(x_2158.z, x_2158.w), vec2<f32>(x_2161.x, x_2161.y));
  let x_2165 : vec4<f32> = u_xlat0;
  let x_2167 : vec2<f32> = sin(vec2<f32>(x_2165.x, x_2165.y));
  let x_2168 : vec4<f32> = u_xlat0;
  u_xlat0 = vec4<f32>(x_2167.x, x_2167.y, x_2168.z, x_2168.w);
  let x_2170 : vec4<f32> = u_xlat0;
  let x_2173 : f32 = x_27.x_NoiseParameters.z;
  let x_2175 : f32 = x_27.x_NoiseParameters.z;
  let x_2177 : vec2<f32> = (vec2<f32>(x_2170.x, x_2170.y) * vec2<f32>(x_2173, x_2175));
  let x_2178 : vec4<f32> = u_xlat0;
  u_xlat0 = vec4<f32>(x_2177.x, x_2177.y, x_2178.z, x_2178.w);
  let x_2181 : vec4<f32> = u_xlat2;
  let x_2184 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat34.x = dot(vec2<f32>(x_2181.x, x_2181.y), vec2<f32>(x_2184.x, x_2184.y));
  let x_2188 : vec4<f32> = u_xlat2;
  let x_2191 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat34.y = dot(vec2<f32>(x_2188.z, x_2188.w), vec2<f32>(x_2191.x, x_2191.y));
  let x_2195 : vec2<f32> = u_xlat34;
  u_xlat34 = sin(x_2195);
  let x_2197 : vec2<f32> = u_xlat34;
  let x_2199 : f32 = x_27.x_NoiseParameters.z;
  let x_2201 : f32 = x_27.x_NoiseParameters.z;
  let x_2203 : vec2<f32> = (x_2197 * vec2<f32>(x_2199, x_2201));
  let x_2204 : vec4<f32> = u_xlat0;
  u_xlat0 = vec4<f32>(x_2204.x, x_2204.y, x_2203.x, x_2203.y);
  let x_2206 : vec4<f32> = u_xlat0;
  u_xlat0 = fract(x_2206);
  let x_2209 : f32 = u_xlat0.z;
  let x_2212 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2209 * 2.0f) + x_2212);
  let x_2216 : f32 = u_xlat0.w;
  let x_2219 : f32 = u_xlat0.z;
  u_xlat34.x = ((x_2216 * 2.0f) + x_2219);
  let x_2223 : f32 = u_xlat0.w;
  let x_2225 : f32 = u_xlat0.x;
  u_xlat0.x = (x_2223 + x_2225);
  let x_2228 : vec4<f32> = u_xlat4;
  let x_2231 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.x = dot(vec2<f32>(x_2228.x, x_2228.y), vec2<f32>(x_2231.x, x_2231.y));
  let x_2235 : vec4<f32> = u_xlat4;
  let x_2238 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.y = dot(vec2<f32>(x_2235.z, x_2235.w), vec2<f32>(x_2238.x, x_2238.y));
  let x_2242 : vec3<f32> = u_xlat1;
  let x_2244 : vec2<f32> = sin(vec2<f32>(x_2242.x, x_2242.y));
  let x_2245 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2244.x, x_2244.y, x_2245.z);
  let x_2247 : vec3<f32> = u_xlat1;
  let x_2250 : f32 = x_27.x_NoiseParameters.z;
  let x_2252 : f32 = x_27.x_NoiseParameters.z;
  let x_2254 : vec2<f32> = (vec2<f32>(x_2247.x, x_2247.y) * vec2<f32>(x_2250, x_2252));
  let x_2255 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2254.x, x_2254.y, x_2255.z);
  let x_2257 : vec3<f32> = u_xlat1;
  let x_2259 : vec2<f32> = fract(vec2<f32>(x_2257.x, x_2257.y));
  let x_2260 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2259.x, x_2259.y, x_2260.z);
  let x_2263 : f32 = u_xlat1.x;
  let x_2266 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2263 * 2.0f) + x_2266);
  let x_2270 : f32 = u_xlat0.y;
  let x_2273 : f32 = u_xlat1.x;
  u_xlat1.x = ((x_2270 * 2.0f) + x_2273);
  let x_2277 : f32 = u_xlat1.y;
  let x_2279 : f32 = u_xlat1.x;
  u_xlat1.x = (x_2277 + x_2279);
  let x_2283 : f32 = u_xlat0.y;
  let x_2286 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2283 * -12.0f) + x_2286);
  let x_2290 : f32 = u_xlat1.y;
  let x_2293 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2290 * 2.0f) + x_2293);
  let x_2296 : vec4<f32> = u_xlat5;
  let x_2299 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat35.x = dot(vec2<f32>(x_2296.x, x_2296.y), vec2<f32>(x_2299.x, x_2299.y));
  let x_2303 : vec4<f32> = u_xlat5;
  let x_2306 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat35.y = dot(vec2<f32>(x_2303.z, x_2303.w), vec2<f32>(x_2306.x, x_2306.y));
  let x_2310 : vec2<f32> = u_xlat35;
  u_xlat35 = sin(x_2310);
  let x_2312 : vec2<f32> = u_xlat35;
  let x_2314 : f32 = x_27.x_NoiseParameters.z;
  let x_2316 : f32 = x_27.x_NoiseParameters.z;
  u_xlat35 = (x_2312 * vec2<f32>(x_2314, x_2316));
  let x_2319 : vec2<f32> = u_xlat35;
  u_xlat35 = fract(x_2319);
  let x_2322 : f32 = u_xlat0.x;
  let x_2324 : f32 = u_xlat35.x;
  u_xlat0.x = (x_2322 + x_2324);
  let x_2328 : f32 = u_xlat35.y;
  let x_2331 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2328 * 2.0f) + x_2331);
  let x_2335 : f32 = u_xlat8.y;
  let x_2337 : f32 = u_xlat0.x;
  u_xlat0.x = (x_2335 + x_2337);
  let x_2340 : vec4<f32> = u_xlat7;
  let x_2343 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat2.x = dot(vec2<f32>(x_2340.x, x_2340.y), vec2<f32>(x_2343.x, x_2343.y));
  let x_2347 : vec4<f32> = u_xlat7;
  let x_2350 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat2.y = dot(vec2<f32>(x_2347.z, x_2347.w), vec2<f32>(x_2350.x, x_2350.y));
  let x_2354 : vec4<f32> = u_xlat2;
  let x_2356 : vec2<f32> = sin(vec2<f32>(x_2354.x, x_2354.y));
  let x_2357 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2356.x, x_2356.y, x_2357.z, x_2357.w);
  let x_2359 : vec4<f32> = u_xlat2;
  let x_2362 : f32 = x_27.x_NoiseParameters.z;
  let x_2364 : f32 = x_27.x_NoiseParameters.z;
  let x_2366 : vec2<f32> = (vec2<f32>(x_2359.x, x_2359.y) * vec2<f32>(x_2362, x_2364));
  let x_2367 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2366.x, x_2366.y, x_2367.z, x_2367.w);
  let x_2369 : vec4<f32> = u_xlat2;
  let x_2371 : vec2<f32> = fract(vec2<f32>(x_2369.x, x_2369.y));
  let x_2372 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2371.x, x_2371.y, x_2372.z, x_2372.w);
  let x_2375 : f32 = u_xlat34.x;
  let x_2377 : f32 = u_xlat2.x;
  u_xlat34.x = (x_2375 + x_2377);
  let x_2381 : f32 = u_xlat2.x;
  let x_2384 : f32 = u_xlat0.w;
  u_xlat34.y = ((x_2381 * 2.0f) + x_2384);
  let x_2388 : f32 = u_xlat0.y;
  let x_2391 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2388 * 2.0f) + x_2391);
  let x_2396 : f32 = u_xlat1.y;
  let x_2399 : f32 = u_xlat0.y;
  u_xlat17.x = ((x_2396 * 2.0f) + x_2399);
  let x_2403 : f32 = u_xlat2.y;
  let x_2405 : f32 = u_xlat17.x;
  u_xlat17.x = (x_2403 + x_2405);
  let x_2409 : f32 = u_xlat35.y;
  let x_2412 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2409 * 2.0f) + x_2412);
  let x_2416 : f32 = u_xlat8.y;
  let x_2419 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2416 * -12.0f) + x_2419);
  let x_2423 : f32 = u_xlat1.y;
  let x_2426 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2423 * -12.0f) + x_2426);
  let x_2430 : f32 = u_xlat2.y;
  let x_2433 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2430 * 2.0f) + x_2433);
  let x_2437 : f32 = u_xlat35.y;
  let x_2439 : f32 = u_xlat34.x;
  u_xlat34.x = (x_2437 + x_2439);
  let x_2443 : f32 = u_xlat8.y;
  let x_2446 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2443 * 2.0f) + x_2446);
  let x_2449 : vec4<f32> = u_xlat9;
  let x_2452 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat2.x = dot(vec2<f32>(x_2449.x, x_2449.y), vec2<f32>(x_2452.x, x_2452.y));
  let x_2456 : vec4<f32> = u_xlat9;
  let x_2459 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat2.z = dot(vec2<f32>(x_2456.z, x_2456.w), vec2<f32>(x_2459.x, x_2459.y));
  let x_2463 : vec4<f32> = u_xlat2;
  let x_2465 : vec2<f32> = sin(vec2<f32>(x_2463.x, x_2463.z));
  let x_2466 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2465.x, x_2466.y, x_2465.y, x_2466.w);
  let x_2468 : vec4<f32> = u_xlat2;
  let x_2471 : f32 = x_27.x_NoiseParameters.z;
  let x_2473 : f32 = x_27.x_NoiseParameters.z;
  let x_2475 : vec2<f32> = (vec2<f32>(x_2468.x, x_2468.z) * vec2<f32>(x_2471, x_2473));
  let x_2476 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2475.x, x_2476.y, x_2475.y, x_2476.w);
  let x_2478 : vec4<f32> = u_xlat2;
  let x_2480 : vec2<f32> = fract(vec2<f32>(x_2478.x, x_2478.z));
  let x_2481 : vec4<f32> = u_xlat2;
  u_xlat2 = vec4<f32>(x_2480.x, x_2481.y, x_2480.y, x_2481.w);
  let x_2483 : vec2<f32> = u_xlat34;
  let x_2484 : vec4<f32> = u_xlat2;
  u_xlat34 = (x_2483 + vec2<f32>(x_2484.x, x_2484.z));
  let x_2489 : f32 = u_xlat1.y;
  let x_2492 : f32 = u_xlat34.y;
  u_xlat51 = ((x_2489 * 2.0f) + x_2492);
  let x_2495 : f32 = u_xlat2.y;
  let x_2498 : f32 = u_xlat1.y;
  u_xlat18.x = ((x_2495 * 2.0f) + x_2498);
  let x_2502 : f32 = u_xlat2.y;
  let x_2504 : f32 = u_xlat51;
  u_xlat51 = ((x_2502 * -12.0f) + x_2504);
  let x_2507 : f32 = u_xlat34.x;
  u_xlat34.x = (x_2507 * 0.083333336f);
  let x_2511 : f32 = u_xlat0.x;
  let x_2514 : f32 = u_xlat34.x;
  u_xlat0.x = ((x_2511 * 0.041666668f) + x_2514);
  let x_2517 : vec4<f32> = u_xlat10;
  let x_2520 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat34.x = dot(vec2<f32>(x_2517.x, x_2517.y), vec2<f32>(x_2520.x, x_2520.y));
  let x_2525 : vec4<f32> = u_xlat10;
  let x_2528 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat19 = dot(vec2<f32>(x_2525.z, x_2525.w), vec2<f32>(x_2528.x, x_2528.y));
  let x_2531 : f32 = u_xlat19;
  u_xlat19 = sin(x_2531);
  let x_2533 : f32 = u_xlat19;
  let x_2535 : f32 = x_27.x_NoiseParameters.z;
  u_xlat19 = (x_2533 * x_2535);
  let x_2537 : f32 = u_xlat19;
  u_xlat2.y = fract(x_2537);
  let x_2541 : f32 = u_xlat34.x;
  u_xlat34.x = sin(x_2541);
  let x_2545 : f32 = u_xlat34.x;
  let x_2547 : f32 = x_27.x_NoiseParameters.z;
  u_xlat34.x = (x_2545 * x_2547);
  let x_2551 : f32 = u_xlat34.x;
  u_xlat34.x = fract(x_2551);
  let x_2555 : f32 = u_xlat34.x;
  let x_2557 : f32 = u_xlat51;
  u_xlat51 = ((x_2555 * 2.0f) + x_2557);
  let x_2560 : f32 = u_xlat34.x;
  let x_2562 : f32 = u_xlat18.x;
  u_xlat34.x = (x_2560 + x_2562);
  let x_2566 : f32 = u_xlat8.y;
  let x_2569 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2566 * 2.0f) + x_2569);
  let x_2573 : f32 = u_xlat2.x;
  let x_2576 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2573 * -12.0f) + x_2576);
  let x_2580 : f32 = u_xlat2.y;
  let x_2583 : f32 = u_xlat34.x;
  u_xlat34.x = ((x_2580 * 2.0f) + x_2583);
  let x_2587 : f32 = u_xlat8.y;
  let x_2588 : f32 = u_xlat51;
  u_xlat51 = (x_2587 + x_2588);
  let x_2591 : f32 = u_xlat2.x;
  let x_2593 : f32 = u_xlat51;
  u_xlat51 = ((x_2591 * 2.0f) + x_2593);
  let x_2596 : f32 = u_xlat2.y;
  let x_2597 : f32 = u_xlat51;
  u_xlat51 = (x_2596 + x_2597);
  let x_2599 : f32 = u_xlat51;
  let x_2602 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2599 * 0.041666668f) + x_2602);
  let x_2606 : f32 = u_xlat35.x;
  let x_2609 : f32 = u_xlat1.x;
  u_xlat51 = ((x_2606 * 2.0f) + x_2609);
  let x_2612 : f32 = u_xlat35.y;
  let x_2615 : f32 = u_xlat35.x;
  u_xlat1.x = ((x_2612 * 2.0f) + x_2615);
  let x_2619 : f32 = u_xlat8.y;
  let x_2621 : f32 = u_xlat1.x;
  u_xlat1.x = (x_2619 + x_2621);
  let x_2625 : f32 = u_xlat35.y;
  let x_2627 : f32 = u_xlat51;
  u_xlat51 = ((x_2625 * -12.0f) + x_2627);
  let x_2630 : f32 = u_xlat8.y;
  let x_2633 : f32 = u_xlat35.y;
  u_xlat18.x = ((x_2630 * 2.0f) + x_2633);
  let x_2637 : f32 = u_xlat8.y;
  let x_2639 : f32 = u_xlat51;
  u_xlat51 = ((x_2637 * 2.0f) + x_2639);
  let x_2642 : f32 = u_xlat2.x;
  let x_2645 : f32 = u_xlat8.y;
  u_xlat18.y = ((x_2642 * 2.0f) + x_2645);
  let x_2649 : f32 = u_xlat2.x;
  let x_2652 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2649 * 2.0f) + x_2652);
  let x_2655 : vec4<f32> = u_xlat2;
  let x_2657 : vec3<f32> = u_xlat18;
  let x_2659 : vec2<f32> = (vec2<f32>(x_2655.x, x_2655.y) + vec2<f32>(x_2657.x, x_2657.y));
  let x_2660 : vec3<f32> = u_xlat18;
  u_xlat18 = vec3<f32>(x_2659.x, x_2659.y, x_2660.z);
  let x_2662 : vec4<f32> = u_xlat6;
  let x_2665 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_2662.x, x_2662.y), vec2<f32>(x_2665.x, x_2665.y));
  let x_2668 : vec4<f32> = u_xlat6;
  let x_2671 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat2.x = dot(vec2<f32>(x_2668.z, x_2668.w), vec2<f32>(x_2671.x, x_2671.y));
  let x_2676 : f32 = u_xlat2.x;
  u_xlat2.x = sin(x_2676);
  let x_2680 : f32 = u_xlat2.x;
  let x_2682 : f32 = x_27.x_NoiseParameters.z;
  u_xlat2.x = (x_2680 * x_2682);
  let x_2686 : f32 = u_xlat2.x;
  u_xlat2.x = fract(x_2686);
  let x_2689 : f32 = u_xlat52;
  u_xlat52 = sin(x_2689);
  let x_2691 : f32 = u_xlat52;
  let x_2693 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_2691 * x_2693);
  let x_2695 : f32 = u_xlat52;
  u_xlat52 = fract(x_2695);
  let x_2697 : f32 = u_xlat51;
  let x_2698 : f32 = u_xlat52;
  u_xlat51 = (x_2697 + x_2698);
  let x_2700 : f32 = u_xlat52;
  let x_2703 : f32 = u_xlat1.x;
  u_xlat1.x = ((x_2700 * 2.0f) + x_2703);
  let x_2707 : f32 = u_xlat2.x;
  let x_2710 : f32 = u_xlat1.x;
  u_xlat1.x = ((x_2707 * -12.0f) + x_2710);
  let x_2714 : f32 = u_xlat2.x;
  let x_2716 : f32 = u_xlat51;
  u_xlat51 = ((x_2714 * 2.0f) + x_2716);
  let x_2718 : vec4<f32> = u_xlat12;
  let x_2721 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat52 = dot(vec2<f32>(x_2718.x, x_2718.y), vec2<f32>(x_2721.x, x_2721.y));
  let x_2724 : vec4<f32> = u_xlat12;
  let x_2727 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat19 = dot(vec2<f32>(x_2724.z, x_2724.w), vec2<f32>(x_2727.x, x_2727.y));
  let x_2730 : f32 = u_xlat19;
  u_xlat19 = sin(x_2730);
  let x_2732 : f32 = u_xlat19;
  let x_2734 : f32 = x_27.x_NoiseParameters.z;
  u_xlat19 = (x_2732 * x_2734);
  let x_2736 : f32 = u_xlat19;
  u_xlat19 = fract(x_2736);
  let x_2738 : f32 = u_xlat52;
  u_xlat52 = sin(x_2738);
  let x_2740 : f32 = u_xlat52;
  let x_2742 : f32 = x_27.x_NoiseParameters.z;
  u_xlat52 = (x_2740 * x_2742);
  let x_2744 : f32 = u_xlat52;
  u_xlat52 = fract(x_2744);
  let x_2746 : f32 = u_xlat51;
  let x_2747 : f32 = u_xlat52;
  u_xlat51 = (x_2746 + x_2747);
  let x_2749 : f32 = u_xlat51;
  let x_2752 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2749 * 0.083333336f) + x_2752);
  let x_2756 : f32 = u_xlat17.x;
  let x_2758 : f32 = u_xlat2.x;
  u_xlat17.x = (x_2756 + x_2758);
  let x_2762 : f32 = u_xlat2.x;
  let x_2765 : f32 = u_xlat18.x;
  u_xlat51 = ((x_2762 * 2.0f) + x_2765);
  let x_2767 : f32 = u_xlat52;
  let x_2769 : f32 = u_xlat51;
  u_xlat51 = ((x_2767 * -12.0f) + x_2769);
  let x_2771 : f32 = u_xlat19;
  let x_2773 : f32 = u_xlat51;
  u_xlat17.z = ((x_2771 * 2.0f) + x_2773);
  let x_2776 : f32 = u_xlat52;
  let x_2779 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2776 * 2.0f) + x_2779);
  let x_2782 : f32 = u_xlat19;
  let x_2784 : f32 = u_xlat17.x;
  u_xlat17.x = (x_2782 + x_2784);
  let x_2788 : f32 = u_xlat17.x;
  let x_2791 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2788 * 0.166666672f) + x_2791);
  let x_2795 : f32 = u_xlat34.x;
  let x_2796 : f32 = u_xlat52;
  u_xlat17.x = (x_2795 + x_2796);
  let x_2799 : f32 = u_xlat19;
  let x_2802 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2799 * 2.0f) + x_2802);
  let x_2805 : vec4<f32> = u_xlat13;
  let x_2808 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat34.x = dot(vec2<f32>(x_2805.x, x_2805.y), vec2<f32>(x_2808.x, x_2808.y));
  let x_2812 : vec4<f32> = u_xlat13;
  let x_2815 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat18.x = dot(vec2<f32>(x_2812.z, x_2812.w), vec2<f32>(x_2815.x, x_2815.y));
  let x_2820 : f32 = u_xlat18.x;
  u_xlat18.x = sin(x_2820);
  let x_2824 : f32 = u_xlat18.x;
  let x_2826 : f32 = x_27.x_NoiseParameters.z;
  u_xlat18.x = (x_2824 * x_2826);
  let x_2830 : f32 = u_xlat18.x;
  u_xlat18.x = fract(x_2830);
  let x_2834 : f32 = u_xlat34.x;
  u_xlat34.x = sin(x_2834);
  let x_2838 : f32 = u_xlat34.x;
  let x_2840 : f32 = x_27.x_NoiseParameters.z;
  u_xlat34.x = (x_2838 * x_2840);
  let x_2844 : f32 = u_xlat34.x;
  u_xlat34.x = fract(x_2844);
  let x_2848 : f32 = u_xlat34.x;
  let x_2850 : f32 = u_xlat17.x;
  u_xlat17.x = (x_2848 + x_2850);
  let x_2854 : f32 = u_xlat17.x;
  let x_2857 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2854 * 0.083333336f) + x_2857);
  let x_2860 : f32 = u_xlat52;
  let x_2863 : f32 = u_xlat1.x;
  u_xlat17.x = ((x_2860 * 2.0f) + x_2863);
  let x_2866 : f32 = u_xlat52;
  let x_2869 : f32 = u_xlat18.y;
  u_xlat1.x = ((x_2866 * 2.0f) + x_2869);
  let x_2872 : f32 = u_xlat19;
  let x_2875 : f32 = u_xlat1.x;
  u_xlat1.x = ((x_2872 * -12.0f) + x_2875);
  let x_2879 : f32 = u_xlat34.x;
  let x_2882 : f32 = u_xlat1.x;
  u_xlat17.y = ((x_2879 * 2.0f) + x_2882);
  let x_2886 : f32 = u_xlat18.x;
  let x_2888 : f32 = u_xlat17.x;
  u_xlat17.x = (x_2886 + x_2888);
  let x_2891 : vec4<f32> = u_xlat11;
  let x_2894 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.x = dot(vec2<f32>(x_2891.x, x_2891.y), vec2<f32>(x_2894.x, x_2894.y));
  let x_2898 : vec4<f32> = u_xlat11;
  let x_2901 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.y = dot(vec2<f32>(x_2898.z, x_2898.w), vec2<f32>(x_2901.x, x_2901.y));
  let x_2905 : vec3<f32> = u_xlat1;
  let x_2907 : vec2<f32> = sin(vec2<f32>(x_2905.x, x_2905.y));
  let x_2908 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2907.x, x_2907.y, x_2908.z);
  let x_2910 : vec3<f32> = u_xlat1;
  let x_2913 : f32 = x_27.x_NoiseParameters.z;
  let x_2915 : f32 = x_27.x_NoiseParameters.z;
  let x_2917 : vec2<f32> = (vec2<f32>(x_2910.x, x_2910.y) * vec2<f32>(x_2913, x_2915));
  let x_2918 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2917.x, x_2917.y, x_2918.z);
  let x_2920 : vec3<f32> = u_xlat1;
  let x_2922 : vec2<f32> = fract(vec2<f32>(x_2920.x, x_2920.y));
  let x_2923 : vec3<f32> = u_xlat1;
  u_xlat1 = vec3<f32>(x_2922.x, x_2922.y, x_2923.z);
  let x_2926 : f32 = u_xlat1.x;
  let x_2929 : f32 = u_xlat17.x;
  u_xlat17.x = ((x_2926 * 2.0f) + x_2929);
  let x_2932 : vec3<f32> = u_xlat17;
  let x_2933 : vec3<f32> = u_xlat1;
  u_xlat17 = (x_2932 + vec3<f32>(x_2933.y, x_2933.y, x_2933.x));
  let x_2937 : f32 = u_xlat1.y;
  let x_2940 : f32 = u_xlat17.z;
  u_xlat51 = ((x_2937 * 2.0f) + x_2940);
  let x_2943 : f32 = u_xlat17.x;
  let x_2946 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_2943 * 0.041666668f) + x_2946);
  let x_2949 : vec4<f32> = u_xlat14;
  let x_2952 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat17.x = dot(vec2<f32>(x_2949.x, x_2949.y), vec2<f32>(x_2952.x, x_2952.y));
  let x_2956 : vec4<f32> = u_xlat14;
  let x_2959 : vec3<f32> = x_27.x_NoiseParameters;
  u_xlat1.x = dot(vec2<f32>(x_2956.z, x_2956.w), vec2<f32>(x_2959.x, x_2959.y));
  let x_2964 : f32 = u_xlat1.x;
  u_xlat1.x = sin(x_2964);
  let x_2968 : f32 = u_xlat1.x;
  let x_2970 : f32 = x_27.x_NoiseParameters.z;
  u_xlat1.x = (x_2968 * x_2970);
  let x_2974 : f32 = u_xlat1.x;
  u_xlat1.x = fract(x_2974);
  let x_2978 : f32 = u_xlat17.x;
  u_xlat17.x = sin(x_2978);
  let x_2982 : f32 = u_xlat17.x;
  let x_2984 : f32 = x_27.x_NoiseParameters.z;
  u_xlat17.x = (x_2982 * x_2984);
  let x_2988 : f32 = u_xlat17.x;
  u_xlat17.x = fract(x_2988);
  let x_2992 : f32 = u_xlat17.x;
  let x_2993 : f32 = u_xlat51;
  u_xlat51 = (x_2992 + x_2993);
  let x_2996 : f32 = u_xlat17.x;
  let x_2999 : f32 = u_xlat17.y;
  u_xlat17.x = ((x_2996 * 2.0f) + x_2999);
  let x_3003 : f32 = u_xlat1.x;
  let x_3005 : f32 = u_xlat17.x;
  u_xlat17.x = (x_3003 + x_3005);
  let x_3008 : f32 = u_xlat51;
  let x_3011 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_3008 * 0.083333336f) + x_3011);
  let x_3015 : f32 = u_xlat17.x;
  let x_3018 : f32 = u_xlat0.x;
  u_xlat0.x = ((x_3015 * 0.041666668f) + x_3018);
  let x_3022 : f32 = u_xlat0.x;
  SV_Target0.y = (x_3022 * 0.0625f);
  SV_Target0.w = 1.0f;
  return;
}

struct main_out {
  @location(0)
  SV_Target0_1 : vec4<f32>,
}

@fragment
fn main(@location(0) vs_TEXCOORD1_param : vec2<f32>, @builtin(position) gl_FragCoord_param : vec4<f32>) -> main_out {
  vs_TEXCOORD1 = vs_TEXCOORD1_param;
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(SV_Target0);
}


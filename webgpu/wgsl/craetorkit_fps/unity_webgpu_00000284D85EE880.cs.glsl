#version 440

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 1, binding = 0, std140) uniform CB1 {
	vec4 gInvThicknessTable[3];
	vec4 gSampleWeightTable[3];
	vec4 gInvSliceDimension;
	vec2 AdditionalParams;
};
layout(set = 0, binding = 0) uniform highp texture2DArray DepthTex;
writeonly layout(set = 0, binding = 1, r32f) highp uniform image2D Occlusion_origX0X;
shared struct {
	uint value[1];
} TGSM0[256];
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(set = 0, binding = 2) uniform highp  sampler samplerDepthTex;
void main()
{
vec4 u_xlat0;
ivec2 u_xlati0;
vec4 u_xlat1;
ivec4 u_xlati1;
vec3 u_xlat2;
uvec4 u_xlatu2;
vec3 u_xlat3;
ivec4 u_xlati3;
ivec4 u_xlati4;
vec3 u_xlat5;
vec3 u_xlat6;
float u_xlat7;
float u_xlat8;
float u_xlat10;
ivec2 u_xlati10;
vec2 u_xlat11;
float u_xlat12;
float u_xlat15;
int u_xlati15;
float u_xlat16;
float u_xlat17;
    u_xlati0.xy = ivec2(gl_LocalInvocationID.xy) + ivec2(gl_GlobalInvocationID.xy);
    u_xlati0.xy = u_xlati0.xy + ivec2(int(0xFFFFFFFDu), int(0xFFFFFFFDu));
    u_xlat0.xy = vec2(u_xlati0.xy);
    u_xlat0.xy = u_xlat0.xy * gInvSliceDimension.xy;
    u_xlat0.z = float(gl_GlobalInvocationID.z);
    u_xlat0 = textureGather(sampler2DArray(DepthTex, samplerDepthTex), u_xlat0.xyz);
    u_xlati1.x = int(gl_LocalInvocationID.x) << (1 & int(0x1F));
    u_xlati1.x = int(gl_LocalInvocationID.y) * 32 + u_xlati1.x;
    TGSM0[u_xlati1.x].value[(0 >> 2)] = floatBitsToUint(u_xlat0.w);
    u_xlati15 = u_xlati1.x + 1;
    TGSM0[u_xlati15].value[(0 >> 2)] = floatBitsToUint(u_xlat0.z);
    u_xlati10.xy = u_xlati1.xx + ivec2(16, 17);
    TGSM0[u_xlati10.x].value[(0 >> 2)] = floatBitsToUint(u_xlat0.x);
    TGSM0[u_xlati10.y].value[(0 >> 2)] = floatBitsToUint(u_xlat0.y);
    //memoryBarrierShared;
    barrier();
    u_xlati0.x = int(gl_LocalInvocationID.y) * 16 + int(gl_LocalInvocationID.x);
    u_xlati1 = u_xlati0.xxxx + ivec4(64, 68, 70, 66);
    u_xlat5.x = uintBitsToFloat(TGSM0[u_xlati1.w].value[(0 >> 2) + 0]);
    u_xlat10 = uintBitsToFloat(TGSM0[u_xlati1.y].value[(0 >> 2) + 0]);
    u_xlat10 = float(1.0) / u_xlat10;
    u_xlat6.xz = vec2(u_xlat10) * gInvThicknessTable[0].yw;
    u_xlat2.xy = gInvThicknessTable[0].yw + vec2(-0.5, -0.5);
    u_xlat5.x = u_xlat5.x * u_xlat6.x + (-u_xlat2.x);
    u_xlat15 = u_xlat5.x * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati1.z].value[(0 >> 2) + 0]);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati1.x].value[(0 >> 2) + 0]);
    u_xlat1.x = u_xlat1.x * u_xlat6.z + (-u_xlat2.y);
    u_xlat11.x = u_xlat11.x * u_xlat6.x + (-u_xlat2.x);
    u_xlat12 = max(u_xlat15, u_xlat11.x);
    u_xlat11.x = u_xlat11.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat12 = min(u_xlat12, 1.0);
    u_xlat5.x = max(u_xlat5.x, u_xlat11.x);
    u_xlat5.x = min(u_xlat5.x, 1.0);
    u_xlat5.x = u_xlat5.x + u_xlat12;
    u_xlat5.x = (-u_xlat11.x) * u_xlat15 + u_xlat5.x;
    u_xlat5.x = clamp(u_xlat5.x, 0.0, 1.0);
    u_xlati3 = u_xlati0.xxxx + ivec4(100, 36, 72, 132);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati3.y].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat6.x + (-u_xlat2.x);
    u_xlat11.x = u_xlat15 * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat12 = uintBitsToFloat(TGSM0[u_xlati3.x].value[(0 >> 2) + 0]);
    u_xlat6.x = u_xlat12 * u_xlat6.x + (-u_xlat2.x);
    u_xlat2.x = max(u_xlat11.x, u_xlat6.x);
    u_xlat6.x = u_xlat6.x * AdditionalParams.x;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat6.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat2.x;
    u_xlat15 = (-u_xlat6.x) * u_xlat11.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat5.x = u_xlat15 + u_xlat5.x;
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati3.w].value[(0 >> 2) + 0]);
    u_xlat6.x = uintBitsToFloat(TGSM0[u_xlati3.z].value[(0 >> 2) + 0]);
    u_xlat6.x = u_xlat6.x * u_xlat6.z + (-u_xlat2.y);
    u_xlat15 = u_xlat15 * u_xlat6.z + (-u_xlat2.y);
    u_xlati3 = u_xlati0.xxxx + ivec4(4, 83, 53, 85);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati3.x].value[(0 >> 2) + 0]);
    u_xlat11.x = u_xlat11.x * u_xlat6.z + (-u_xlat2.y);
    u_xlat16 = u_xlat11.x * AdditionalParams.x;
    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);
    u_xlat2.x = max(u_xlat15, u_xlat16);
    u_xlat15 = u_xlat15 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat11.x = max(u_xlat15, u_xlat11.x);
    u_xlat11.x = min(u_xlat11.x, 1.0);
    u_xlat11.x = u_xlat11.x + u_xlat2.x;
    u_xlat15 = (-u_xlat15) * u_xlat16 + u_xlat11.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat11.x = u_xlat1.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat1.w = max(u_xlat11.x, u_xlat6.x);
    u_xlat6.x = u_xlat6.x * AdditionalParams.x;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat1.x = max(u_xlat6.x, u_xlat1.x);
    u_xlat1.xw = min(u_xlat1.xw, vec2(1.0, 1.0));
    u_xlat1.x = u_xlat1.x + u_xlat1.w;
    u_xlat1.x = (-u_xlat6.x) * u_xlat11.x + u_xlat1.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat5.z = u_xlat15 + u_xlat1.x;
    u_xlat5.xz = u_xlat5.xz * gSampleWeightTable[0].yw;
    u_xlat15 = u_xlat5.z * 0.5;
    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat15;
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati3.z].value[(0 >> 2) + 0]);
    u_xlat1.xy = vec2(u_xlat10) * gInvThicknessTable[1].xz;
    u_xlat2.xyz = vec3(u_xlat10) * gInvThicknessTable[2].xwz;
    u_xlat11.xy = gInvThicknessTable[1].xz + vec2(-0.5, -0.5);
    u_xlat10 = u_xlat15 * u_xlat1.x + (-u_xlat11.x);
    u_xlat15 = u_xlat10 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat17 = uintBitsToFloat(TGSM0[u_xlati3.y].value[(0 >> 2) + 0]);
    u_xlat3.x = uintBitsToFloat(TGSM0[u_xlati3.w].value[(0 >> 2) + 0]);
    u_xlat3.x = u_xlat3.x * u_xlat1.x + (-u_xlat11.x);
    u_xlat17 = u_xlat17 * u_xlat1.x + (-u_xlat11.x);
    u_xlat8 = max(u_xlat15, u_xlat17);
    u_xlat17 = u_xlat17 * AdditionalParams.x;
    u_xlat17 = clamp(u_xlat17, 0.0, 1.0);
    u_xlat8 = min(u_xlat8, 1.0);
    u_xlat10 = max(u_xlat10, u_xlat17);
    u_xlat10 = min(u_xlat10, 1.0);
    u_xlat10 = u_xlat10 + u_xlat8;
    u_xlat10 = (-u_xlat17) * u_xlat15 + u_xlat10;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlati4 = u_xlati0.xxxx + ivec4(51, 98, 38, 102);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat1.x + (-u_xlat11.x);
    u_xlat1.x = u_xlat15 * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat11.x = max(u_xlat1.x, u_xlat3.x);
    u_xlat17 = u_xlat3.x * AdditionalParams.x;
    u_xlat17 = clamp(u_xlat17, 0.0, 1.0);
    u_xlat11.x = min(u_xlat11.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat17);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat11.x;
    u_xlat15 = (-u_xlat17) * u_xlat1.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat10 = u_xlat10 * gSampleWeightTable[1].x;
    u_xlat5.x = u_xlat10 * 0.5 + u_xlat5.x;
    u_xlat10 = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat3.xyz = gInvThicknessTable[2].xwz + vec3(-0.5, -0.5, -0.5);
    u_xlat10 = u_xlat10 * u_xlat2.x + (-u_xlat3.x);
    u_xlat15 = u_xlat10 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat11.x = u_xlat11.x * u_xlat2.x + (-u_xlat3.x);
    u_xlat1.x = u_xlat1.x * u_xlat2.x + (-u_xlat3.x);
    u_xlat17 = max(u_xlat15, u_xlat1.x);
    u_xlat1.x = u_xlat1.x * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat17 = min(u_xlat17, 1.0);
    u_xlat10 = max(u_xlat10, u_xlat1.x);
    u_xlat10 = min(u_xlat10, 1.0);
    u_xlat10 = u_xlat10 + u_xlat17;
    u_xlat10 = (-u_xlat1.x) * u_xlat15 + u_xlat10;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlati4 = u_xlati0.xxxx + ivec4(34, 113, 23, 119);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat3.x);
    u_xlat1.x = u_xlat15 * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat2.x = max(u_xlat1.x, u_xlat11.x);
    u_xlat11.x = u_xlat11.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat11.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat2.x;
    u_xlat15 = (-u_xlat11.x) * u_xlat1.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat10 = u_xlat10 * gSampleWeightTable[2].x;
    u_xlat5.x = u_xlat10 * 0.5 + u_xlat5.x;
    u_xlat10 = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat10 = u_xlat10 * u_xlat2.y + (-u_xlat3.y);
    u_xlat15 = u_xlat10 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat11.x = u_xlat11.x * u_xlat2.y + (-u_xlat3.y);
    u_xlat1.x = u_xlat1.x * u_xlat2.y + (-u_xlat3.y);
    u_xlat2.x = max(u_xlat15, u_xlat1.x);
    u_xlat1.x = u_xlat1.x * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat10 = max(u_xlat10, u_xlat1.x);
    u_xlat10 = min(u_xlat10, 1.0);
    u_xlat10 = u_xlat10 + u_xlat2.x;
    u_xlat10 = (-u_xlat1.x) * u_xlat15 + u_xlat10;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlati4 = u_xlati0.xxxx + ivec4(17, 117, 19, 115);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat2.y + (-u_xlat3.y);
    u_xlat1.x = u_xlat15 * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat2.x = max(u_xlat1.x, u_xlat11.x);
    u_xlat11.x = u_xlat11.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat11.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat2.x;
    u_xlat15 = (-u_xlat11.x) * u_xlat1.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat10 = u_xlat10 * gSampleWeightTable[2].w;
    u_xlat5.x = u_xlat10 * 0.5 + u_xlat5.x;
    u_xlat10 = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat10 = u_xlat10 * u_xlat1.y + (-u_xlat11.y);
    u_xlat15 = u_xlat10 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat11.x = u_xlat11.x * u_xlat1.y + (-u_xlat11.y);
    u_xlat1.x = u_xlat1.x * u_xlat1.y + (-u_xlat11.y);
    u_xlat2.x = max(u_xlat15, u_xlat1.x);
    u_xlat1.x = u_xlat1.x * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat10 = max(u_xlat10, u_xlat1.x);
    u_xlat10 = min(u_xlat10, 1.0);
    u_xlat10 = u_xlat10 + u_xlat2.x;
    u_xlat10 = (-u_xlat1.x) * u_xlat15 + u_xlat10;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlati4 = u_xlati0.xxxx + ivec4(21, 87, 49, 81);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat1.y + (-u_xlat11.y);
    u_xlat1.x = u_xlat15 * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat2.x = max(u_xlat1.x, u_xlat11.x);
    u_xlat11.x = u_xlat11.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat2.x = min(u_xlat2.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat11.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat2.x;
    u_xlat15 = (-u_xlat11.x) * u_xlat1.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat1.y + (-u_xlat11.y);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat11.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat11.x = u_xlat11.x * u_xlat1.y + (-u_xlat11.y);
    u_xlat1.x = u_xlat1.x * u_xlat1.y + (-u_xlat11.y);
    u_xlat2.x = u_xlat1.x * AdditionalParams.x;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat7 = max(u_xlat15, u_xlat2.x);
    u_xlat15 = u_xlat15 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat7 = min(u_xlat7, 1.0);
    u_xlat1.x = max(u_xlat15, u_xlat1.x);
    u_xlat1.x = min(u_xlat1.x, 1.0);
    u_xlat1.x = u_xlat1.x + u_xlat7;
    u_xlat15 = (-u_xlat15) * u_xlat2.x + u_xlat1.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlati4 = u_xlati0.xxxx + ivec4(55, 134, 2, 130);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat1.y + (-u_xlat11.y);
    u_xlat1.x = u_xlat15 * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat6.x = max(u_xlat1.x, u_xlat11.x);
    u_xlat11.x = u_xlat11.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat6.x = min(u_xlat6.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat11.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat6.x;
    u_xlat15 = (-u_xlat11.x) * u_xlat1.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat10 = u_xlat10 * gSampleWeightTable[1].z;
    u_xlat5.x = u_xlat10 * 0.25 + u_xlat5.x;
    u_xlat10 = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat10 = u_xlat10 * u_xlat2.z + (-u_xlat3.z);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat1.x = u_xlat1.x * u_xlat2.z + (-u_xlat3.z);
    u_xlat15 = u_xlat15 * u_xlat2.z + (-u_xlat3.z);
    u_xlat6.x = u_xlat15 * AdditionalParams.x;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat11.x = max(u_xlat10, u_xlat6.x);
    u_xlat10 = u_xlat10 * AdditionalParams.x;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlat11.x = min(u_xlat11.x, 1.0);
    u_xlat15 = max(u_xlat10, u_xlat15);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat11.x;
    u_xlat10 = (-u_xlat10) * u_xlat6.x + u_xlat15;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlati4 = u_xlati0.xxxx + ivec4(6, 104, 32, 96);
    u_xlati0.x = u_xlati0.x + 40;
    u_xlat0.x = uintBitsToFloat(TGSM0[u_xlati0.x].value[(0 >> 2) + 0]);
    u_xlat0.x = u_xlat0.x * u_xlat2.z + (-u_xlat3.z);
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.x].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat2.z + (-u_xlat3.z);
    u_xlat6.x = u_xlat15 * AdditionalParams.x;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat11.x = max(u_xlat6.x, u_xlat1.x);
    u_xlat1.x = u_xlat1.x * AdditionalParams.x;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat11.x = min(u_xlat11.x, 1.0);
    u_xlat15 = max(u_xlat15, u_xlat1.x);
    u_xlat15 = min(u_xlat15, 1.0);
    u_xlat15 = u_xlat15 + u_xlat11.x;
    u_xlat15 = (-u_xlat1.x) * u_xlat6.x + u_xlat15;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat15 = uintBitsToFloat(TGSM0[u_xlati4.y].value[(0 >> 2) + 0]);
    u_xlat15 = u_xlat15 * u_xlat2.z + (-u_xlat3.z);
    u_xlat1.x = uintBitsToFloat(TGSM0[u_xlati4.z].value[(0 >> 2) + 0]);
    u_xlat6.x = uintBitsToFloat(TGSM0[u_xlati4.w].value[(0 >> 2) + 0]);
    u_xlat6.x = u_xlat6.x * u_xlat2.z + (-u_xlat3.z);
    u_xlat1.x = u_xlat1.x * u_xlat2.z + (-u_xlat3.z);
    u_xlat11.x = u_xlat1.x * AdditionalParams.x;
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat1.w = max(u_xlat15, u_xlat11.x);
    u_xlat15 = u_xlat15 * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.x = max(u_xlat15, u_xlat1.x);
    u_xlat1.xw = min(u_xlat1.xw, vec2(1.0, 1.0));
    u_xlat1.x = u_xlat1.x + u_xlat1.w;
    u_xlat15 = (-u_xlat15) * u_xlat11.x + u_xlat1.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat10 = u_xlat15 + u_xlat10;
    u_xlat15 = u_xlat0.x * AdditionalParams.x;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.x = max(u_xlat15, u_xlat6.x);
    u_xlat6.x = u_xlat6.x * AdditionalParams.x;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat1.x = min(u_xlat1.x, 1.0);
    u_xlat0.x = max(u_xlat0.x, u_xlat6.x);
    u_xlat0.x = min(u_xlat0.x, 1.0);
    u_xlat0.x = u_xlat0.x + u_xlat1.x;
    u_xlat0.x = (-u_xlat6.x) * u_xlat15 + u_xlat0.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x + u_xlat10;
    u_xlat0.x = u_xlat0.x * gSampleWeightTable[2].z;
    u_xlat0.x = u_xlat0.x * 0.25 + u_xlat5.x;
    u_xlat0.x = u_xlat0.x + -1.0;
    u_xlat0.x = AdditionalParams.y * u_xlat0.x + 1.0;
    u_xlati1 = ivec4(gl_GlobalInvocationID.xyyy) << (ivec4(2, 2, 2, 2) & int(0x1F));
    u_xlatu2.x = gl_GlobalInvocationID.z & 3u;
    u_xlatu2.yzw = gl_GlobalInvocationID.zzz >> (uvec3(2u, 2u, 2u) & uint(0x1F));
    u_xlati1 = ivec4(uvec4(u_xlati1) | u_xlatu2);
    imageStore(Occlusion_origX0X, u_xlati1.xy, u_xlat0.xxxx);
    return;
}


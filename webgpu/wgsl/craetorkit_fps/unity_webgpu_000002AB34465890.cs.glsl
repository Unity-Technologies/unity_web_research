#version 440

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
precise vec4 u_xlat_precise_vec4;
precise ivec4 u_xlat_precise_ivec4;
precise bvec4 u_xlat_precise_bvec4;
precise uvec4 u_xlat_precise_uvec4;
layout(set = 1, binding = 0, std140) uniform CB1 {
	vec4 gInvThicknessTable[3];
	vec4 gSampleWeightTable[3];
	vec4 gInvSliceDimension;
	vec2 AdditionalParams;
};
layout(set = 0, binding = 0) uniform highp texture2D DepthTex;
writeonly layout(set = 0, binding = 1, rg32f) highp uniform image2D Occlusion_origX0X;
shared struct {
	uint value[2];
} TGSM0[1024];
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(set = 0, binding = 2) uniform highp  sampler samplerDepthTex;
void main()
{
vec4 u_xlat0;
ivec2 u_xlati0;
vec4 u_xlat1;
ivec4 u_xlati1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
ivec4 u_xlati5;
vec4 u_xlat6;
ivec4 u_xlati6;
vec4 u_xlat7;
ivec4 u_xlati7;
vec4 u_xlat8;
ivec4 u_xlati8;
vec4 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
vec2 u_xlat12;
ivec2 u_xlati12;
vec3 u_xlat13;
vec2 u_xlat28;
    u_xlati0.xy = ivec2(gl_LocalInvocationID.xy) + ivec2(gl_GlobalInvocationID.xy);
    u_xlati0.xy = u_xlati0.xy + ivec2(int(0xFFFFFFF9u), int(0xFFFFFFF9u));
    u_xlat0.xy = vec2(u_xlati0.xy);
    u_xlat0.xy = u_xlat0.xy * gInvSliceDimension.xy;
    u_xlat1 = textureGather(sampler2D(DepthTex, samplerDepthTex), u_xlat0.xy).xzyw;
    u_xlat0 = textureGather(sampler2D(DepthTex, samplerDepthTex), u_xlat0.xy, 1);
    u_xlat2.xz = u_xlat1.wy;
    u_xlat2.yw = u_xlat0.wz;
    u_xlat1.yw = u_xlat0.xy;
    u_xlati0.x = int(gl_LocalInvocationID.x) << (1 & int(0x1F));
    u_xlati0.x = int(gl_LocalInvocationID.y) * 64 + u_xlati0.x;
    TGSM0[u_xlati0.x].value[(0 >> 2)] = floatBitsToUint(u_xlat2.x);
    TGSM0[u_xlati0.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat2.y);
    u_xlati12.x = u_xlati0.x + 1;
    TGSM0[u_xlati12.x].value[(0 >> 2)] = floatBitsToUint(u_xlat2.z);
    TGSM0[u_xlati12.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat2.w);
    u_xlati12.xy = u_xlati0.xx + ivec2(32, 33);
    TGSM0[u_xlati12.x].value[(0 >> 2)] = floatBitsToUint(u_xlat1.x);
    TGSM0[u_xlati12.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat1.y);
    TGSM0[u_xlati12.y].value[(0 >> 2)] = floatBitsToUint(u_xlat1.z);
    TGSM0[u_xlati12.y].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat1.w);
    //memoryBarrierShared;
    barrier();
    u_xlati0.x = int(gl_LocalInvocationID.y) * 32 + int(gl_LocalInvocationID.x);
    u_xlati1 = u_xlati0.xxxx + ivec4(256, 264, 268, 260);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati1.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati1.w].value[(0 >> 2) + 1]));
    u_xlat13.xz = vec2(uintBitsToFloat(TGSM0[u_xlati1.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati1.y].value[(0 >> 2) + 1]));
    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat13.xzxx;
    u_xlat3 = u_xlat2.wywy * gInvThicknessTable[0].yyww;
    u_xlat13.xz = gInvThicknessTable[0].yw + vec2(-0.5, -0.5);
    u_xlat4 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat13.xxxx);
    u_xlat5 = u_xlat4.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati1.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati1.z].value[(0 >> 2) + 1]));
    u_xlat1.xz = vec2(uintBitsToFloat(TGSM0[u_xlati1.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati1.x].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat1.xzxx * u_xlat3.zwzz + (-u_xlat13.zzzz);
    u_xlat7 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat13.xxxx);
    u_xlat8 = max(u_xlat5, u_xlat7);
    u_xlat7 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat8 = min(u_xlat8, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat4 = max(u_xlat4, u_xlat7);
    u_xlat4 = min(u_xlat4, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat4 = u_xlat4 + u_xlat8;
    u_xlat4 = (-u_xlat7) * u_xlat5 + u_xlat4;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlati5 = u_xlati0.xxxx + ivec4(392, 136, 272, 520);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati5.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati5.y].value[(0 >> 2) + 1]));
    u_xlat7 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat13.xxxx);
    u_xlat8 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati5.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati5.x].value[(0 >> 2) + 1]));
    u_xlat9 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat13.xxxx);
    u_xlat10 = max(u_xlat8, u_xlat9);
    u_xlat9 = u_xlat9.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = max(u_xlat7, u_xlat9);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = u_xlat7 + u_xlat10;
    u_xlat7 = (-u_xlat9) * u_xlat8 + u_xlat7;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat4 = u_xlat4 + u_xlat7;
    u_xlat4 = u_xlat4 * gSampleWeightTable[0].yyyy;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati5.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati5.w].value[(0 >> 2) + 1]));
    u_xlat1.xy = vec2(uintBitsToFloat(TGSM0[u_xlati5.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati5.z].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat1.xyxx * u_xlat3.zwzz + (-u_xlat13.zzzz);
    u_xlat7 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat13.zzzz);
    u_xlati8 = u_xlati0.xxxx + ivec4(8, 326, 202, 330);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.x].value[(0 >> 2) + 1]));
    u_xlat1 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat13.zzzz);
    u_xlat3 = u_xlat1.wyww * AdditionalParams.xxxx;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat9 = max(u_xlat3, u_xlat7);
    u_xlat7 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat1 = max(u_xlat1, u_xlat7);
    u_xlat1 = min(u_xlat1, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat1 = u_xlat1 + u_xlat9;
    u_xlat1 = (-u_xlat7) * u_xlat3 + u_xlat1;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat3 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat7 = max(u_xlat3, u_xlat5);
    u_xlat5 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = max(u_xlat5, u_xlat6);
    u_xlat6 = min(u_xlat6, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = u_xlat6 + u_xlat7;
    u_xlat3 = (-u_xlat5) * u_xlat3 + u_xlat6;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat1 = u_xlat1 + u_xlat3;
    u_xlat1 = u_xlat1 * gSampleWeightTable[0].wwww;
    u_xlat1 = u_xlat1 * vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat4 * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat1;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.z].value[(0 >> 2) + 1]));
    u_xlat3 = u_xlat2.wywy * gInvThicknessTable[1].xxzz;
    u_xlat4.xy = gInvThicknessTable[1].xz + vec2(-0.5, -0.5);
    u_xlat5 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat4.xxxx);
    u_xlat6 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.y].value[(0 >> 2) + 1]));
    u_xlat28.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.w].value[(0 >> 2) + 1]));
    u_xlat7 = u_xlat28.xyxx * u_xlat3.xyxx + (-u_xlat4.xxxx);
    u_xlat8 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat4.xxxx);
    u_xlat9 = max(u_xlat6, u_xlat8);
    u_xlat8 = u_xlat8.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat5 = max(u_xlat5, u_xlat8);
    u_xlat5 = min(u_xlat5, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat5 = u_xlat5 + u_xlat9;
    u_xlat5 = (-u_xlat8) * u_xlat6 + u_xlat5;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlati6 = u_xlati0.xxxx + ivec4(198, 388, 140, 396);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 1]));
    u_xlat8 = u_xlat12.xyxx * u_xlat3.xyxx + (-u_xlat4.xxxx);
    u_xlat9 = u_xlat8.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = max(u_xlat7, u_xlat9);
    u_xlat7 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = max(u_xlat7, u_xlat8);
    u_xlat8 = min(u_xlat8, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = u_xlat8 + u_xlat10;
    u_xlat7 = (-u_xlat7) * u_xlat9 + u_xlat8;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat5 = u_xlat5 + u_xlat7;
    u_xlat5 = u_xlat5 * gSampleWeightTable[1].xxxx;
    u_xlat1 = u_xlat5 * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat1;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat2.wywy * gInvThicknessTable[2].xxww;
    u_xlat2 = u_xlat2 * gInvThicknessTable[2].zzzz;
    u_xlat4.xzw = gInvThicknessTable[2].xwz + vec3(-0.5, -0.5, -0.5);
    u_xlat7 = u_xlat12.xyxx * u_xlat5.xyxx + (-u_xlat4.xxxx);
    u_xlat8 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 1]));
    u_xlat3.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat3.xyxx * u_xlat5.xyxx + (-u_xlat4.xxxx);
    u_xlat9 = u_xlat12.xyxx * u_xlat5.xyxx + (-u_xlat4.xxxx);
    u_xlat10 = max(u_xlat8, u_xlat9);
    u_xlat9 = u_xlat9.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = max(u_xlat7, u_xlat9);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = u_xlat7 + u_xlat10;
    u_xlat7 = (-u_xlat9) * u_xlat8 + u_xlat7;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlati8 = u_xlati0.xxxx + ivec4(132, 450, 78, 462);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.x].value[(0 >> 2) + 1]));
    u_xlat9 = u_xlat12.xyxx * u_xlat5.xyxx + (-u_xlat4.xxxx);
    u_xlat10 = u_xlat9.wyww * AdditionalParams.xxxx;
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
    u_xlat11 = max(u_xlat6, u_xlat10);
    u_xlat6 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat11 = min(u_xlat11, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat9 = max(u_xlat6, u_xlat9);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat9 = u_xlat9 + u_xlat11;
    u_xlat6 = (-u_xlat6) * u_xlat10 + u_xlat9;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat6 = u_xlat6 + u_xlat7;
    u_xlat6 = u_xlat6 * gSampleWeightTable[2].xxxx;
    u_xlat1 = u_xlat6 * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat1;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.z].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat12.xyxx * u_xlat5.zwzz + (-u_xlat4.zzzz);
    u_xlat7 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.y].value[(0 >> 2) + 1]));
    u_xlat3.xy = vec2(uintBitsToFloat(TGSM0[u_xlati8.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati8.w].value[(0 >> 2) + 1]));
    u_xlat8 = u_xlat3.xyxx * u_xlat5.zwzz + (-u_xlat4.zzzz);
    u_xlat9 = u_xlat12.xyxx * u_xlat5.zwzz + (-u_xlat4.zzzz);
    u_xlat10 = max(u_xlat7, u_xlat9);
    u_xlat9 = u_xlat9.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = max(u_xlat6, u_xlat9);
    u_xlat6 = min(u_xlat6, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = u_xlat6 + u_xlat10;
    u_xlat6 = (-u_xlat9) * u_xlat7 + u_xlat6;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlati7 = u_xlati0.xxxx + ivec4(66, 458, 70, 454);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.x].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat12.xyxx * u_xlat5.zwzz + (-u_xlat4.zzzz);
    u_xlat9 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = max(u_xlat8, u_xlat9);
    u_xlat8 = u_xlat8.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat5 = max(u_xlat5, u_xlat8);
    u_xlat5 = min(u_xlat5, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat5 = u_xlat5 + u_xlat10;
    u_xlat5 = (-u_xlat8) * u_xlat9 + u_xlat5;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat5 = u_xlat5 + u_xlat6;
    u_xlat5 = u_xlat5 * gSampleWeightTable[2].wwww;
    u_xlat1 = u_xlat5 * vec4(0.5, 0.5, 0.5, 0.5) + u_xlat1;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.y].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.z].value[(0 >> 2) + 1]));
    u_xlat3.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.w].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat3.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat7 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat8 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat9 = max(u_xlat5, u_xlat8);
    u_xlat5 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = max(u_xlat5, u_xlat7);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = u_xlat7 + u_xlat9;
    u_xlat5 = (-u_xlat5) * u_xlat8 + u_xlat7;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlati7 = u_xlati0.xxxx + ivec4(74, 334, 194, 322);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.x].value[(0 >> 2) + 1]));
    u_xlat8 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat9 = u_xlat8.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = max(u_xlat6, u_xlat9);
    u_xlat6 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = max(u_xlat6, u_xlat8);
    u_xlat8 = min(u_xlat8, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = u_xlat8 + u_xlat10;
    u_xlat6 = (-u_xlat6) * u_xlat9 + u_xlat8;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat5 = u_xlat5 + u_xlat6;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.y].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.z].value[(0 >> 2) + 1]));
    u_xlat3.xy = vec2(uintBitsToFloat(TGSM0[u_xlati7.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati7.w].value[(0 >> 2) + 1]));
    u_xlat7 = u_xlat3.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat8 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat9 = u_xlat8.wyww * AdditionalParams.xxxx;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat10 = max(u_xlat6, u_xlat9);
    u_xlat6 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat10 = min(u_xlat10, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = max(u_xlat6, u_xlat8);
    u_xlat8 = min(u_xlat8, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat8 = u_xlat8 + u_xlat10;
    u_xlat6 = (-u_xlat6) * u_xlat9 + u_xlat8;
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat5 = u_xlat5 + u_xlat6;
    u_xlati6 = u_xlati0.xxxx + ivec4(206, 524, 4, 516);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 1]));
    u_xlat3 = u_xlat12.xyxx * u_xlat3.zwzz + (-u_xlat4.yyyy);
    u_xlat8 = u_xlat3.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat9 = max(u_xlat7, u_xlat8);
    u_xlat7 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat3 = max(u_xlat3, u_xlat7);
    u_xlat3 = min(u_xlat3, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat3 = u_xlat3 + u_xlat9;
    u_xlat3 = (-u_xlat7) * u_xlat8 + u_xlat3;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 + u_xlat5;
    u_xlat3 = u_xlat3 * gSampleWeightTable[1].zzzz;
    u_xlat1 = u_xlat3 * vec4(0.25, 0.25, 0.25, 0.25) + u_xlat1;
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 1]));
    u_xlat3 = u_xlat12.xyxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat12.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 1]));
    u_xlat4.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat4.xyxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat6 = u_xlat12.xyxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat7 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat8 = max(u_xlat3, u_xlat7);
    u_xlat3 = u_xlat3.wyww * AdditionalParams.xxxx;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat8 = min(u_xlat8, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = max(u_xlat3, u_xlat6);
    u_xlat6 = min(u_xlat6, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat6 = u_xlat6 + u_xlat8;
    u_xlat3 = (-u_xlat3) * u_xlat7 + u_xlat6;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlati6 = u_xlati0.xxxx + ivec4(12, 400, 128, 384);
    u_xlati0.x = u_xlati0.x + 144;
    u_xlat0.xy = vec2(uintBitsToFloat(TGSM0[u_xlati0.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati0.x].value[(0 >> 2) + 1]));
    u_xlat0 = u_xlat0.xyxx * u_xlat2 + (-u_xlat4.wwww);
    u_xlat2.xz = vec2(uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.x].value[(0 >> 2) + 1]));
    u_xlat7 = u_xlat2.xzxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat8 = u_xlat7.wyww * AdditionalParams.xxxx;
    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);
    u_xlat9 = max(u_xlat5, u_xlat8);
    u_xlat5 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat9 = min(u_xlat9, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = max(u_xlat5, u_xlat7);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat7 = u_xlat7 + u_xlat9;
    u_xlat5 = (-u_xlat5) * u_xlat8 + u_xlat7;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat3 = u_xlat3 + u_xlat5;
    u_xlat2.xz = vec2(uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.y].value[(0 >> 2) + 1]));
    u_xlat5 = u_xlat2.xzxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat2.xz = vec2(uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.z].value[(0 >> 2) + 1]));
    u_xlat4.xy = vec2(uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 0]), uintBitsToFloat(TGSM0[u_xlati6.w].value[(0 >> 2) + 1]));
    u_xlat6 = u_xlat4.xyxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat2 = u_xlat2.xzxx * u_xlat2.wyww + (-u_xlat4.wwww);
    u_xlat4 = u_xlat2.wyww * AdditionalParams.xxxx;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat7 = max(u_xlat4, u_xlat5);
    u_xlat5 = u_xlat5.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat7 = min(u_xlat7, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat2 = max(u_xlat2, u_xlat5);
    u_xlat2 = min(u_xlat2, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat2 = u_xlat2 + u_xlat7;
    u_xlat2 = (-u_xlat5) * u_xlat4 + u_xlat2;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 + u_xlat3;
    u_xlat3 = u_xlat0.wyww * AdditionalParams.xxxx;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat4 = max(u_xlat3, u_xlat6);
    u_xlat5 = u_xlat6.wyww * AdditionalParams.xxxx;
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat4 = min(u_xlat4, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat0 = max(u_xlat0, u_xlat5);
    u_xlat0 = min(u_xlat0, vec4(1.0, 1.0, 1.0, 1.0));
    u_xlat0 = u_xlat0 + u_xlat4;
    u_xlat0 = (-u_xlat5) * u_xlat3 + u_xlat0;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 + u_xlat2;
    u_xlat0 = u_xlat0 * gSampleWeightTable[2].zzzz;
    u_xlat0 = u_xlat0 * vec4(0.25, 0.25, 0.25, 0.25) + u_xlat1;
    u_xlat0 = u_xlat0 + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat0 = AdditionalParams.yyyy * u_xlat0 + vec4(1.0, 1.0, 1.0, 1.0);
    imageStore(Occlusion_origX0X, ivec2(gl_GlobalInvocationID.xy), u_xlat0);
    return;
}

